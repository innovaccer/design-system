// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DateRangePicker component 
  
 1`] = `
<Calendar
  contentAlign="left"
  endDate={2020-03-11T00:00:00.000Z}
  firstDayOfWeek="sunday"
  inputOptions={
    Object {
      "label": "Date",
    }
  }
  monthsInView={1}
  onRangeChange={[Function]}
  rangePicker={true}
  startDate={2020-03-03T00:00:00.000Z}
  view="date"
/>
`;

exports[`DateRangePicker component 
  monthsInView: 1
 1`] = `
<Calendar
  contentAlign="left"
  endDate={2020-03-11T00:00:00.000Z}
  firstDayOfWeek="sunday"
  inputOptions={
    Object {
      "label": "Date",
    }
  }
  monthsInView={1}
  onRangeChange={[Function]}
  rangePicker={true}
  startDate={2020-03-03T00:00:00.000Z}
  view="date"
/>
`;

exports[`DateRangePicker component 
  monthsInView: 1
 2`] = `
<Calendar
  contentAlign="left"
  endDate={2020-03-11T00:00:00.000Z}
  firstDayOfWeek="sunday"
  inputOptions={
    Object {
      "label": "Date",
    }
  }
  monthNav={11}
  monthsInView={1}
  onRangeChange={[Function]}
  rangePicker={true}
  startDate={2020-03-03T00:00:00.000Z}
  view="date"
  yearNav={2019}
/>
`;

exports[`DateRangePicker component 
  monthsInView: 2
 1`] = `
<Calendar
  contentAlign="left"
  endDate={2020-03-11T00:00:00.000Z}
  firstDayOfWeek="sunday"
  inputOptions={
    Object {
      "label": "Date",
    }
  }
  monthsInView={2}
  onRangeChange={[Function]}
  rangePicker={true}
  startDate={2020-03-03T00:00:00.000Z}
  view="date"
/>
`;

exports[`DateRangePicker component 
  monthsInView: 2
 2`] = `
<Calendar
  contentAlign="left"
  endDate={2020-03-11T00:00:00.000Z}
  firstDayOfWeek="sunday"
  inputOptions={
    Object {
      "label": "Date",
    }
  }
  monthNav={11}
  monthsInView={2}
  onRangeChange={[Function]}
  rangePicker={true}
  startDate={2020-03-03T00:00:00.000Z}
  view="date"
  yearNav={2019}
/>
`;

exports[`DateRangePicker component 
  monthsInView: 3
 1`] = `
<Calendar
  contentAlign="left"
  endDate={2020-03-11T00:00:00.000Z}
  firstDayOfWeek="sunday"
  inputOptions={
    Object {
      "label": "Date",
    }
  }
  monthsInView={3}
  onRangeChange={[Function]}
  rangePicker={true}
  startDate={2020-03-03T00:00:00.000Z}
  view="date"
/>
`;

exports[`DateRangePicker component 
  monthsInView: 3
 2`] = `
<Calendar
  contentAlign="left"
  endDate={2020-03-11T00:00:00.000Z}
  firstDayOfWeek="sunday"
  inputOptions={
    Object {
      "label": "Date",
    }
  }
  monthNav={11}
  monthsInView={3}
  onRangeChange={[Function]}
  rangePicker={true}
  startDate={2020-03-03T00:00:00.000Z}
  view="date"
  yearNav={2019}
/>
`;

exports[`DateRangePicker component 
  open: false
 1`] = `
<Popover
  appendToBody={true}
  className="DateRangePicker DateRangePicker--left"
  closeOnBackdropClick={true}
  customStyle={Object {}}
  hideOnReferenceEscape={true}
  on="click"
  onToggle={[Function]}
  open={false}
  position="bottom-start"
  trigger={
    <Unknown
      endInputOptions={
        Object {
          "label": "End Date",
        }
      }
      inputFormat="mm/dd/yyyy"
      setState={[Function]}
      startInputOptions={
        Object {
          "label": "Start Date",
        }
      }
      state={
        Object {
          "endDate": 2020-03-11T00:00:00.000Z,
          "endError": false,
          "endValue": "03/11/2020",
          "init": false,
          "monthNav": undefined,
          "open": false,
          "startDate": 2020-03-03T00:00:00.000Z,
          "startError": false,
          "startValue": "03/03/2020",
          "yearNav": undefined,
        }
      }
      validators={
        Array [
          [Function],
        ]
      }
    />
  }
  triggerClass="w-100"
>
  <Calendar
    contentAlign="left"
    endDate={2020-03-11T00:00:00.000Z}
    firstDayOfWeek="sunday"
    inputOptions={
      Object {
        "label": "Date",
      }
    }
    monthsInView={2}
    onRangeChange={[Function]}
    rangePicker={true}
    startDate={2020-03-03T00:00:00.000Z}
    view="date"
  />
</Popover>
`;

exports[`DateRangePicker component 
  open: true
 1`] = `
<Popover
  appendToBody={true}
  className="DateRangePicker DateRangePicker--left"
  closeOnBackdropClick={true}
  customStyle={Object {}}
  hideOnReferenceEscape={true}
  on="click"
  onToggle={[Function]}
  open={true}
  position="bottom-start"
  trigger={
    <Unknown
      endInputOptions={
        Object {
          "label": "End Date",
        }
      }
      inputFormat="mm/dd/yyyy"
      setState={[Function]}
      startInputOptions={
        Object {
          "label": "Start Date",
        }
      }
      state={
        Object {
          "endDate": 2020-03-11T00:00:00.000Z,
          "endError": false,
          "endValue": "03/11/2020",
          "init": false,
          "monthNav": undefined,
          "open": true,
          "startDate": 2020-03-03T00:00:00.000Z,
          "startError": false,
          "startValue": "03/03/2020",
          "yearNav": undefined,
        }
      }
      validators={
        Array [
          [Function],
        ]
      }
    />
  }
  triggerClass="w-100"
>
  <Calendar
    contentAlign="left"
    endDate={2020-03-11T00:00:00.000Z}
    firstDayOfWeek="sunday"
    inputOptions={
      Object {
        "label": "Date",
      }
    }
    monthsInView={2}
    onRangeChange={[Function]}
    rangePicker={true}
    startDate={2020-03-03T00:00:00.000Z}
    view="date"
  />
</Popover>
`;

exports[`DateRangePicker component 
  view: "date"
 1`] = `
<Calendar
  contentAlign="left"
  endDate={2020-03-11T00:00:00.000Z}
  firstDayOfWeek="sunday"
  inputOptions={
    Object {
      "label": "Date",
    }
  }
  monthsInView={1}
  onRangeChange={[Function]}
  rangePicker={true}
  startDate={2020-03-03T00:00:00.000Z}
  view="date"
/>
`;

exports[`DateRangePicker component 
  view: "month"
 1`] = `
<Calendar
  contentAlign="left"
  endDate={2020-03-11T00:00:00.000Z}
  firstDayOfWeek="sunday"
  inputOptions={
    Object {
      "label": "Date",
    }
  }
  monthsInView={1}
  onRangeChange={[Function]}
  rangePicker={true}
  startDate={2020-03-03T00:00:00.000Z}
  view="month"
/>
`;

exports[`DateRangePicker component 
  view: "year"
 1`] = `
<Calendar
  contentAlign="left"
  endDate={2020-03-11T00:00:00.000Z}
  firstDayOfWeek="sunday"
  inputOptions={
    Object {
      "label": "Date",
    }
  }
  monthsInView={1}
  onRangeChange={[Function]}
  rangePicker={true}
  startDate={2020-03-03T00:00:00.000Z}
  view="year"
/>
`;

exports[`DateRangePicker component 
  withInput: false
 1`] = `
<Calendar
  contentAlign="left"
  endDate={2020-03-11T00:00:00.000Z}
  firstDayOfWeek="sunday"
  inputOptions={
    Object {
      "label": "Date",
    }
  }
  monthsInView={1}
  onRangeChange={[Function]}
  rangePicker={true}
  startDate={2020-03-03T00:00:00.000Z}
  view="date"
/>
`;

exports[`DateRangePicker component 
  withInput: true
 1`] = `
<Popover
  appendToBody={true}
  className="DateRangePicker DateRangePicker--left"
  closeOnBackdropClick={true}
  customStyle={Object {}}
  hideOnReferenceEscape={true}
  on="click"
  onToggle={[Function]}
  open={false}
  position="bottom-start"
  trigger={
    <Unknown
      endInputOptions={
        Object {
          "label": "End Date",
        }
      }
      inputFormat="mm/dd/yyyy"
      setState={[Function]}
      startInputOptions={
        Object {
          "label": "Start Date",
        }
      }
      state={
        Object {
          "endDate": 2020-03-11T00:00:00.000Z,
          "endError": false,
          "endValue": "03/11/2020",
          "init": false,
          "monthNav": undefined,
          "open": false,
          "startDate": 2020-03-03T00:00:00.000Z,
          "startError": false,
          "startValue": "03/03/2020",
          "yearNav": undefined,
        }
      }
      validators={
        Array [
          [Function],
        ]
      }
    />
  }
  triggerClass="w-100"
>
  <Calendar
    contentAlign="left"
    endDate={2020-03-11T00:00:00.000Z}
    firstDayOfWeek="sunday"
    inputOptions={
      Object {
        "label": "Date",
      }
    }
    monthsInView={2}
    onRangeChange={[Function]}
    rangePicker={true}
    startDate={2020-03-03T00:00:00.000Z}
    view="date"
  />
</Popover>
`;
