// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Avatar Icon component 
  size: "regular", appearance: "accent1"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--regular Avatar--accent1 Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--accent1Darker Avatar-content"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 20px; width: 20px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--regular Avatar--accent1 Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--accent1Darker Avatar-content"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 20px; width: 20px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "regular", appearance: "accent2"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--regular Avatar--accent2 Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--white"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 20px; width: 20px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--regular Avatar--accent2 Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--white"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 20px; width: 20px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "regular", appearance: "accent3"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--regular Avatar--accent3 Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--white"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 20px; width: 20px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--regular Avatar--accent3 Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--white"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 20px; width: 20px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "regular", appearance: "accent4"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--regular Avatar--accent4 Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--accent4Darker Avatar-content"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 20px; width: 20px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--regular Avatar--accent4 Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--accent4Darker Avatar-content"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 20px; width: 20px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "regular", appearance: "alert"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--regular Avatar--alert Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--white"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 20px; width: 20px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--regular Avatar--alert Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--white"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 20px; width: 20px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "regular", appearance: "primary"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--regular Avatar--primary Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--white"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 20px; width: 20px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--regular Avatar--primary Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--white"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 20px; width: 20px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "regular", appearance: "secondary"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--regular Avatar--secondary Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--inverse Avatar-content"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 20px; width: 20px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--regular Avatar--secondary Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--inverse Avatar-content"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 20px; width: 20px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "regular", appearance: "success"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--regular Avatar--success Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--successDarker Avatar-content"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 20px; width: 20px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--regular Avatar--success Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--successDarker Avatar-content"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 20px; width: 20px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "regular", appearance: "warning"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--regular Avatar--warning Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--warningDarker Avatar-content"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 20px; width: 20px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--regular Avatar--warning Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--warningDarker Avatar-content"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 20px; width: 20px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "tiny", appearance: "accent1"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--tiny Avatar--accent1 Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--accent1Darker Avatar-content"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 16px; width: 16px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--tiny Avatar--accent1 Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--accent1Darker Avatar-content"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 16px; width: 16px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "tiny", appearance: "accent2"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--tiny Avatar--accent2 Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--white"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 16px; width: 16px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--tiny Avatar--accent2 Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--white"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 16px; width: 16px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "tiny", appearance: "accent3"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--tiny Avatar--accent3 Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--white"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 16px; width: 16px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--tiny Avatar--accent3 Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--white"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 16px; width: 16px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "tiny", appearance: "accent4"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--tiny Avatar--accent4 Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--accent4Darker Avatar-content"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 16px; width: 16px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--tiny Avatar--accent4 Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--accent4Darker Avatar-content"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 16px; width: 16px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "tiny", appearance: "alert"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--tiny Avatar--alert Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--white"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 16px; width: 16px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--tiny Avatar--alert Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--white"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 16px; width: 16px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "tiny", appearance: "primary"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--tiny Avatar--primary Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--white"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 16px; width: 16px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--tiny Avatar--primary Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--white"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 16px; width: 16px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "tiny", appearance: "secondary"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--tiny Avatar--secondary Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--inverse Avatar-content"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 16px; width: 16px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--tiny Avatar--secondary Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--inverse Avatar-content"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 16px; width: 16px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "tiny", appearance: "success"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--tiny Avatar--success Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--successDarker Avatar-content"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 16px; width: 16px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--tiny Avatar--success Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--successDarker Avatar-content"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 16px; width: 16px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Avatar Icon component 
  size: "tiny", appearance: "warning"
 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="position-relative d-inline-flex"
      >
        <span
          class=""
          data-test="DesignSystem-AvatarWrapper"
          role="presentation"
        >
          <span
            class="Avatar Avatar--tiny Avatar--warning Avatar--noInitials Avatar--default"
            data-test="DesignSystem-Avatar"
            tabindex="0"
          >
            <i
              class="material-symbols material-symbols-rounded Icon Icon--warningDarker Avatar-content"
              data-test="DesignSystem-Icon"
              role="button"
              style="font-size: 16px; width: 16px;"
            >
              events
            </i>
          </span>
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="position-relative d-inline-flex"
    >
      <span
        class=""
        data-test="DesignSystem-AvatarWrapper"
        role="presentation"
      >
        <span
          class="Avatar Avatar--tiny Avatar--warning Avatar--noInitials Avatar--default"
          data-test="DesignSystem-Avatar"
          tabindex="0"
        >
          <i
            class="material-symbols material-symbols-rounded Icon Icon--warningDarker Avatar-content"
            data-test="DesignSystem-Icon"
            role="button"
            style="font-size: 16px; width: 16px;"
          >
            events
          </i>
        </span>
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
