{
  "args": {},
  "componentId": "components-tabs-all",
  "title": "Components/Tabs/All",
  "kind": "Components/Tabs/All",
  "id": "components-tabs-all--all",
  "name": "All",
  "story": "All",
  "parameters": {
    "docs": {
      "inlineStories": true,
      "iframeHeight": 100,
      "theme": {
        "base": "light",
        "colorPrimary": "#0000001a",
        "colorSecondary": "deepskyblue",
        "appBg": "white",
        "appContentBg": "white",
        "appBorderColor": "#0000001a",
        "appBorderRadius": 4,
        "fontBase": "\"Nunito Sans\", \"Open Sans\", sans-serif",
        "fontCode": "monospace",
        "textColor": "black",
        "textInverseColor": "rgba(255,255,255,0.9)",
        "textMutedColor": "#666666",
        "barTextColor": "silver",
        "barSelectedColor": "black",
        "barBg": "white",
        "inputBg": "white",
        "inputBorder": "silver",
        "inputTextColor": "black",
        "inputBorderRadius": 4,
        "brandTitle": "Masala Design System v2.10.0-0",
        "brandUrl": "https://github.com/innovaccer/design-system/"
      },
      "docPage": {
        "customCode": "() => {\n  const [activeIndex, setActiveIndex] = React.useState(0);\n\n  const onTabChangeHandler = (tabIndex) => {\n    setActiveIndex(tabIndex);\n  };\n\n  return(\n    <Tabs\n      activeIndex={activeIndex}\n      onTabChange={onTabChangeHandler}\n    >\n      <Tab label=\"Tab(Recommended)\" count={10}>\n        <div>Tab(Recommended)</div>\n      </Tab>\n      <Tab label=\"All\" icon=\"call_received\">\n        <div>All</div>\n      </Tab>\n      <Tab label=\"Extras\" disabled={true}>\n        <div>Extras</div>\n      </Tab>\n    </Tabs>\n  );\n}"
      }
    },
    "framework": "react",
    "backgrounds": {
      "grid": {
        "cellSize": 20,
        "opacity": 0.5,
        "cellAmount": 5
      },
      "values": [
        {
          "name": "light",
          "value": "#F8F8F8"
        },
        {
          "name": "dark",
          "value": "#333333"
        }
      ]
    },
    "viewMode": "docs",
    "actions": {
      "argTypesRegex": "^on[A-Z].*"
    },
    "a11y": {
      "element": "#root",
      "manual": false
    },
    "viewport": {
      "viewports": {
        "iphone5": {
          "name": "iPhone 5",
          "styles": {
            "height": "568px",
            "width": "320px"
          },
          "type": "mobile"
        },
        "iphone6": {
          "name": "iPhone 6",
          "styles": {
            "height": "667px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone6p": {
          "name": "iPhone 6 Plus",
          "styles": {
            "height": "736px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphone8p": {
          "name": "iPhone 8 Plus",
          "styles": {
            "height": "736px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonex": {
          "name": "iPhone X",
          "styles": {
            "height": "812px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphonexr": {
          "name": "iPhone XR",
          "styles": {
            "height": "896px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonexsmax": {
          "name": "iPhone XS Max",
          "styles": {
            "height": "896px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonese2": {
          "name": "iPhone SE (2nd generation)",
          "styles": {
            "height": "667px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone12mini": {
          "name": "iPhone 12 mini",
          "styles": {
            "height": "812px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone12": {
          "name": "iPhone 12",
          "styles": {
            "height": "844px",
            "width": "390px"
          },
          "type": "mobile"
        },
        "iphone12promax": {
          "name": "iPhone 12 Pro Max",
          "styles": {
            "height": "926px",
            "width": "428px"
          },
          "type": "mobile"
        },
        "ipad": {
          "name": "iPad",
          "styles": {
            "height": "1024px",
            "width": "768px"
          },
          "type": "tablet"
        },
        "ipad10p": {
          "name": "iPad Pro 10.5-in",
          "styles": {
            "height": "1112px",
            "width": "834px"
          },
          "type": "tablet"
        },
        "ipad12p": {
          "name": "iPad Pro 12.9-in",
          "styles": {
            "height": "1366px",
            "width": "1024px"
          },
          "type": "tablet"
        },
        "galaxys5": {
          "name": "Galaxy S5",
          "styles": {
            "height": "640px",
            "width": "360px"
          },
          "type": "mobile"
        },
        "galaxys9": {
          "name": "Galaxy S9",
          "styles": {
            "height": "740px",
            "width": "360px"
          },
          "type": "mobile"
        },
        "nexus5x": {
          "name": "Nexus 5X",
          "styles": {
            "height": "660px",
            "width": "412px"
          },
          "type": "mobile"
        },
        "nexus6p": {
          "name": "Nexus 6P",
          "styles": {
            "height": "732px",
            "width": "412px"
          },
          "type": "mobile"
        },
        "pixel": {
          "name": "Pixel",
          "styles": {
            "height": "960px",
            "width": "540px"
          },
          "type": "mobile"
        },
        "pixelxl": {
          "name": "Pixel XL",
          "styles": {
            "height": "1280px",
            "width": "720px"
          },
          "type": "mobile"
        }
      }
    },
    "controls": {
      "expanded": true
    },
    "options": {},
    "fileName": "./core/components/molecules/tabs/__stories__/index.story.jsx",
    "storySource": {
      "source": "() => {\n  const [activeIndex, setActiveIndex] = React.useState(0);\n\n  const onTabChangeHandler = (tabIndex) => {\n    setActiveIndex(tabIndex);\n    return action(`tab-change: ${tabIndex}`)();\n  };\n\n  return (\n    <Tabs activeIndex={activeIndex} onTabChange={onTabChangeHandler}>\n      <Tab label=\"Tab(Recommended)\" count={10}>\n        <div>Tab(Recommended)</div>\n      </Tab>\n      <Tab label=\"All\" icon=\"call_received\">\n        <div>All</div>\n      </Tab>\n      <Tab label=\"Extras\" disabled={true}>\n        <div>Extras</div>\n      </Tab>\n    </Tabs>\n  );\n}"
    },
    "__isArgsStory": false,
    "__id": "components-tabs-all--all",
    "globals": {
      "measureEnabled": false,
      "outline": false
    },
    "args": {},
    "argTypes": {
      "activeIndex": {
        "name": "activeIndex",
        "description": "Index of desired selected `Tab`",
        "type": {
          "required": false,
          "name": "other",
          "value": "number | undefined"
        },
        "table": {
          "type": {
            "summary": "number | undefined"
          },
          "defaultValue": null
        }
      },
      "withSeparator": {
        "name": "withSeparator",
        "description": "Shows border at bottom of  `Tabs`",
        "type": {
          "required": false,
          "name": "other",
          "value": "boolean | undefined"
        },
        "table": {
          "type": {
            "summary": "boolean | undefined"
          },
          "defaultValue": {
            "summary": "true"
          }
        }
      },
      "tabs": {
        "name": "tabs",
        "description": "List of tabs\n<pre className=\"DocPage-codeBlock\">\n  Tab {\n    label: React.ReactText;\n    count?: number;\n    icon?: string;\n    disabled?: boolean;\n    className?: string;\n    isDismissible?: boolean;\n    onDismiss?: (tabInfo: object) => void;\n  }\n</pre>\n\n| Name | Description | Default |\n| --- | --- | --- |\n| label | Label of Tab |  |\n| count | Count of Tab | |\n| icon | Icon to be rendered inside Tab | |\n| disabled | Determines if tab is disabled | |\n| className | Class on tab content | |\n| isDismissible | Determines if tab is dismissible | |\n| onDismiss | Called with tab info when a tab is being removed | |",
        "type": {
          "required": false,
          "name": "other",
          "value": "TabConfig[]"
        },
        "table": {
          "type": {
            "summary": "TabConfig[]"
          },
          "defaultValue": {
            "summary": "[]"
          }
        }
      },
      "children": {
        "name": "children",
        "description": "`Tab` Component will be wrapped in `Tabs` container",
        "type": {
          "required": false,
          "name": "other",
          "value": "ReactElement<any, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ReactElement<any, string | ... 1 more ... | (new (props: any) => Component<...>)>[] | undefined"
        },
        "table": {
          "type": {
            "summary": "ReactElement<any, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ReactElement<any, string | ... 1 more ... | (new (props: any) => Component<...>)>[] | undefined"
          },
          "defaultValue": null
        }
      },
      "onTabChange": {
        "name": "onTabChange",
        "description": "Called with a new index when a new tab is selected by user",
        "type": {
          "required": false,
          "name": "function",
          "value": "((tabIndex: number) => void) | undefined"
        },
        "table": {
          "type": {
            "summary": "((tabIndex: number) => void) | undefined"
          },
          "defaultValue": null
        }
      },
      "className": {
        "name": "className",
        "description": "Adds custom class",
        "type": {
          "required": false,
          "name": "other",
          "value": "string | undefined"
        },
        "table": {
          "type": {
            "summary": "string | undefined"
          },
          "defaultValue": null
        }
      },
      "data-test": {
        "name": "data-test",
        "description": "Stores custom testing data private to the component.",
        "type": {
          "required": false,
          "name": "other",
          "value": "string | undefined"
        },
        "table": {
          "type": {
            "summary": "string | undefined"
          },
          "defaultValue": null
        }
      }
    }
  },
  "initialArgs": {},
  "argTypes": {
    "activeIndex": {
      "name": "activeIndex",
      "description": "Index of desired selected `Tab`",
      "type": {
        "required": false,
        "name": "other",
        "value": "number | undefined"
      },
      "table": {
        "type": {
          "summary": "number | undefined"
        },
        "defaultValue": null
      }
    },
    "withSeparator": {
      "name": "withSeparator",
      "description": "Shows border at bottom of  `Tabs`",
      "type": {
        "required": false,
        "name": "other",
        "value": "boolean | undefined"
      },
      "table": {
        "type": {
          "summary": "boolean | undefined"
        },
        "defaultValue": {
          "summary": "true"
        }
      }
    },
    "tabs": {
      "name": "tabs",
      "description": "List of tabs\n<pre className=\"DocPage-codeBlock\">\n  Tab {\n    label: React.ReactText;\n    count?: number;\n    icon?: string;\n    disabled?: boolean;\n    className?: string;\n    isDismissible?: boolean;\n    onDismiss?: (tabInfo: object) => void;\n  }\n</pre>\n\n| Name | Description | Default |\n| --- | --- | --- |\n| label | Label of Tab |  |\n| count | Count of Tab | |\n| icon | Icon to be rendered inside Tab | |\n| disabled | Determines if tab is disabled | |\n| className | Class on tab content | |\n| isDismissible | Determines if tab is dismissible | |\n| onDismiss | Called with tab info when a tab is being removed | |",
      "type": {
        "required": false,
        "name": "other",
        "value": "TabConfig[]"
      },
      "table": {
        "type": {
          "summary": "TabConfig[]"
        },
        "defaultValue": {
          "summary": "[]"
        }
      }
    },
    "children": {
      "name": "children",
      "description": "`Tab` Component will be wrapped in `Tabs` container",
      "type": {
        "required": false,
        "name": "other",
        "value": "ReactElement<any, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ReactElement<any, string | ... 1 more ... | (new (props: any) => Component<...>)>[] | undefined"
      },
      "table": {
        "type": {
          "summary": "ReactElement<any, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ReactElement<any, string | ... 1 more ... | (new (props: any) => Component<...>)>[] | undefined"
        },
        "defaultValue": null
      }
    },
    "onTabChange": {
      "name": "onTabChange",
      "description": "Called with a new index when a new tab is selected by user",
      "type": {
        "required": false,
        "name": "function",
        "value": "((tabIndex: number) => void) | undefined"
      },
      "table": {
        "type": {
          "summary": "((tabIndex: number) => void) | undefined"
        },
        "defaultValue": null
      }
    },
    "className": {
      "name": "className",
      "description": "Adds custom class",
      "type": {
        "required": false,
        "name": "other",
        "value": "string | undefined"
      },
      "table": {
        "type": {
          "summary": "string | undefined"
        },
        "defaultValue": null
      }
    },
    "data-test": {
      "name": "data-test",
      "description": "Stores custom testing data private to the component.",
      "type": {
        "required": false,
        "name": "other",
        "value": "string | undefined"
      },
      "table": {
        "type": {
          "summary": "string | undefined"
        },
        "defaultValue": null
      }
    }
  }
}