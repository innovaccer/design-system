{
  "args": {},
  "componentId": "components-chat-chat-message",
  "title": "Components/Chat/Chat Message",
  "kind": "Components/Chat/Chat Message",
  "id": "components-chat-chat-message--chat-message",
  "name": "Chat Message",
  "story": "Chat Message",
  "parameters": {
    "docs": {
      "inlineStories": true,
      "theme": {
        "base": "light",
        "colorPrimary": "#0000001a",
        "colorSecondary": "deepskyblue",
        "appBg": "white",
        "appContentBg": "white",
        "appBorderColor": "#0000001a",
        "appBorderRadius": 4,
        "fontBase": "\"Nunito Sans\", \"Open Sans\", sans-serif",
        "fontCode": "monospace",
        "textColor": "black",
        "textInverseColor": "rgba(255,255,255,0.9)",
        "textMutedColor": "#666666",
        "barTextColor": "silver",
        "barSelectedColor": "black",
        "barBg": "white",
        "inputBg": "white",
        "inputBorder": "silver",
        "inputTextColor": "black",
        "inputBorderRadius": 4,
        "brandTitle": "Masala Design System v3.4.0",
        "brandUrl": "https://github.com/innovaccer/design-system/"
      }
    },
    "framework": "react",
    "backgrounds": {
      "grid": {
        "cellSize": 20,
        "opacity": 0.5,
        "cellAmount": 5
      },
      "values": [
        {
          "name": "light",
          "value": "#F8F8F8"
        },
        {
          "name": "dark",
          "value": "#333333"
        }
      ]
    },
    "viewMode": "docs",
    "actions": {
      "argTypesRegex": "^on[A-Z].*"
    },
    "a11y": {
      "element": "#root",
      "manual": false
    },
    "viewport": {
      "viewports": {
        "iphone5": {
          "name": "iPhone 5",
          "styles": {
            "height": "568px",
            "width": "320px"
          },
          "type": "mobile"
        },
        "iphone6": {
          "name": "iPhone 6",
          "styles": {
            "height": "667px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone6p": {
          "name": "iPhone 6 Plus",
          "styles": {
            "height": "736px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphone8p": {
          "name": "iPhone 8 Plus",
          "styles": {
            "height": "736px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonex": {
          "name": "iPhone X",
          "styles": {
            "height": "812px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphonexr": {
          "name": "iPhone XR",
          "styles": {
            "height": "896px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonexsmax": {
          "name": "iPhone XS Max",
          "styles": {
            "height": "896px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonese2": {
          "name": "iPhone SE (2nd generation)",
          "styles": {
            "height": "667px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone12mini": {
          "name": "iPhone 12 mini",
          "styles": {
            "height": "812px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone12": {
          "name": "iPhone 12",
          "styles": {
            "height": "844px",
            "width": "390px"
          },
          "type": "mobile"
        },
        "iphone12promax": {
          "name": "iPhone 12 Pro Max",
          "styles": {
            "height": "926px",
            "width": "428px"
          },
          "type": "mobile"
        },
        "ipad": {
          "name": "iPad",
          "styles": {
            "height": "1024px",
            "width": "768px"
          },
          "type": "tablet"
        },
        "ipad10p": {
          "name": "iPad Pro 10.5-in",
          "styles": {
            "height": "1112px",
            "width": "834px"
          },
          "type": "tablet"
        },
        "ipad12p": {
          "name": "iPad Pro 12.9-in",
          "styles": {
            "height": "1366px",
            "width": "1024px"
          },
          "type": "tablet"
        },
        "galaxys5": {
          "name": "Galaxy S5",
          "styles": {
            "height": "640px",
            "width": "360px"
          },
          "type": "mobile"
        },
        "galaxys9": {
          "name": "Galaxy S9",
          "styles": {
            "height": "740px",
            "width": "360px"
          },
          "type": "mobile"
        },
        "nexus5x": {
          "name": "Nexus 5X",
          "styles": {
            "height": "660px",
            "width": "412px"
          },
          "type": "mobile"
        },
        "nexus6p": {
          "name": "Nexus 6P",
          "styles": {
            "height": "732px",
            "width": "412px"
          },
          "type": "mobile"
        },
        "pixel": {
          "name": "Pixel",
          "styles": {
            "height": "960px",
            "width": "540px"
          },
          "type": "mobile"
        },
        "pixelxl": {
          "name": "Pixel XL",
          "styles": {
            "height": "1280px",
            "width": "720px"
          },
          "type": "mobile"
        }
      }
    },
    "controls": {
      "expanded": true
    },
    "options": {},
    "fileName": "./core/components/molecules/chatMessage/__stories__/UserMessage.story.jsx",
    "storySource": {
      "source": "() => {\n  const type = 'incoming';\n  const statusType = 'sent';\n  const isTyping = false;\n  const message = 'Hello, there.';\n  const typingText = 'Typing..';\n  const failedMessage = 'Click to retry';\n  const sendingMessage = 'Sending';\n\n  const options = {\n    type,\n    isTyping,\n    typingText,\n    failedMessage,\n    sendingMessage,\n    text: message,\n    statusOptions: { type: statusType, time: '10:11 AM' },\n  };\n\n  return (\n    <div className=\"w-25\">\n      <ChatMessage {...options} />\n    </div>\n  );\n}"
    },
    "__isArgsStory": false,
    "__id": "components-chat-chat-message--chat-message",
    "globals": {
      "measureEnabled": false,
      "outline": false
    },
    "args": {},
    "argTypes": {
      "type": {
        "name": "type",
        "description": "Type of `ChatMessage`\n\nMessageType = 'incoming' | 'outgoing';",
        "type": {
          "required": true,
          "name": "enum",
          "value": [
            "incoming",
            "outgoing"
          ]
        },
        "table": {
          "type": {
            "summary": "\"incoming\" | \"outgoing\""
          },
          "defaultValue": null
        }
      },
      "isTyping": {
        "name": "isTyping",
        "description": "Determines if user is typing",
        "type": {
          "required": false,
          "name": "other",
          "value": "boolean | undefined"
        },
        "table": {
          "type": {
            "summary": "boolean | undefined"
          },
          "defaultValue": null
        }
      },
      "statusOptions": {
        "name": "statusOptions",
        "description": "<pre style=\"font-family: monospace; font-size: 13px; background: #f8f8f8\">\nStatusProps: {\n   type: 'failed' | 'sending' | 'sent' | 'read' | 'urgent';;\n   time?: string | number;\n   readText?: string;\n   failedText?: string;\n   sendingText?: string;\n}\n</pre>\n\n| Name | Description | Default |\n| --- | --- | --- |\n| type | Type of message status | |\n| time | Time at which message was sent/recieved | |\n| readText | Message to be shown if chat message is read | Read |\n| failedText | Message to be shown if chat message can't be delivered | Click to retry |\n| sendingText | Message to be shown while sending chat message | Sending |",
        "type": {
          "required": false,
          "name": "other",
          "value": "StatusProps | undefined"
        },
        "table": {
          "type": {
            "summary": "StatusProps | undefined"
          },
          "defaultValue": null
        }
      },
      "className": {
        "name": "className",
        "description": "Adds custom class",
        "type": {
          "required": false,
          "name": "other",
          "value": "string | undefined"
        },
        "table": {
          "type": {
            "summary": "string | undefined"
          },
          "defaultValue": null
        }
      },
      "data-test": {
        "name": "data-test",
        "description": "Stores custom testing data private to the component.",
        "type": {
          "required": false,
          "name": "other",
          "value": "string | undefined"
        },
        "table": {
          "type": {
            "summary": "string | undefined"
          },
          "defaultValue": null
        }
      },
      "onClick": {
        "name": "onClick",
        "description": "Callback function called when chat message is clicked.",
        "type": {
          "required": false,
          "name": "function",
          "value": "((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"
        },
        "table": {
          "type": {
            "summary": "((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"
          },
          "defaultValue": null
        }
      },
      "text": {
        "name": "text",
        "description": "Text Message",
        "type": {
          "required": true,
          "name": "string"
        },
        "table": {
          "type": {
            "summary": "string"
          },
          "defaultValue": null
        }
      },
      "typingText": {
        "name": "typingText",
        "description": "Message to be shown while user is typing",
        "type": {
          "required": true,
          "name": "string"
        },
        "table": {
          "type": {
            "summary": "string"
          },
          "defaultValue": null
        }
      }
    }
  },
  "initialArgs": {},
  "argTypes": {
    "type": {
      "name": "type",
      "description": "Type of `ChatMessage`\n\nMessageType = 'incoming' | 'outgoing';",
      "type": {
        "required": true,
        "name": "enum",
        "value": [
          "incoming",
          "outgoing"
        ]
      },
      "table": {
        "type": {
          "summary": "\"incoming\" | \"outgoing\""
        },
        "defaultValue": null
      }
    },
    "isTyping": {
      "name": "isTyping",
      "description": "Determines if user is typing",
      "type": {
        "required": false,
        "name": "other",
        "value": "boolean | undefined"
      },
      "table": {
        "type": {
          "summary": "boolean | undefined"
        },
        "defaultValue": null
      }
    },
    "statusOptions": {
      "name": "statusOptions",
      "description": "<pre style=\"font-family: monospace; font-size: 13px; background: #f8f8f8\">\nStatusProps: {\n   type: 'failed' | 'sending' | 'sent' | 'read' | 'urgent';;\n   time?: string | number;\n   readText?: string;\n   failedText?: string;\n   sendingText?: string;\n}\n</pre>\n\n| Name | Description | Default |\n| --- | --- | --- |\n| type | Type of message status | |\n| time | Time at which message was sent/recieved | |\n| readText | Message to be shown if chat message is read | Read |\n| failedText | Message to be shown if chat message can't be delivered | Click to retry |\n| sendingText | Message to be shown while sending chat message | Sending |",
      "type": {
        "required": false,
        "name": "other",
        "value": "StatusProps | undefined"
      },
      "table": {
        "type": {
          "summary": "StatusProps | undefined"
        },
        "defaultValue": null
      }
    },
    "className": {
      "name": "className",
      "description": "Adds custom class",
      "type": {
        "required": false,
        "name": "other",
        "value": "string | undefined"
      },
      "table": {
        "type": {
          "summary": "string | undefined"
        },
        "defaultValue": null
      }
    },
    "data-test": {
      "name": "data-test",
      "description": "Stores custom testing data private to the component.",
      "type": {
        "required": false,
        "name": "other",
        "value": "string | undefined"
      },
      "table": {
        "type": {
          "summary": "string | undefined"
        },
        "defaultValue": null
      }
    },
    "onClick": {
      "name": "onClick",
      "description": "Callback function called when chat message is clicked.",
      "type": {
        "required": false,
        "name": "function",
        "value": "((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"
      },
      "table": {
        "type": {
          "summary": "((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"
        },
        "defaultValue": null
      }
    },
    "text": {
      "name": "text",
      "description": "Text Message",
      "type": {
        "required": true,
        "name": "string"
      },
      "table": {
        "type": {
          "summary": "string"
        },
        "defaultValue": null
      }
    },
    "typingText": {
      "name": "typingText",
      "description": "Message to be shown while user is typing",
      "type": {
        "required": true,
        "name": "string"
      },
      "table": {
        "type": {
          "summary": "string"
        },
        "defaultValue": null
      }
    }
  }
}