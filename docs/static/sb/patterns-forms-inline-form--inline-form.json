{
  "args": {},
  "componentId": "patterns-forms-inline-form",
  "title": "Patterns/Forms/Inline Form",
  "kind": "Patterns/Forms/Inline Form",
  "id": "patterns-forms-inline-form--inline-form",
  "name": "Inline Form",
  "story": "Inline Form",
  "parameters": {
    "docs": {
      "inlineStories": true,
      "theme": {
        "base": "light",
        "colorPrimary": "#0000001a",
        "colorSecondary": "deepskyblue",
        "appBg": "white",
        "appContentBg": "white",
        "appBorderColor": "#0000001a",
        "appBorderRadius": 4,
        "fontBase": "\"Nunito Sans\", \"Open Sans\", sans-serif",
        "fontCode": "monospace",
        "textColor": "black",
        "textInverseColor": "rgba(255,255,255,0.9)",
        "textMutedColor": "#666666",
        "barTextColor": "silver",
        "barSelectedColor": "black",
        "barBg": "white",
        "inputBg": "white",
        "inputBorder": "silver",
        "inputTextColor": "black",
        "inputBorderRadius": 4,
        "brandTitle": "Masala Design System v3.4.0",
        "brandUrl": "https://github.com/innovaccer/design-system/"
      },
      "docPage": {
        "customCode": "\n\n() => {\n  class InlineForm extends React.Component {\n\n    constructor(props = {}) {\n      super(props);\n\n      this.state = {\n        searchDisabled: true,\n        data: {},\n      };\n\n      this.onChange = this.onChange.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(value, name) {\n      const updatedData = { ...this.state.data, [name]: value };\n\n      this.setState({\n        data: updatedData,\n        searchDisabled: Object.keys(updatedData).every(key => !updatedData[key])\n      });\n    }\n\n    onSubmit(e) {\n      e.preventDefault();\n      console.log(this.state.data);\n      return false;\n    }\n\n    render() {\n      const options = [];\n      for (let i = 1; i <= 10; i++) {\n        options.push({\n          label: `Option ${i}`,\n          value: `Option ${i}`,\n        });\n      }\n\n      return (\n        <div className=\"w-100\">\n          <Card className=\"px-6 py-6\">\n            <form onSubmit={this.onSubmit}>\n              <div className=\"d-flex flex-wrap\">\n                <div className=\"mr-6 mb-6\">\n                  <Label withInput={true}>Last Name</Label>\n                  <Input\n                    name=\"lastName\"\n                    type=\"text\"\n                    placeholder=\"E.g. Doe, Smith, etc.\"\n                    icon=\"person\"\n                    autocomplete={'off'}\n                    onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                  />\n                </div>\n                <div className=\"mr-6 mb-6\">\n                  <Label withInput={true}>First Name</Label>\n                  <Input\n                    name=\"firstName\"\n                    type=\"text\"\n                    placeholder=\"E.g. John, Will, etc.\"\n                    icon=\"person\"\n                    autocomplete={'off'}\n                    onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                  />\n                </div>\n                <div className=\"mr-6 mb-6\">\n                  <Label withInput={true}>Gender</Label>\n                  <div className=\"d-flex\">\n                    <Button className=\"mr-3\" onClick={() => this.onChange('Male', 'gender')}>Male</Button>\n                    <Button className=\"mr-3\" onClick={() => this.onChange('Female', 'gender')}>Female</Button>\n                    <Button className=\"mr-3\" onClick={() => this.onChange('Other', 'gender')}>Other</Button>\n                    <Button onClick={() => this.onChange('Unknown', 'gender')}>Unknown</Button>\n                  </div>\n                </div>\n                <div className=\"mr-6 mb-6\" style={{ width: 'var(--spacing-9)' }}>\n                  <Label withInput={true}>Date of Birth</Label>\n                  <DatePicker\n                    withInput={true}\n                    onDateChange={(currentDate) => this.onChange(currentDate, 'date')}\n                    inputOptions={{\n                      placeholder: 'MM/DD/YYYY',\n                      icon: 'cake',\n                      mask: [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]\n                    }}\n                  />\n                </div>\n                <div className=\"mr-6 mb-6\">\n                  <Label withInput={true}>EMPI</Label>\n                  <Input\n                    name=\"empi\"\n                    type=\"text\"\n                    placeholder=\"P000000\"\n                    icon=\"fingerprint\"\n                    autocomplete={'off'}\n                    onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                  />\n                </div>\n                <div className=\"mr-6 mb-6\">\n                  <Label withInput={true}>MRN</Label>\n                  <Input\n                    name=\"mrn\"\n                    type=\"text\"\n                    placeholder=\"Medical Record Number\"\n                    icon=\"account_box\"\n                    autocomplete={'off'}\n                    onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                  />\n                </div>\n                <div className=\"mr-6 mb-6\">\n                  <Label withInput={true}>ZIP</Label>\n                  <Input\n                    name=\"zip\"\n                    type=\"text\"\n                    placeholder=\"00000\"\n                    icon=\"location_on\"\n                    autocomplete={'off'}\n                    onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                  />\n                </div>\n                <div className=\"mr-6 mb-6\" style={{ width: 'var(--spacing-9)' }}>\n                  <Label withInput={true}>Primary Care Physician</Label>\n                  <Dropdown\n                    icon=\"add_box\"\n                    placeholder=\"00000\"\n                    options={options}\n                    onChange={(option) => this.onChange(option, 'pcp')}\n                  />\n                </div>\n                <div className=\"mr-6 mb-6\" style={{ width: 'var(--spacing-9)' }}>\n                  <Label withInput={true}>Region</Label>\n                  <Dropdown\n                    icon=\"flag\"\n                    placeholder=\"00000\"\n                    options={options}\n                    onChange={(option) => this.onChange(option, 'region')}\n                  />\n                </div>\n              </div>\n              <Button\n                disabled={this.state.searchDisabled}\n                appearance=\"primary\"\n                type=\"submit\"\n              >\n                Search\n              </Button>\n            </form>\n          </Card>\n        </div>\n      );\n    }\n  }\n\n  return <InlineForm />\n}",
        "title": "Inline Form",
        "noProps": true
      }
    },
    "framework": "react",
    "backgrounds": {
      "grid": {
        "cellSize": 20,
        "opacity": 0.5,
        "cellAmount": 5
      },
      "values": [
        {
          "name": "light",
          "value": "#F8F8F8"
        },
        {
          "name": "dark",
          "value": "#333333"
        }
      ]
    },
    "viewMode": "docs",
    "actions": {
      "argTypesRegex": "^on[A-Z].*"
    },
    "a11y": {
      "element": "#root",
      "manual": false
    },
    "viewport": {
      "viewports": {
        "iphone5": {
          "name": "iPhone 5",
          "styles": {
            "height": "568px",
            "width": "320px"
          },
          "type": "mobile"
        },
        "iphone6": {
          "name": "iPhone 6",
          "styles": {
            "height": "667px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone6p": {
          "name": "iPhone 6 Plus",
          "styles": {
            "height": "736px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphone8p": {
          "name": "iPhone 8 Plus",
          "styles": {
            "height": "736px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonex": {
          "name": "iPhone X",
          "styles": {
            "height": "812px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphonexr": {
          "name": "iPhone XR",
          "styles": {
            "height": "896px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonexsmax": {
          "name": "iPhone XS Max",
          "styles": {
            "height": "896px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonese2": {
          "name": "iPhone SE (2nd generation)",
          "styles": {
            "height": "667px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone12mini": {
          "name": "iPhone 12 mini",
          "styles": {
            "height": "812px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone12": {
          "name": "iPhone 12",
          "styles": {
            "height": "844px",
            "width": "390px"
          },
          "type": "mobile"
        },
        "iphone12promax": {
          "name": "iPhone 12 Pro Max",
          "styles": {
            "height": "926px",
            "width": "428px"
          },
          "type": "mobile"
        },
        "ipad": {
          "name": "iPad",
          "styles": {
            "height": "1024px",
            "width": "768px"
          },
          "type": "tablet"
        },
        "ipad10p": {
          "name": "iPad Pro 10.5-in",
          "styles": {
            "height": "1112px",
            "width": "834px"
          },
          "type": "tablet"
        },
        "ipad12p": {
          "name": "iPad Pro 12.9-in",
          "styles": {
            "height": "1366px",
            "width": "1024px"
          },
          "type": "tablet"
        },
        "galaxys5": {
          "name": "Galaxy S5",
          "styles": {
            "height": "640px",
            "width": "360px"
          },
          "type": "mobile"
        },
        "galaxys9": {
          "name": "Galaxy S9",
          "styles": {
            "height": "740px",
            "width": "360px"
          },
          "type": "mobile"
        },
        "nexus5x": {
          "name": "Nexus 5X",
          "styles": {
            "height": "660px",
            "width": "412px"
          },
          "type": "mobile"
        },
        "nexus6p": {
          "name": "Nexus 6P",
          "styles": {
            "height": "732px",
            "width": "412px"
          },
          "type": "mobile"
        },
        "pixel": {
          "name": "Pixel",
          "styles": {
            "height": "960px",
            "width": "540px"
          },
          "type": "mobile"
        },
        "pixelxl": {
          "name": "Pixel XL",
          "styles": {
            "height": "1280px",
            "width": "720px"
          },
          "type": "mobile"
        }
      }
    },
    "controls": {
      "expanded": true
    },
    "options": {},
    "fileName": "./core/components/patterns/forms/InlineForm.story.tsx",
    "storySource": {
      "source": "() => <></>"
    },
    "__isArgsStory": false,
    "__id": "patterns-forms-inline-form--inline-form",
    "globals": {
      "measureEnabled": false,
      "outline": false
    },
    "args": {},
    "argTypes": {}
  },
  "initialArgs": {},
  "argTypes": {}
}