
  /**
   * Generated on: 2025-06-16T09:28:59.628Z 
   *      Package: @innovaccer/design-system
   *      Version: v5.0.0-9
   *      License: MIT
   *         Docs: https://mds.innovaccer.com
   */

    
import * as React from 'react';
import React__default, { useRef, useReducer, useCallback, useEffect as useEffect$2, useMemo, useState as useState$3 } from 'react';
import * as ReactDOM from 'react-dom';
import { flushSync } from 'react-dom';
import { Player } from '@lottiefiles/react-lottie-player';

const colorToHex = color => getComputedStyle(document.documentElement).getPropertyValue(`--${color}`);

var css = /*#__PURE__*/Object.freeze({
  __proto__: null,
  colorToHex: colorToHex
});

const placeholders = {
  ['hh:mm']: '--:--',
  ['hh:mm AM']: '--:-- AM'
};
const isPlaceholderPresent = (placeholderChar, time) => {
  return time && time.includes(placeholderChar);
};
const isFormat12hour = format => {
  return format === 'hh:mm AM';
};
const get12hourFormat = hours => {
  const AMPM = hours < 12 ? 'AM' : 'PM';
  const hrs = hours % 12 || 12;
  return {
    hrs,
    AMPM
  };
};
const get24hourFormat = (hours, am_pm) => {
  let convertedHours = hours;
  if (am_pm) {
    if (am_pm === 'PM' && hours < 12) {
      convertedHours = hours + 12;
    } else if (am_pm === 'AM' && hours === 12) {
      convertedHours = hours - 12;
    }
    return convertedHours;
  }
  return hours;
};
const translateToTime = (format, time) => {
  if (!time) return '';
  if (typeof time === 'number') {
    const timeObj = getTimeObjectFromNumber(format, time);
    return translateToString$1(format, timeObj);
  }
  return time;
};
const getTimeObjectFromNumber = (format, time) => {
  const d = new Date(time);
  const hrs = d.getHours();
  const hours = isFormat12hour(format) ? get12hourFormat(hrs).hrs : hrs;
  const am_pm = isFormat12hour(format) ? get12hourFormat(hrs).AMPM : '';
  const minutes = d.getMinutes();
  const seconds = d.getSeconds();
  return {
    hours,
    minutes,
    seconds,
    am_pm
  };
};
const getTimeObjFromStr = (format, time) => {
  const separator = ':';
  let hours = 0;
  let minutes = 0;
  const len = format.length;
  const timeLength = time.length;
  const lastChars = format.substring(len - 2, len);
  const is12hrFormat = lastChars === 'AM' || lastChars === 'PM';
  const am_pm = is12hrFormat ? time.substring(timeLength - 2, timeLength) : '';
  const timeFormat = is12hrFormat ? time.substring(0, timeLength - 3) : time;
  const inputFormat = is12hrFormat ? format.substring(0, len - 3) : format;
  const v = timeFormat.split(separator);
  inputFormat.split(separator).forEach((f, i) => {
    switch (f) {
      case 'hh':
        hours = +v[i] || 0;
        break;
      case 'mm':
        minutes = +v[i] || 0;
        break;
    }
  });
  return {
    hours,
    minutes,
    am_pm
  };
};
const getOutputTimeString = (inputFormat, outputFormat, time) => {
  if (inputFormat === outputFormat) return time;
  const {
    hours,
    minutes,
    am_pm
  } = getTimeObjFromStr(inputFormat, time);
  const AMPM = isFormat12hour(outputFormat) ? get12hourFormat(hours).AMPM : '';
  const hrs = isFormat12hour(outputFormat) ? get12hourFormat(hours).hrs : get24hourFormat(hours, am_pm);
  const timeStr = translateToString$1(outputFormat, {
    minutes,
    hours: hrs,
    am_pm: AMPM
  });
  return timeStr;
};
const translateToString$1 = (format, time) => {
  const {
    hours,
    minutes,
    am_pm
  } = time;
  const separator = ':';
  const timeFormat = format.split(' ');
  const v = timeFormat[0].split(separator);
  let val = '';
  v.forEach((f, i) => {
    switch (f) {
      case 'hh':
        val += hours < 10 ? `0${hours}` : hours;
        break;
      case 'mm':
        val += minutes < 10 ? `0${minutes}` : minutes;
        break;
    }
    if (i !== f.length - 1) val += separator;
  });
  val += isFormat12hour(format) && am_pm ? ` ${am_pm}` : '';
  return val;
};

const isValid = (validators, ...value) => {
  const iterator = Array.isArray(validators) ? validators : [validators];
  return iterator.every(validator => validator(...value));
};
const date$1 = (val, format) => {
  const validate = (date, month, year) => {
    const monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

    // Adjust for leap years
    if (year % 400 == 0 || year % 100 != 0 && year % 4 == 0) monthLength[1] = 29;

    // Check the range of the day
    return month <= 12 && date <= monthLength[month - 1];
  };
  if (val) {
    switch (format) {
      case 'dd/mm/yyyy':
        {
          const p = val.split('/');
          const date = +p[0] || 1;
          const month = +p[1] || 1;
          const year = +p[2] || 1900;
          return validate(date, month, year);
        }
      case 'mm/dd/yyyy':
        {
          const p = val.split('/');
          const date = +p[1] || 1;
          const month = +p[0] || 1;
          const year = +p[2] || 1900;
          return validate(date, month, year);
        }
      case 'yyyy/mm/dd':
        {
          const p = val.split('/');
          const date = +p[2] || 1;
          const month = +p[1] || 1;
          const year = +p[0] || 1900;
          return validate(date, month, year);
        }
      case 'dd-mm-yyyy':
        {
          const p = val.split('-');
          const date = +p[0] || 1;
          const month = +p[1] || 1;
          const year = +p[2] || 1900;
          return validate(date, month, year);
        }
      case 'mm-dd-yyyy':
        {
          const p = val.split('-');
          const date = +p[1] || 1;
          const month = +p[0] || 1;
          const year = +p[2] || 1900;
          return validate(date, month, year);
        }
      case 'yyyy-mm-dd':
        {
          const p = val.split('-');
          const date = +p[2] || 1;
          const month = +p[1] || 1;
          const year = +p[0] || 1900;
          return validate(date, month, year);
        }
      default:
        return false;
    }
  }
  return false;
};
const time$1 = (val, format) => {
  const {
    hours,
    minutes
  } = getTimeObjFromStr(format, val);
  const hoursCond = isFormat12hour(format) ? hours <= 12 : hours < 24;
  return hoursCond && minutes <= 60;
};
const isNaturalNumber = val => {
  if (typeof val === 'string' && /[^0-9]/.test(val) || typeof val === 'number' && (val <= 0 || val - Math.floor(val) !== 0)) {
    return false;
  }
  return true;
};

var validators = /*#__PURE__*/Object.freeze({
  __proto__: null,
  date: date$1,
  isNaturalNumber: isNaturalNumber,
  isValid: isValid,
  time: time$1
});

const date = {
  'dd/mm/yyyy': [/[0123]/, /\d/, '/', /[01]/, /\d/, '/', /\d/, /\d/, /\d/, /\d/],
  'mm/dd/yyyy': [/[01]/, /\d/, '/', /[0123]/, /\d/, '/', /\d/, /\d/, /\d/, /\d/],
  'yyyy/mm/dd': [/\d/, /\d/, /\d/, /\d/, '/', /[01]/, /\d/, '/', /[0123]/, /\d/],
  'dd-mm-yyyy': [/[0123]/, /\d/, '-', /[01]/, /\d/, '-', /\d/, /\d/, /\d/, /\d/],
  'mm-dd-yyyy': [/[01]/, /\d/, '-', /[0123]/, /\d/, '-', /\d/, /\d/, /\d/, /\d/],
  'yyyy-mm-dd': [/\d/, /\d/, /\d/, /\d/, '-', /[01]/, /\d/, '-', /[0123]/, /\d/]
};
const rangeDate = {
  'dd/mm/yyyy': [/[0123]/, /\d/, '/', /[01]/, /\d/, '/', /\d/, /\d/, /\d/, /\d/, ' ', '-', ' ', /[0123]/, /\d/, '/', /[01]/, /\d/, '/', /\d/, /\d/, /\d/, /\d/],
  'mm/dd/yyyy': [/[01]/, /\d/, '/', /[0123]/, /\d/, '/', /\d/, /\d/, /\d/, /\d/, ' ', '-', ' ', /[01]/, /\d/, '/', /[0123]/, /\d/, '/', /\d/, /\d/, /\d/, /\d/],
  'yyyy/mm/dd': [/\d/, /\d/, /\d/, /\d/, '/', /[01]/, /\d/, '/', /[0123]/, /\d/, ' ', '-', ' ', /\d/, /\d/, /\d/, /\d/, '/', /[01]/, /\d/, '/', /[0123]/, /\d/],
  'dd-mm-yyyy': [/[0123]/, /\d/, '-', /[01]/, /\d/, '-', /\d/, /\d/, /\d/, /\d/, ' ', '-', ' ', /[0123]/, /\d/, '-', /[01]/, /\d/, '-', /\d/, /\d/, /\d/, /\d/],
  'mm-dd-yyyy': [/[01]/, /\d/, '-', /[0123]/, /\d/, '-', /\d/, /\d/, /\d/, /\d/, ' ', '-', ' ', /[01]/, /\d/, '-', /[0123]/, /\d/, '-', /\d/, /\d/, /\d/, /\d/],
  'yyyy-mm-dd': [/\d/, /\d/, /\d/, /\d/, '-', /[01]/, /\d/, '-', /[0123]/, /\d/, ' ', '-', ' ', /\d/, /\d/, /\d/, /\d/, '-', /[01]/, /\d/, '-', /[0123]/, /\d/]
};
const time = {
  ['hh:mm']: [/[0-1-2]/, /\d/, ':', /[0-5]/, /\d/],
  ['hh:mm AM']: [/[0-1]/, /\d/, ':', /[0-5]/, /\d/, ' ', /[APap]/, 'M']
};

var masks = /*#__PURE__*/Object.freeze({
  __proto__: null,
  date: date,
  rangeDate: rangeDate,
  time: time
});

var index = /*#__PURE__*/Object.freeze({
  __proto__: null,
  css: css,
  masks: masks,
  validators: validators
});

function _defineProperty$1(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[r] = t, e;
}
function _extends$2() {
  return _extends$2 = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends$2.apply(null, arguments);
}
function _toPrimitive(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r);
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == typeof i ? i : i + "";
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

var classnames = {exports: {}};

/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/

(function (module) {
	/* global define */

	(function () {

		var hasOwn = {}.hasOwnProperty;

		function classNames () {
			var classes = '';

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (arg) {
					classes = appendClass(classes, parseValue(arg));
				}
			}

			return classes;
		}

		function parseValue (arg) {
			if (typeof arg === 'string' || typeof arg === 'number') {
				return arg;
			}

			if (typeof arg !== 'object') {
				return '';
			}

			if (Array.isArray(arg)) {
				return classNames.apply(null, arg);
			}

			if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
				return arg.toString();
			}

			var classes = '';

			for (var key in arg) {
				if (hasOwn.call(arg, key) && arg[key]) {
					classes = appendClass(classes, key);
				}
			}

			return classes;
		}

		function appendClass (value, newClass) {
			if (!newClass) {
				return value;
			}
		
			if (value) {
				return value + ' ' + newClass;
			}
		
			return value + newClass;
		}

		if (module.exports) {
			classNames.default = classNames;
			module.exports = classNames;
		} else {
			window.classNames = classNames;
		}
	}()); 
} (classnames));

var classnamesExports = classnames.exports;
var classNames = /*@__PURE__*/getDefaultExportFromCjs(classnamesExports);

// export type DefaultProps<T> = T extends { defaultProps: any }
//   ? T['defaultProps']
//   : {};
// export type Props<T, U> = Omit<T, keyof U> & {
//   [P in keyof T & keyof U]?: T[P];
// };

const extractBaseProps = props => {
  const baseProps = ['className', 'data-test'];
  const basePropsObj = baseProps.reduce((acc, curr) => {
    return props[curr] ? {
      ...acc,
      [curr]: props[curr]
    } : {
      ...acc
    };
  }, {});
  return basePropsObj;
};
const filterProps = (props, propsList, include) => Object.entries(props).filter(obj => include ? propsList.includes(obj[0]) : !propsList.includes(obj[0])).reduce((acc, curr) => {
  acc[curr[0]] = curr[1];
  return acc;
}, {});

const AvatarContext = /*#__PURE__*/React.createContext({
  size: 'regular',
  appearance: 'secondary',
  firstName: '',
  lastName: '',
  darkAppearance: []
});
var AvatarProvider = AvatarContext.Provider;

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z$1i = "/* Avatar */\n\n.avatar-module-Avatar-D8RSu-5-0-0-9 {\n  display: flex;\n  flex-grow: 0;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  text-transform: uppercase;\n  border-radius: var(--border-radius-full);\n  cursor: default;\n  position: relative;\n}\n\n.avatar-module-Avatar--default-0YGXC-5-0-0-9:focus,\n.avatar-module-Avatar--default-0YGXC-5-0-0-9:focus-visible {\n  outline: 3px solid var(--primary-shadow);\n  outline-offset: 3px;\n}\n\n.avatar-module-Avatar-wrapper--square--Pcj7-5-0-0-9 {\n  padding: var(--spacing-2-5);\n  box-sizing: border-box;\n}\n\n.avatar-module-Avatar--square-lGJGN-5-0-0-9 {\n  width: 100%;\n  height: 100%;\n  border-radius: var(--border-radius-10);\n}\n\n.avatar-module-Avatar--regular-ewNzb-5-0-0-9 {\n  height: var(--spacing-80);\n  width: var(--spacing-80);\n}\n\n.avatar-module-Avatar--tiny-Veo-U-5-0-0-9 {\n  height: var(--spacing-60);\n  width: var(--spacing-60);\n}\n\n.avatar-module-Avatar--noInitials-do2M4-5-0-0-9 {\n  cursor: default;\n}\n\n.avatar-module-Avatar--disabled-7nTRh-5-0-0-9 {\n  cursor: not-allowed;\n}\n\n.avatar-module-Avatar--disabled-7nTRh-5-0-0-9::after {\n  opacity: var(--opacity-20);\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n  pointer-events: none;\n  content: '';\n  background-color: var(--white);\n}\n\n.avatar-module-Avatar--primary-MthKO-5-0-0-9 {\n  background: var(--primary);\n}\n\n.avatar-module-Avatar--secondary-Fru0H-5-0-0-9 {\n  background: var(--secondary-light);\n}\n\n.avatar-module-Avatar--success-KErql-5-0-0-9 {\n  background: var(--success);\n}\n\n.avatar-module-Avatar--alert-mtBzz-5-0-0-9 {\n  background: var(--alert);\n}\n\n.avatar-module-Avatar--warning-OUu3j-5-0-0-9 {\n  background: var(--warning);\n}\n\n.avatar-module-Avatar--accent1-Q0YGB-5-0-0-9 {\n  background: var(--accent1);\n}\n\n.avatar-module-Avatar--accent2-70bqJ-5-0-0-9 {\n  background: var(--accent2);\n}\n\n.avatar-module-Avatar--accent3-GEYFR-5-0-0-9 {\n  background: var(--accent3);\n}\n\n.avatar-module-Avatar--accent4-PHVye-5-0-0-9 {\n  background: var(--accent4);\n}\n\n.avatar-module-Avatar-content--tiny-ZKHWg-5-0-0-9 {\n  line-height: var(--font-height-s) !important;\n  font-size: 10px !important;\n}\n\n.avatar-module-Avatar-content-lNC3F-5-0-0-9 {\n  color: var(--inverse) !important;\n  opacity: var(--opacity-20);\n  mix-blend-mode: multiply;\n}\n\n.avatar-module-Avatar-presence-ByKmm-5-0-0-9 {\n  position: absolute;\n  border-radius: var(--border-radius-full);\n  width: var(--spacing-20);\n  height: var(--spacing-20);\n  right: 0;\n  bottom: 0;\n}\n\n.avatar-module-Avatar-presence--active-AU4X3-5-0-0-9 {\n  background: var(--success);\n}\n\n.avatar-module-Avatar-presence--away-CDNWs-5-0-0-9 {\n  background: var(--secondary-dark);\n}\n\n.avatar-module-Avatar-status-03nd7-5-0-0-9 {\n  top: calc(-1 * var(--spacing-05));\n  right: calc(-1 * var(--spacing-05));\n  width: var(--spacing-30);\n  height: var(--spacing-30);\n  border-radius: var(--border-radius-full);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  cursor: pointer;\n  overflow: hidden;\n}\n";
var avatarStyles = {"Avatar":"avatar-module-Avatar-D8RSu-5-0-0-9","Avatar--default":"avatar-module-Avatar--default-0YGXC-5-0-0-9","Avatar-wrapper--square":"avatar-module-Avatar-wrapper--square--Pcj7-5-0-0-9","Avatar--square":"avatar-module-Avatar--square-lGJGN-5-0-0-9","Avatar--regular":"avatar-module-Avatar--regular-ewNzb-5-0-0-9","Avatar--tiny":"avatar-module-Avatar--tiny-Veo-U-5-0-0-9","Avatar--noInitials":"avatar-module-Avatar--noInitials-do2M4-5-0-0-9","Avatar--disabled":"avatar-module-Avatar--disabled-7nTRh-5-0-0-9","Avatar--primary":"avatar-module-Avatar--primary-MthKO-5-0-0-9","Avatar--secondary":"avatar-module-Avatar--secondary-Fru0H-5-0-0-9","Avatar--success":"avatar-module-Avatar--success-KErql-5-0-0-9","Avatar--alert":"avatar-module-Avatar--alert-mtBzz-5-0-0-9","Avatar--warning":"avatar-module-Avatar--warning-OUu3j-5-0-0-9","Avatar--accent1":"avatar-module-Avatar--accent1-Q0YGB-5-0-0-9","Avatar--accent2":"avatar-module-Avatar--accent2-70bqJ-5-0-0-9","Avatar--accent3":"avatar-module-Avatar--accent3-GEYFR-5-0-0-9","Avatar--accent4":"avatar-module-Avatar--accent4-PHVye-5-0-0-9","Avatar-content--tiny":"avatar-module-Avatar-content--tiny-ZKHWg-5-0-0-9","Avatar-content":"avatar-module-Avatar-content-lNC3F-5-0-0-9","Avatar-presence":"avatar-module-Avatar-presence-ByKmm-5-0-0-9","Avatar-presence--active":"avatar-module-Avatar-presence--active-AU4X3-5-0-0-9","Avatar-presence--away":"avatar-module-Avatar-presence--away-CDNWs-5-0-0-9","Avatar-status":"avatar-module-Avatar-status-03nd7-5-0-0-9"};
styleInject(css_248z$1i);

const appearanceMapper = {
  secondary: 'inverse',
  primary: 'white',
  alert: 'white',
  accent2: 'white',
  accent3: 'white',
  warning: 'warning_darker',
  success: 'success_darker',
  accent1: 'accent1_darker',
  accent4: 'accent4_darker'
};
const AvatarIcon = props => {
  const contextProp = React.useContext(AvatarContext);
  const {
    size,
    appearance,
    darkAppearance = []
  } = contextProp;
  const iconSize = size === 'regular' ? 20 : 16;
  const iconAppearance = appearance && appearanceMapper[appearance] || 'inverse';
  const IconClassNames = classNames({
    [avatarStyles['Avatar-content']]: appearance && darkAppearance.includes(appearance)
  });
  return /*#__PURE__*/React.createElement(Icon, _extends$2({}, props, {
    size: iconSize,
    appearance: iconAppearance,
    className: IconClassNames
  }));
};

const sizeMapper = {
  regular: 32,
  tiny: 24
};
const AvatarImage = props => {
  const {
    children,
    src
  } = props;
  const [error, setError] = React.useState(false);
  const contextProp = React.useContext(AvatarContext);
  const {
    size,
    appearance,
    firstName,
    lastName,
    darkAppearance
  } = contextProp;
  const baseProps = extractBaseProps(props);
  const initials = `${firstName ? firstName.trim()[0] : ''}${lastName ? lastName.trim()[0] : ''}`;
  const imgSize = size && sizeMapper[size];
  const TextClassNames = classNames({
    [avatarStyles[`Avatar-content--${size}`]]: size,
    [avatarStyles['Avatar-content']]: appearance && darkAppearance.includes(appearance)
  });
  const IconClassNames = classNames({
    [avatarStyles['Avatar-content']]: appearance && darkAppearance.includes(appearance)
  });
  const onError = () => {
    setError(true);
  };
  if (children) {
    return /*#__PURE__*/React.createElement(React.Fragment, null, children);
  }
  if (error) {
    if (initials) {
      return /*#__PURE__*/React.createElement(Text, _extends$2({
        weight: "medium",
        appearance: 'white',
        className: TextClassNames
      }, baseProps), initials);
    }
    return /*#__PURE__*/React.createElement(Icon, {
      "data-test": "DesignSystem-Avatar--Icon",
      name: "person",
      size: size === 'regular' ? 20 : 16,
      appearance: "white",
      className: IconClassNames
    });
  }
  return /*#__PURE__*/React.createElement("img", _extends$2({
    "data-test": "DesignSystem-Image",
    src: src,
    alt: firstName
  }, baseProps, {
    height: imgSize,
    width: imgSize,
    onError: onError
  }));
};

const initialsLength = 2;
const DefaultAppearance = 'secondary';
const colors = ['accent4', 'primary', 'accent3', 'alert', 'accent2', 'warning', 'accent1', 'success'];
const Avatar = props => {
  const {
    withTooltip,
    tooltipPosition,
    size,
    children,
    firstName,
    lastName,
    className,
    appearance,
    shape,
    disabled,
    tooltipSuffix,
    tabIndex,
    presence,
    status,
    strokeColor,
    role = 'presentation'
  } = props;
  const baseProps = extractBaseProps(props);
  const initials = children && typeof children === 'string' ? children.trim().slice(0, initialsLength) : `${firstName ? firstName.trim()[0] : ''}${lastName ? lastName.trim()[0] : ''}`;
  const getTooltipName = () => {
    if (children && typeof children === 'string') {
      return `${children} ${tooltipSuffix || ''}`;
    }
    return `${firstName || ''} ${lastName || ''} ${tooltipSuffix || ''}` || '';
  };
  const AvatarAppearance = appearance || colors[(initials.charCodeAt(0) + (initials.charCodeAt(1) || 0)) % 8] || DefaultAppearance;
  const darkAppearance = ['secondary', 'success', 'warning', 'accent1', 'accent4'];
  const showPresence = presence && !disabled && shape === 'round' && (presence === 'active' || presence === 'away');
  const showStatus = status && size === 'regular' && shape === 'round';
  const AvatarClassNames = classNames({
    [avatarStyles.Avatar]: true,
    [avatarStyles['Avatar--square']]: shape === 'square',
    [avatarStyles[`Avatar--${size}`]]: shape !== 'square',
    [avatarStyles[`Avatar--${AvatarAppearance}`]]: AvatarAppearance,
    [avatarStyles['Avatar--noInitials']]: !initials || !withTooltip,
    [avatarStyles['Avatar--disabled']]: disabled,
    [avatarStyles['Avatar--default']]: !disabled
  }, className);
  const AvatarWrapperClassNames = classNames({
    [avatarStyles['Avatar-wrapper--square']]: shape === 'square',
    [avatarStyles[`Avatar--${size}`]]: shape === 'square'
  });
  const TextClassNames = classNames({
    [avatarStyles[`Avatar-content--${size}`]]: size,
    [avatarStyles['Avatar-content']]: darkAppearance.includes(AvatarAppearance)
  });
  const IconClassNames = classNames({
    [avatarStyles['Avatar-content']]: darkAppearance.includes(AvatarAppearance)
  });
  const presenceClassNames = classNames({
    [avatarStyles['Avatar-presence']]: presence,
    [avatarStyles['Avatar-presence--active']]: presence === 'active',
    [avatarStyles['Avatar-presence--away']]: presence === 'away'
  });
  const borderStyle = {
    boxShadow: `0 0 0 var(--spacing-05) ${strokeColor}`
  };
  const sharedProp = {
    size,
    firstName,
    lastName,
    appearance: AvatarAppearance,
    darkAppearance
  };
  const renderAvatar = () => {
    if (children && typeof children !== 'string') {
      return /*#__PURE__*/React.createElement("span", {
        "data-test": "DesignSystem-AvatarWrapper",
        className: AvatarWrapperClassNames,
        role: role
      }, /*#__PURE__*/React.createElement(AvatarProvider, {
        value: sharedProp
      }, /*#__PURE__*/React.createElement("span", _extends$2({
        "data-test": "DesignSystem-Avatar"
      }, baseProps, {
        className: AvatarClassNames,
        tabIndex: tabIndex || disabled ? -1 : 0
      }), children)));
    }
    return /*#__PURE__*/React.createElement("span", {
      "data-test": "DesignSystem-AvatarWrapper",
      className: AvatarWrapperClassNames,
      role: role
    }, /*#__PURE__*/React.createElement("span", _extends$2({
      "data-test": "DesignSystem-Avatar"
    }, baseProps, {
      className: AvatarClassNames,
      tabIndex: tabIndex || disabled ? -1 : 0
    }), initials && /*#__PURE__*/React.createElement(Text, {
      weight: "medium",
      appearance: 'white',
      className: TextClassNames
    }, initials), !initials && /*#__PURE__*/React.createElement(Icon, {
      "data-test": "DesignSystem-Avatar--Icon",
      name: "person",
      size: size === 'regular' ? 20 : 16,
      appearance: 'white',
      className: IconClassNames
    })));
  };
  const renderTooltip = () => /*#__PURE__*/React.createElement("span", {
    className: "position-relative d-inline-flex"
  }, withTooltip && initials ? /*#__PURE__*/React.createElement(Tooltip, {
    tooltip: getTooltipName(),
    position: tooltipPosition,
    triggerClass: "flex-grow-0"
  }, renderAvatar()) : renderAvatar(), showPresence && /*#__PURE__*/React.createElement("span", {
    "data-test": "DesignSystem-Avatar--Presence",
    className: presenceClassNames,
    style: borderStyle
  }), showStatus && /*#__PURE__*/React.createElement("span", {
    "data-test": "DesignSystem-Avatar--Status",
    className: avatarStyles['Avatar-status'],
    style: borderStyle
  }, status));
  return renderTooltip();
};
Avatar.displayName = 'Avatar';
Avatar.Icon = AvatarIcon;
Avatar.Image = AvatarImage;
Avatar.defaultProps = {
  tooltipPosition: 'bottom',
  withTooltip: true,
  size: 'regular',
  shape: 'round',
  strokeColor: 'var(--white)'
};

var css_248z$1h = ".avatarGroup-module-AvatarGroup-item-BdNGp-5-0-0-9 {\n  border-radius: var(--border-radius-full);\n  position: relative;\n  margin-right: calc(var(--spacing-05) * -1);\n}\n\n.avatarGroup-module-AvatarGroup-item--regular-zOeeU-5-0-0-9 {\n  height: var(--spacing-80);\n}\n\n.avatarGroup-module-AvatarGroup-item--tiny-UfaCA-5-0-0-9 {\n  height: var(--spacing-60);\n}\n\n.avatarGroup-module-AvatarGroup-Popper-z-iGj-5-0-0-9 {\n  overflow-y: auto;\n  box-sizing: border-box;\n}\n\n.avatarGroup-module-AvatarGroup-TextWrapper-bg8co-5-0-0-9 {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  overflow-y: auto;\n}\n\n.avatarGroup-module-AvatarCount-wrapper-k9GxW-5-0-0-9 {\n  border-radius: var(--border-radius-full);\n  position: relative;\n}\n\n.avatarGroup-module-AvatarCount-wrapper-k9GxW-5-0-0-9:focus,\n.avatarGroup-module-AvatarCount-wrapper-k9GxW-5-0-0-9:focus-visible {\n  outline: 3px solid var(--primary-shadow);\n  outline-offset: 3px;\n}\n\n.avatarGroup-module-AvatarGroup-inputWrapper-VHc2A-5-0-0-9 {\n  border-bottom: var(--border-width-2-5) solid var(--secondary-dark);\n}\n\n.avatarGroup-module-AvatarGroup-inputWrapper-VHc2A-5-0-0-9:focus-within {\n  border-bottom: var(--border-width-2-5) solid var(--primary);\n}\n\n.avatarGroup-module-AvatarGroup-input-pXgb--5-0-0-9 {\n  min-width: unset !important;\n  background: transparent;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n  height: calc(var(--spacing-80) + var(--spacing-10)) !important;\n}\n\n.avatarGroup-module-AvatarGroup-input-pXgb--5-0-0-9,\n.avatarGroup-module-AvatarGroup-input-pXgb--5-0-0-9:focus-within {\n  border: unset !important;\n  box-shadow: none !important;\n}\n\n.avatarGroup-module-AvatarGroup-input-pXgb--5-0-0-9:hover {\n  background-color: var(--secondary-lightest);\n}\n\n.avatarGroup-module-AvatarGroup-listItem--disabled-Ln1fi-5-0-0-9 {\n  cursor: not-allowed;\n  pointer-events: auto !important;\n}\n";
var styles$16 = {"AvatarGroup-item":"avatarGroup-module-AvatarGroup-item-BdNGp-5-0-0-9","AvatarGroup-item--regular":"avatarGroup-module-AvatarGroup-item--regular-zOeeU-5-0-0-9","AvatarGroup-item--tiny":"avatarGroup-module-AvatarGroup-item--tiny-UfaCA-5-0-0-9","AvatarGroup-Popper":"avatarGroup-module-AvatarGroup-Popper-z-iGj-5-0-0-9","AvatarGroup-TextWrapper":"avatarGroup-module-AvatarGroup-TextWrapper-bg8co-5-0-0-9","AvatarCount-wrapper":"avatarGroup-module-AvatarCount-wrapper-k9GxW-5-0-0-9","AvatarGroup-inputWrapper":"avatarGroup-module-AvatarGroup-inputWrapper-VHc2A-5-0-0-9","AvatarGroup-input":"avatarGroup-module-AvatarGroup-input-pXgb--5-0-0-9","AvatarGroup-listItem--disabled":"avatarGroup-module-AvatarGroup-listItem--disabled-Ln1fi-5-0-0-9"};
styleInject(css_248z$1h);

const AvatarCount = props => {
  const {
    hiddenAvatarCount,
    avatarStyle,
    size,
    on
  } = props;
  const ContentClass = classNames({
    [avatarStyles['Avatar-content']]: true,
    [avatarStyles['Avatar-content--tiny']]: size === 'tiny'
  });
  const AvatarVariantsClass = classNames({
    [avatarStyles.Avatar]: true,
    [avatarStyles[`Avatar--regular`]]: size === 'regular',
    [avatarStyles[`Avatar--tiny`]]: size === 'tiny',
    [avatarStyles[`Avatar--secondary`]]: true,
    ['cursor-default']: true,
    ['cursor-pointer']: on === 'click'
  });
  return /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-AvatarGroup--TriggerAvatar",
    className: styles$16['AvatarCount-wrapper'],
    style: avatarStyle,
    tabIndex: 0,
    role: "button"
  }, /*#__PURE__*/React.createElement("span", {
    "data-test": "DesignSystem-AvatarGroup--TriggerAvatarVariants",
    className: AvatarVariantsClass
  }, /*#__PURE__*/React.createElement(Text, {
    className: ContentClass
  }, `+${hiddenAvatarCount}`)));
};

const Avatars = props => {
  const {
    avatarList,
    avatarStyle,
    tooltipPosition,
    size
  } = props;
  const GroupClass = classNames({
    [styles$16[`AvatarGroup-item`]]: true,
    [styles$16[`AvatarGroup-item--tiny`]]: size === 'tiny',
    [styles$16[`AvatarGroup-item--regular`]]: size === 'regular'
  });
  const avatars = avatarList.map((item, index) => {
    const {
      icon,
      image
    } = item;
    const newAvatarStyle = {
      ...avatarStyle,
      zIndex: avatarList.length - index
    };
    return /*#__PURE__*/React.createElement("div", {
      "data-test": "DesignSystem-AvatarGroup--Avatar",
      className: GroupClass,
      style: newAvatarStyle,
      key: index
    }, /*#__PURE__*/React.createElement(Avatar, _extends$2({
      size: size,
      withTooltip: true,
      tooltipPosition: tooltipPosition
    }, item), image || icon));
  });
  return avatars;
};

const AvatarGroupEmptyState = props => {
  const {
    height,
    title,
    description
  } = props;
  return /*#__PURE__*/React.createElement("div", {
    className: "d-flex flex-column justify-content-center align-items-center",
    style: {
      height: height ? height - 4 : ''
    },
    "data-test": "DesignSystem-AvatarGroup--EmptyState"
  }, title && /*#__PURE__*/React.createElement(Text, {
    className: "text-align-center mb-3",
    weight: "strong"
  }, title), description && /*#__PURE__*/React.createElement(Text, {
    className: "text-align-center mb-6",
    weight: "medium",
    size: "small",
    appearance: "subtle"
  }, description));
};

const AvatarGroupInput = props => {
  const inputClassName = classNames({
    'w-100': true,
    [styles$16['AvatarGroup-input']]: true
  });
  return /*#__PURE__*/React.createElement("div", {
    className: styles$16['AvatarGroup-inputWrapper']
  }, /*#__PURE__*/React.createElement(Input, _extends$2({
    icon: "search",
    className: inputClassName,
    "data-test": "DesignSystem-AvatarGroup--Input"
  }, props)));
};

const AvatarOptionItem = props => {
  const {
    avatarData
  } = props;
  const {
    firstName = '',
    lastName = '',
    tooltipSuffix = '',
    disabled,
    image,
    icon
  } = avatarData;
  const name = `${firstName} ${lastName} ${tooltipSuffix}`;
  const elementRef = React.useRef(null);
  const triggerClassName = classNames({
    ['cursor-not-allowed']: disabled,
    ['ellipsis--noWrap']: true
  });
  const itemClassName = classNames({
    ['AvatarGroup-listItem--disabled']: disabled,
    ['cursor-default']: !disabled
  });
  return /*#__PURE__*/React.createElement(Listbox.Item, {
    disabled: disabled,
    className: itemClassName,
    tagName: "li",
    "data-test": "DesignSystem-AvatarGroup--Item"
  }, /*#__PURE__*/React.createElement(Avatar, _extends$2({}, avatarData, {
    withTooltip: false
  }), image || icon), /*#__PURE__*/React.createElement(Tooltip, {
    showOnTruncation: true,
    tooltip: name,
    elementRef: elementRef,
    triggerClass: triggerClassName
  }, /*#__PURE__*/React.createElement(Text, {
    ref: elementRef,
    "data-test": "DesignSystem-AvatarGroup--Text",
    className: "ellipsis--noWrap ml-4"
  }, name)));
};

const AvatarPopperBody = props => {
  const {
    hiddenAvatarList,
    popperRenderer,
    maxHeight,
    minHeight,
    width,
    popperClassName,
    withSearch,
    searchPlaceholder,
    searchComparator,
    size
  } = props;
  const [searchValue, setSearchValue] = React.useState('');
  const [searchList, setSearchList] = React.useState(hiddenAvatarList);
  const onSearchHandler = event => {
    const inputValue = event.target.value;
    setSearchValue(inputValue);
    const list = hiddenAvatarList.filter(avatarData => {
      const {
        firstName,
        lastName
      } = avatarData;
      if (searchComparator) {
        return searchComparator(inputValue, avatarData);
      }
      return firstName?.toLowerCase()?.startsWith(inputValue.toLowerCase()) || lastName?.toLowerCase()?.startsWith(inputValue.toLowerCase());
    });
    setSearchList(list);
  };
  const onClearHandler = () => {
    setSearchValue('');
    setSearchList(hiddenAvatarList);
  };
  const popperClass = classNames({
    [styles$16['AvatarGroup-Popper']]: true,
    ['py-3']: !withSearch,
    ['pb-3']: withSearch
  }, popperClassName);
  const searchInputHeight = 36;
  const searchBorder = 1;
  const customStyle = {
    width,
    minHeight: minHeight,
    maxHeight: withSearch ? maxHeight - searchInputHeight - searchBorder : maxHeight
  };
  if (popperRenderer) {
    return popperRenderer(hiddenAvatarList);
  }
  return /*#__PURE__*/React.createElement("div", {
    style: {
      width: customStyle.width
    },
    "data-test": "DesignSystem-AvatarGroup--Popover"
  }, withSearch && /*#__PURE__*/React.createElement(AvatarGroupInput, {
    value: searchValue,
    placeholder: searchPlaceholder,
    onChange: onSearchHandler,
    onClear: onClearHandler
  }), /*#__PURE__*/React.createElement("div", {
    style: customStyle,
    className: popperClass
  }, searchList.length === 0 && /*#__PURE__*/React.createElement(AvatarGroupEmptyState, {
    height: customStyle.maxHeight,
    title: "No users found",
    description: "Try modifying your search to find what you are looking for."
  }), !!searchList.length && /*#__PURE__*/React.createElement(Listbox, {
    tagName: "ul",
    showDivider: false,
    type: "description",
    size: "compressed",
    "data-test": "DesignSystem-AvatarGroup--List"
  }, searchList.map((item, index) => {
    return /*#__PURE__*/React.createElement(AvatarOptionItem, {
      key: index,
      avatarData: {
        ...item,
        size
      }
    });
  }))));
};

const AvatarGroup = props => {
  const {
    max,
    borderColor,
    popoverOptions,
    tooltipPosition,
    list,
    className,
    size
  } = props;
  const {
    popperRenderer,
    maxHeight = 256,
    width = 176,
    minHeight,
    position = 'bottom',
    on = 'hover',
    appendToBody = true,
    withSearch,
    searchPlaceholder,
    searchComparator,
    popperClassName = ''
  } = popoverOptions;
  const baseProps = extractBaseProps(props);
  const hiddenAvatarCount = list.length > max ? Math.min(list.length - max, 99) : 0;
  const style = {
    backgroundColor: `${borderColor}`,
    boxShadow: `0 0 0  calc(var(--spacing-2-5) + var(--spacing-05)) ${borderColor}`
  };
  const tinyAvatarStyle = {
    boxShadow: `0 0 0  var(--spacing-05) ${borderColor}`
  };
  const avatarStyle = size === 'tiny' ? {
    ...style,
    ...tinyAvatarStyle
  } : style;
  const avatarList = list.length === 3 ? list : list.slice(0, max);
  const AvatarGroupClass = classNames({
    [styles$16['AvatarGroup']]: true,
    'd-inline-flex': true
  }, className);
  const avatarPopperBodyProps = {
    hiddenAvatarList: [...list].slice(max, list.length),
    popperRenderer,
    maxHeight,
    minHeight,
    width,
    popperClassName,
    withSearch,
    searchPlaceholder,
    searchComparator,
    size
  };
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-AvatarGroup"
  }, baseProps, {
    className: AvatarGroupClass
  }), /*#__PURE__*/React.createElement(Avatars, {
    size: size,
    avatarList: avatarList,
    avatarStyle: avatarStyle,
    tooltipPosition: tooltipPosition
  }), list.length - max > 0 && list.length !== 3 && /*#__PURE__*/React.createElement(Popover, {
    on: on,
    trigger: /*#__PURE__*/React.createElement(AvatarCount, {
      on: on,
      size: size,
      hiddenAvatarCount: hiddenAvatarCount,
      avatarStyle: avatarStyle
    }),
    position: position,
    appendToBody: appendToBody,
    offset: "medium"
  }, /*#__PURE__*/React.createElement(AvatarPopperBody, avatarPopperBodyProps)));
};
AvatarGroup.displayName = 'AvatarGroup';
AvatarGroup.defaultProps = {
  max: 2,
  tooltipPosition: 'bottom',
  borderColor: 'white',
  popoverOptions: {},
  size: 'regular'
};

var css_248z$1g = "@keyframes backdrop-module-backdrop-open-UtELd-5-0-0-9 {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: var(--opacity-16);\n  }\n}\n\n@keyframes backdrop-module-backdrop-close-s0fHr-5-0-0-9 {\n  from {\n    opacity: var(--opacity-16);\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.backdrop-module-Backdrop-HFSff-5-0-0-9 {\n  background-color: rgba(31, 31, 31, 0.64);\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n  left: 0;\n  top: 0;\n  display: none;\n  align-items: center;\n  z-index: 1000;\n  overflow: auto;\n  flex-direction: column;\n  justify-content: center;\n  touch-action: none;\n  visibility: hidden;\n}\n\n.backdrop-module-Backdrop--open-H0Qal-5-0-0-9 {\n  display: flex;\n  visibility: visible;\n}\n\n.backdrop-module-Backdrop-animation--open-uyxvi-5-0-0-9 {\n  animation: backdrop-module-backdrop-open-UtELd-5-0-0-9 var(--duration--fast-02) var(--entrance-expressive-curve);\n}\n\n.backdrop-module-Backdrop-animation--close-Fe-PA-5-0-0-9 {\n  animation: backdrop-module-backdrop-close-s0fHr-5-0-0-9 var(--duration--fast-02) var(--exit-expressive-curve);\n}\n";
var styles$15 = {"Backdrop":"backdrop-module-Backdrop-HFSff-5-0-0-9","Backdrop--open":"backdrop-module-Backdrop--open-H0Qal-5-0-0-9","Backdrop-animation--open":"backdrop-module-Backdrop-animation--open-uyxvi-5-0-0-9","Backdrop-animation--close":"backdrop-module-Backdrop-animation--close-Fe-PA-5-0-0-9"};
styleInject(css_248z$1g);

const {
  useEffect: useEffect$1,
  useState: useState$2
} = React;
/**
 * ### Note:
 * **   The backdrop component is used to provide emphasis on a particular element or parts of it. <br/>**
 * The backdrop signals to the user of a state change within the application and can be used for creating loaders, dialogs, and more. <br/>
 * In its simplest form, the backdrop component will add a dimmed layer over your application.
 */

const Backdrop = props => {
  const {
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const [savedBodyOverflow, setBodyOverflow] = useState$2(null);
  const [open, setOpen] = React.useState(props.open);
  const [animate, setAnimate] = React.useState(props.open);
  const classes = classNames({
    [styles$15.Backdrop]: true,
    [styles$15['Backdrop--open']]: open,
    [styles$15['Backdrop-animation--open']]: animate,
    [styles$15['Backdrop-animation--close']]: !animate
  }, className);
  const disableBodyScroll = () => {
    document.body.style.setProperty('overflow', 'hidden', 'important');
  };
  const enableBodyScroll = () => {
    document.body.style.overflow = savedBodyOverflow || '';
    setBodyOverflow(null);
  };
  useEffect$1(() => {
    if (props.open) {
      setBodyOverflow(document.body.style.overflow);
      disableBodyScroll();
      setOpen(true);
      setAnimate(true);
    }
    if (!props.open) {
      window.setTimeout(() => {
        setOpen(false);
      }, 120);
      setAnimate(false);
      enableBodyScroll();
    }
    return () => {
      enableBodyScroll();
    };
  }, [props.open]);
  const BackdropElement = /*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Backdrop",
    "data-layer": true,
    "data-opened": open
  }, baseProps, {
    className: classes,
    style: {
      zIndex: props.zIndex
    }
  })), document.body);
  return BackdropElement;
};
Backdrop.displayName = 'Backdrop';

var css_248z$1f = "/* badge */\n\n.badge-module-Badge-axSjP-5-0-0-9 {\n  /* 160px */\n  max-width: calc(var(--spacing-40) * 10);\n  /* truncate */\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: var(--font-size-s);\n  line-height: var(--font-height-s);\n  text-transform: uppercase;\n  padding-right: var(--spacing-10);\n  padding-left: var(--spacing-10);\n  padding-top: var(--spacing-05);\n  padding-bottom: var(--spacing-05);\n  border-radius: var(--border-radius-10);\n  display: inline-block;\n  box-sizing: border-box;\n  font-weight: var(--font-weight-bold);\n  cursor: default;\n}\n\n.badge-module-Badge--primary-Bzypo-5-0-0-9 {\n  background: var(--primary);\n  color: var(--white);\n}\n\n.badge-module-Badge--secondary-WIu5q-5-0-0-9 {\n  background: var(--secondary-light);\n  color: var(--inverse);\n}\n\n.badge-module-Badge--success-M-hkD-5-0-0-9 {\n  background: var(--success);\n  color: var(--white);\n}\n\n.badge-module-Badge--alert-zeKFm-5-0-0-9 {\n  background: var(--alert);\n  color: var(--white);\n}\n\n.badge-module-Badge--warning-CaLfS-5-0-0-9 {\n  background: var(--warning);\n  color: var(--warning-darker);\n}\n\n.badge-module-Badge--accent1-yRHhk-5-0-0-9 {\n  background: var(--accent1);\n  color: var(--white);\n}\n\n.badge-module-Badge--accent2-RXIlu-5-0-0-9 {\n  background: var(--accent2);\n  color: var(--white);\n}\n\n.badge-module-Badge--accent3-Ahofy-5-0-0-9 {\n  background: var(--accent3);\n  color: var(--white);\n}\n\n.badge-module-Badge--accent4-adMko-5-0-0-9 {\n  background: var(--accent4);\n  color: var(--accent4-darker);\n}\n\n.badge-module-Badge--subtle-primary-egSuo-5-0-0-9 {\n  color: var(--primary-darker);\n  background: var(--primary-lightest);\n}\n\n.badge-module-Badge--subtle-secondary-ZZUuU-5-0-0-9 {\n  color: var(--text);\n  background: var(--secondary-light);\n}\n\n.badge-module-Badge--subtle-success-bZ7d6-5-0-0-9 {\n  color: var(--success-darker);\n  background: var(--success-lightest);\n}\n\n.badge-module-Badge--subtle-alert-Iu9LY-5-0-0-9 {\n  color: var(--alert-darker);\n  background: var(--alert-lightest);\n}\n\n.badge-module-Badge--subtle-warning-PERDW-5-0-0-9 {\n  color: var(--warning-darker);\n  background: var(--warning-lightest);\n}\n\n.badge-module-Badge--subtle-accent1-M14Ub-5-0-0-9 {\n  color: var(--accent1-darker);\n  background: var(--accent1-lightest);\n}\n\n.badge-module-Badge--subtle-accent2-e1DOS-5-0-0-9 {\n  color: var(--accent2-darker);\n  background: var(--accent2-lightest);\n}\n\n.badge-module-Badge--subtle-accent3-30YqY-5-0-0-9 {\n  color: var(--accent3-darker);\n  background: var(--accent3-lightest);\n}\n\n.badge-module-Badge--subtle-accent4-wHQ23-5-0-0-9 {\n  color: var(--accent4-darker);\n  background: var(--accent4-lightest);\n}\n";
var badgeStyles = {"Badge":"badge-module-Badge-axSjP-5-0-0-9","Badge--primary":"badge-module-Badge--primary-Bzypo-5-0-0-9","Badge--secondary":"badge-module-Badge--secondary-WIu5q-5-0-0-9","Badge--success":"badge-module-Badge--success-M-hkD-5-0-0-9","Badge--alert":"badge-module-Badge--alert-zeKFm-5-0-0-9","Badge--warning":"badge-module-Badge--warning-CaLfS-5-0-0-9","Badge--accent1":"badge-module-Badge--accent1-yRHhk-5-0-0-9","Badge--accent2":"badge-module-Badge--accent2-RXIlu-5-0-0-9","Badge--accent3":"badge-module-Badge--accent3-Ahofy-5-0-0-9","Badge--accent4":"badge-module-Badge--accent4-adMko-5-0-0-9","Badge--subtle-primary":"badge-module-Badge--subtle-primary-egSuo-5-0-0-9","Badge--subtle-secondary":"badge-module-Badge--subtle-secondary-ZZUuU-5-0-0-9","Badge--subtle-success":"badge-module-Badge--subtle-success-bZ7d6-5-0-0-9","Badge--subtle-alert":"badge-module-Badge--subtle-alert-Iu9LY-5-0-0-9","Badge--subtle-warning":"badge-module-Badge--subtle-warning-PERDW-5-0-0-9","Badge--subtle-accent1":"badge-module-Badge--subtle-accent1-M14Ub-5-0-0-9","Badge--subtle-accent2":"badge-module-Badge--subtle-accent2-e1DOS-5-0-0-9","Badge--subtle-accent3":"badge-module-Badge--subtle-accent3-30YqY-5-0-0-9","Badge--subtle-accent4":"badge-module-Badge--subtle-accent4-wHQ23-5-0-0-9"};
styleInject(css_248z$1f);

var css_248z$1e = ".pageHeader-module-PageHeader-YgqsC-5-0-0-9 {\n  width: 100%;\n}\n\n.pageHeader-module-PageHeader-wrapper-DOQ8C-5-0-0-9 {\n  padding: var(--spacing-20) var(--spacing-40) var(--spacing-20) 0;\n}\n\n.pageHeader-module-PageHeader-wrapper--withTabs-T6lAs-5-0-0-9 {\n  padding-bottom: 0;\n}\n\n.pageHeader-module-PageHeader-wrapper--withTabs-T6lAs-5-0-0-9 .pageHeader-module-TabsWrapper-header-H-fcc-5-0-0-9 {\n  border-bottom: none;\n}\n\n.pageHeader-module-PageHeader-YgqsC-5-0-0-9 .pageHeader-module-Row-beZ5Z-5-0-0-9 {\n  width: 100%;\n}\n\n.pageHeader-module-PageHeader-titleWrapper-QLuCf-5-0-0-9 {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding-right: var(--spacing-20);\n}\n\n.pageHeader-module-PageHeader-titleWrapper-QLuCf-5-0-0-9 .pageHeader-module-Badge-2T-RV-5-0-0-9 {\n  margin-left: var(--spacing-30);\n  flex-shrink: 0;\n}\n\n.pageHeader-module-PageHeader-statusWrapper-RYrwh-5-0-0-9 {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.pageHeader-module-PageHeader-statusWrapper-RYrwh-5-0-0-9 .pageHeader-module-StatusHint-bRjnp-5-0-0-9 {\n  margin-right: var(--spacing-20);\n}\n\n.pageHeader-module-PageHeader-navigationWrapper-6p7EF-5-0-0-9 {\n  margin-top: var(--spacing-10);\n}\n\n.pageHeader-module-PageHeader-YgqsC-5-0-0-9 .pageHeader-module-PageHeader-navigationWrapper-6p7EF-5-0-0-9 {\n  justify-content: center;\n  align-items: center;\n  margin-top: 0 !important;\n  padding-right: var(--spacing-20);\n  padding-left: var(--spacing-20);\n  display: flex;\n}\n\n.pageHeader-module-PageHeader-title-mgCZA-5-0-0-9 {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.pageHeader-module-PageHeader-actionsWrapper-tF81M-5-0-0-9 {\n  display: flex;\n  justify-content: flex-end;\n  padding-left: var(--spacing-20);\n}\n";
var styles$14 = {"PageHeader":"pageHeader-module-PageHeader-YgqsC-5-0-0-9","PageHeader-wrapper":"pageHeader-module-PageHeader-wrapper-DOQ8C-5-0-0-9","PageHeader-wrapper--withTabs":"pageHeader-module-PageHeader-wrapper--withTabs-T6lAs-5-0-0-9","TabsWrapper-header":"pageHeader-module-TabsWrapper-header-H-fcc-5-0-0-9","PageHeader-titleWrapper":"pageHeader-module-PageHeader-titleWrapper-QLuCf-5-0-0-9","Badge":"pageHeader-module-Badge-2T-RV-5-0-0-9","PageHeader-statusWrapper":"pageHeader-module-PageHeader-statusWrapper-RYrwh-5-0-0-9","StatusHint":"pageHeader-module-StatusHint-bRjnp-5-0-0-9","PageHeader-navigationWrapper":"pageHeader-module-PageHeader-navigationWrapper-6p7EF-5-0-0-9","PageHeader-title":"pageHeader-module-PageHeader-title-mgCZA-5-0-0-9","PageHeader-actionsWrapper":"pageHeader-module-PageHeader-actionsWrapper-tF81M-5-0-0-9"};
styleInject(css_248z$1e);

const Badge = props => {
  const {
    appearance,
    children,
    subtle,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [badgeStyles.Badge]: true,
    [styles$14.Badge]: true,
    [badgeStyles[`Badge--${appearance}`]]: appearance && !subtle,
    [badgeStyles[`Badge--subtle-${appearance}`]]: subtle
  }, className);
  return /*#__PURE__*/React.createElement("span", _extends$2({
    "data-test": "DesignSystem-Badge"
  }, baseProps, {
    className: classes
  }), children);
};
Badge.displayName = 'Badge';
Badge.defaultProps = {
  appearance: 'secondary'
};

var css_248z$1d = "/* breadcrumbs */\n\n.breadcrumbs-module-Breadcrumbs-Uy-AK-5-0-0-9 {\n  display: flex;\n  align-items: center;\n}\n\n.breadcrumbs-module-Breadcrumbs-item-M3i9B-5-0-0-9 {\n  display: flex;\n  align-items: center;\n}\n\n.breadcrumbs-module-Breadcrumbs-link-aJJRG-5-0-0-9 {\n  /* 160px */\n  max-width: calc(var(--spacing-40) * 10);\n  margin: var(--spacing-10) 0;\n}\n\n.breadcrumbs-module-Breadcrumbs-link-aJJRG-5-0-0-9:active {\n  color: var(--inverse);\n}\n\n.breadcrumbs-module-Breadcrumbs-item-M3i9B-5-0-0-9:first-child .breadcrumbs-module-Breadcrumbs-link-aJJRG-5-0-0-9 {\n  margin-left: 0;\n}\n\n.breadcrumbs-module-Breadcrumbs-itemSeparator-d2S2j-5-0-0-9 {\n  color: var(--secondary);\n  font-size: var(--font-size-s);\n  line-height: var(--font-height-s);\n  width: var(--spacing-10);\n  margin: 0 var(--spacing-10);\n}\n\n.breadcrumbs-module-Breadcrumbs-dropdown--CUKk-5-0-0-9 {\n  height: var(--font-height-m);\n}\n\n.breadcrumbs-module-Breadcrumbs-Button-FybbI-5-0-0-9:focus {\n  background: var(--secondary) !important;\n}\n";
var styles$13 = {"Breadcrumbs":"breadcrumbs-module-Breadcrumbs-Uy-AK-5-0-0-9","Breadcrumbs-item":"breadcrumbs-module-Breadcrumbs-item-M3i9B-5-0-0-9","Breadcrumbs-link":"breadcrumbs-module-Breadcrumbs-link-aJJRG-5-0-0-9","Breadcrumbs-itemSeparator":"breadcrumbs-module-Breadcrumbs-itemSeparator-d2S2j-5-0-0-9","Breadcrumbs-dropdown":"breadcrumbs-module-Breadcrumbs-dropdown--CUKk-5-0-0-9","Breadcrumbs-Button":"breadcrumbs-module-Breadcrumbs-Button-FybbI-5-0-0-9"};
styleInject(css_248z$1d);

const RenderLink = ({
  item,
  onClick
}) => {
  const onClickHandler = ev => {
    if (onClick) {
      ev.preventDefault();
      onClick(item.link);
    }
  };
  const linkClassName = classNames({
    [styles$13['Breadcrumbs-link']]: true,
    'ellipsis--noWrap': true
  });
  return /*#__PURE__*/React.createElement(Link, {
    className: linkClassName,
    "data-test": "DesignSystem-Breadcrumbs-link",
    href: item.link,
    onClick: onClickHandler,
    appearance: "subtle",
    size: "tiny"
  }, item.label);
};
const RenderItem = ({
  item,
  onClick,
  index,
  showTooltip
}) => {
  return /*#__PURE__*/React.createElement("div", {
    key: index,
    className: styles$13['Breadcrumbs-item'],
    "data-test": "DesignSystem-Breadcrumbs-item"
  }, showTooltip ? /*#__PURE__*/React.createElement(Tooltip, {
    tooltip: item.label,
    position: "bottom"
  }, /*#__PURE__*/React.createElement(RenderLink, {
    item: item,
    onClick: onClick
  })) : /*#__PURE__*/React.createElement(RenderLink, {
    item: item,
    onClick: onClick
  }), /*#__PURE__*/React.createElement("span", {
    className: styles$13['Breadcrumbs-itemSeparator']
  }, "/"));
};
const renderDropdown = (list, onClick) => {
  const options = list.map(item => ({
    label: item.label,
    value: item.link
  }));
  const customTrigger = () => {
    return /*#__PURE__*/React.createElement(Button, {
      type: "button",
      size: "tiny",
      appearance: "transparent",
      icon: "more_horiz_filled",
      largeIcon: true,
      className: styles$13['Breadcrumbs-Button'],
      "data-test": "DesignSystem-Breadcrumbs--Button"
    });
  };
  return /*#__PURE__*/React.createElement(Dropdown, {
    className: styles$13['Breadcrumbs-dropdown'],
    triggerSize: 'tiny',
    triggerOptions: {
      customTrigger
    },
    options: options,
    menu: true,
    onChange: selected => {
      if (onClick) {
        onClick(selected);
      }
    }
  });
};
const Breadcrumbs = props => {
  const {
    list,
    onClick,
    className,
    showTooltip
  } = props;
  const baseProps = extractBaseProps(props);
  const BreadcrumbClass = classNames({
    [styles$13.Breadcrumbs]: true
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Breadcrumbs"
  }, baseProps, {
    className: BreadcrumbClass
  }), list.length <= 4 ? list.map((item, index) => {
    return /*#__PURE__*/React.createElement(RenderItem, {
      key: index,
      item: item,
      onClick: onClick,
      showTooltip: showTooltip
    });
  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RenderItem, {
    item: list[0],
    onClick: onClick,
    showTooltip: showTooltip
  }), /*#__PURE__*/React.createElement("div", {
    className: "d-flex align-items-center"
  }, renderDropdown(list.slice(1, list.length - 1), onClick), /*#__PURE__*/React.createElement("span", {
    className: styles$13['Breadcrumbs-itemSeparator']
  }, "/")), /*#__PURE__*/React.createElement(RenderItem, {
    item: list[list.length - 1],
    onClick: onClick,
    showTooltip: showTooltip
  })));
};

var css_248z$1c = ".button-module-Button-xxWB4-5-0-0-9 {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  position: relative;\n  vertical-align: middle;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  border: 0;\n  border-radius: var(--border-radius-10);\n\n  padding-top: var(--spacing-20);\n  padding-bottom: var(--spacing-20);\n\n  text-align: center;\n  font-family: var(--font-family);\n  font-weight: var(--font-weight-normal);\n  font-size: var(--font-size);\n  line-height: var(--font-height-s);\n  color: var(--text-white);\n\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.button-module-Button-xxWB4-5-0-0-9:disabled {\n  cursor: not-allowed;\n}\n\n.button-module-Button-xxWB4-5-0-0-9:focus {\n  outline: 0;\n}\n\n.button-module-Button--iconAlign-right-tzezJ-5-0-0-9 {\n  flex-direction: row-reverse;\n}\n\n.button-module-Button-regularIcon--left-eiSbs-5-0-0-9 {\n  margin-left: calc(-1 * var(--spacing-05));\n}\n\n.button-module-Button-regularIcon--right-VaPke-5-0-0-9 {\n  margin-right: calc(-1 * var(--spacing-05));\n}\n\n.button-module-Button--tiny-ftCQP-5-0-0-9 {\n  height: var(--spacing-60);\n  padding-right: var(--spacing-20);\n  padding-left: var(--spacing-20);\n  padding-top: var(--spacing-10);\n  padding-bottom: var(--spacing-10);\n}\n\n.button-module-Button--tinySquare-JSE77-5-0-0-9 {\n  width: var(--spacing-60);\n}\n\n.button-module-Button--regular-Vs8An-5-0-0-9 {\n  height: var(--spacing-80);\n  padding-right: var(--spacing-30);\n  padding-left: var(--spacing-30);\n}\n\n.button-module-Button--regularSquare-VG89r-5-0-0-9 {\n  width: var(--spacing-80);\n}\n\n.button-module-Button--large-inVqO-5-0-0-9 {\n  height: 40px;\n  padding-right: var(--spacing-40);\n  padding-left: var(--spacing-40);\n\n  line-height: var(--font-height-m);\n  font-size: var(--font-size-m);\n}\n\n.button-module-Button--largeSquare-puIze-5-0-0-9 {\n  width: 40px;\n}\n\n.button-module-Button--tinySquare-JSE77-5-0-0-9 .button-module-Button-icon-2Qw-d-5-0-0-9,\n.button-module-Button--largeSquare-puIze-5-0-0-9 .button-module-Button-icon-2Qw-d-5-0-0-9,\n.button-module-Button--tinySquare-JSE77-5-0-0-9 .button-module-Spinner-f7Izb-5-0-0-9,\n.button-module-Button--largeSquare-puIze-5-0-0-9 .button-module-Spinner-f7Izb-5-0-0-9 {\n  padding-left: var(--spacing-05);\n  padding-right: var(--spacing-05);\n}\n\n.button-module-Button--expanded-j33fV-5-0-0-9 {\n  width: 100%;\n}\n\n.button-module-Button-icon-2Qw-d-5-0-0-9 {\n  line-height: inherit;\n  display: flex;\n  align-items: center;\n}\n\n.button-module-Button-icon--left-UoJq5-5-0-0-9 {\n  margin-right: var(--spacing-15);\n}\n\n.button-module-Button-icon--right-4iJWc-5-0-0-9 {\n  margin-left: var(--spacing-15);\n}\n\n.button-module-Button--tiny-ftCQP-5-0-0-9 .button-module-Button-icon--left-UoJq5-5-0-0-9 {\n  margin-right: var(--spacing-10);\n}\n.button-module-Button--tiny-ftCQP-5-0-0-9 .button-module-Button-icon--right-4iJWc-5-0-0-9 {\n  margin-left: var(--spacing-10);\n}\n\n.button-module-Button--basic-99RJE-5-0-0-9 {\n  background: var(--secondary-light);\n  color: var(--inverse);\n}\n\n.button-module-Button--basic-99RJE-5-0-0-9:hover {\n  background: var(--secondary);\n}\n\n.button-module-Button--basic-99RJE-5-0-0-9:active {\n  background: var(--secondary-dark);\n}\n\n.button-module-Button--basic-99RJE-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n}\n\n.button-module-Button--basic-99RJE-5-0-0-9:disabled {\n  background: var(--secondary-lighter);\n  color: var(--inverse-lightest);\n}\n\n.button-module-Button--primary-beKmU-5-0-0-9 {\n  background: var(--primary);\n}\n\n.button-module-Button--primary-beKmU-5-0-0-9:hover {\n  background: var(--primary-dark);\n}\n\n.button-module-Button--primary-beKmU-5-0-0-9:active {\n  background: var(--primary-darker);\n}\n\n.button-module-Button--primary-beKmU-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n}\n\n.button-module-Button--primary-beKmU-5-0-0-9:disabled {\n  background: var(--primary-lighter);\n}\n\n.button-module-Button--success-UppQk-5-0-0-9 {\n  background: var(--primary);\n}\n\n.button-module-Button--success-UppQk-5-0-0-9:hover {\n  background: var(--primary-dark);\n}\n\n.button-module-Button--success-UppQk-5-0-0-9:active {\n  background: var(--primary-darker);\n}\n\n.button-module-Button--success-UppQk-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n}\n\n.button-module-Button--success-UppQk-5-0-0-9:disabled {\n  background: var(--primary-lighter);\n}\n\n.button-module-Button--alert-H5mRH-5-0-0-9 {\n  background: var(--alert);\n}\n\n.button-module-Button--alert-H5mRH-5-0-0-9:hover {\n  background: var(--alert-dark);\n}\n\n.button-module-Button--alert-H5mRH-5-0-0-9:active {\n  background: var(--alert-darker);\n}\n\n.button-module-Button--alert-H5mRH-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) var(--alert-shadow);\n}\n\n.button-module-Button--alert-H5mRH-5-0-0-9:disabled {\n  background: var(--alert-lighter);\n}\n\n.button-module-Button--transparent-r8FxI-5-0-0-9 {\n  background: transparent;\n  color: var(--inverse);\n}\n\n.button-module-Button--transparent-r8FxI-5-0-0-9:hover {\n  background: var(--secondary);\n}\n\n.button-module-Button--transparent-r8FxI-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n}\n\n.button-module-Button--transparent-r8FxI-5-0-0-9:active {\n  background: var(--secondary-dark);\n}\n\n.button-module-Button--transparent-r8FxI-5-0-0-9:focus:active {\n  background: var(--secondary-dark);\n}\n\n.button-module-Button--transparent-r8FxI-5-0-0-9:disabled {\n  background: transparent;\n  color: var(--inverse-lightest);\n}\n\n.button-module-Button-spinner-l5KLk-5-0-0-9 {\n  display: flex;\n  position: absolute;\n  z-index: 1;\n}\n\n.button-module-Button--selected-vkcfl-5-0-0-9 {\n  background: var(--primary-lightest);\n  color: var(--primary-dark);\n}\n\n.button-module-Button--selected-vkcfl-5-0-0-9:hover {\n  background: var(--primary-lighter);\n}\n\n.button-module-Button--selected-vkcfl-5-0-0-9:active {\n  background: var(--primary-lighter);\n  color: var(--primary-darker);\n}\n\n.button-module-Button--selected-vkcfl-5-0-0-9:focus {\n  background: var(--primary-lightest);\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n}\n\n.button-module-Button--selected-vkcfl-5-0-0-9:focus:active {\n  background: var(--primary-lighter);\n}\n\n.button-module-Button--selected-vkcfl-5-0-0-9:disabled {\n  background: var(--primary-lightest);\n  color: var(--primary-lighter);\n}\n\n.button-module-Button-text--hidden-iCXLu-5-0-0-9 {\n  visibility: hidden;\n}\n\n.button-module-Button-text-A8xeT-5-0-0-9 {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n";
var buttonStyles = {"Button":"button-module-Button-xxWB4-5-0-0-9","Button--iconAlign-right":"button-module-Button--iconAlign-right-tzezJ-5-0-0-9","Button-regularIcon--left":"button-module-Button-regularIcon--left-eiSbs-5-0-0-9","Button-regularIcon--right":"button-module-Button-regularIcon--right-VaPke-5-0-0-9","Button--tiny":"button-module-Button--tiny-ftCQP-5-0-0-9","Button--tinySquare":"button-module-Button--tinySquare-JSE77-5-0-0-9","Button--regular":"button-module-Button--regular-Vs8An-5-0-0-9","Button--regularSquare":"button-module-Button--regularSquare-VG89r-5-0-0-9","Button--large":"button-module-Button--large-inVqO-5-0-0-9","Button--largeSquare":"button-module-Button--largeSquare-puIze-5-0-0-9","Button-icon":"button-module-Button-icon-2Qw-d-5-0-0-9","Spinner":"button-module-Spinner-f7Izb-5-0-0-9","Button--expanded":"button-module-Button--expanded-j33fV-5-0-0-9","Button-icon--left":"button-module-Button-icon--left-UoJq5-5-0-0-9","Button-icon--right":"button-module-Button-icon--right-4iJWc-5-0-0-9","Button--basic":"button-module-Button--basic-99RJE-5-0-0-9","Button--primary":"button-module-Button--primary-beKmU-5-0-0-9","Button--success":"button-module-Button--success-UppQk-5-0-0-9","Button--alert":"button-module-Button--alert-H5mRH-5-0-0-9","Button--transparent":"button-module-Button--transparent-r8FxI-5-0-0-9","Button-spinner":"button-module-Button-spinner-l5KLk-5-0-0-9","Button--selected":"button-module-Button--selected-vkcfl-5-0-0-9","Button-text--hidden":"button-module-Button-text--hidden-iCXLu-5-0-0-9","Button-text":"button-module-Button-text-A8xeT-5-0-0-9"};
styleInject(css_248z$1c);

const sizeMapping$3 = {
  tiny: 12,
  regular: 16,
  large: 20
};

// eslint-disable-next-line react/display-name
const ButtonElement = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    size = 'regular',
    appearance = 'basic',
    iconAlign = 'left',
    tabIndex = 0,
    largeIcon,
    type,
    children,
    icon,
    expanded,
    selected,
    loading,
    disabled,
    className,
    tooltip,
    iconType,
    ...rest
  } = props;
  const buttonClass = classNames({
    [buttonStyles['Button']]: true,
    [buttonStyles['Button--expanded']]: expanded,
    [buttonStyles[`Button--${size}`]]: size,
    [buttonStyles[`Button--${size}Square`]]: !children,
    [buttonStyles[`Button--${appearance}`]]: appearance,
    [buttonStyles['Button--selected']]: selected && (appearance === 'basic' || appearance === 'transparent'),
    [buttonStyles[`Button--iconAlign-${iconAlign}`]]: children && iconAlign
  }, className);
  const iconClass = classNames({
    [buttonStyles['Button-icon']]: true,
    [buttonStyles[`Button-icon--${iconAlign}`]]: children && iconAlign,
    [buttonStyles[`Button-regularIcon--${iconAlign}`]]: children && iconAlign && size === 'regular' && !expanded
  });
  const buttonTextClass = classNames({
    [buttonStyles['Button-text']]: true,
    [buttonStyles['Button-text--hidden']]: true
  });
  const spinnerSize = size === 'large' && children ? 'small' : 'xsmall';
  return /*#__PURE__*/React.createElement("button", _extends$2({
    "data-test": "DesignSystem-Button",
    ref: ref,
    type: type,
    className: buttonClass,
    disabled: disabled || loading,
    tabIndex: tabIndex
  }, rest), loading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Spinner, {
    size: spinnerSize,
    appearance: appearance === 'basic' || appearance === 'transparent' ? 'secondary' : 'white',
    "data-test": "DesignSystem-Button--Spinner",
    className: buttonStyles['Button-spinner']
  }), /*#__PURE__*/React.createElement(Text, {
    className: buttonTextClass
  }, children || '')) : /*#__PURE__*/React.createElement(React.Fragment, null, icon && /*#__PURE__*/React.createElement("div", {
    className: iconClass,
    "data-test": "DesignSystem-Button--Icon-Wrapper"
  }, /*#__PURE__*/React.createElement(Icon, {
    "data-test": "DesignSystem-Button--Icon",
    name: icon,
    type: iconType,
    size: largeIcon && !children ? sizeMapping$3[size] + 4 : sizeMapping$3[size]
  })), children && /*#__PURE__*/React.createElement("span", {
    className: buttonStyles['Button-text']
  }, children)));
});
const Button = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    icon,
    tooltip,
    children
  } = props;
  return icon && tooltip && !children ? /*#__PURE__*/React.createElement(Tooltip, {
    tooltip: tooltip
  }, /*#__PURE__*/React.createElement(ButtonElement, _extends$2({}, props, {
    ref: ref
  }))) : /*#__PURE__*/React.createElement(ButtonElement, _extends$2({}, props, {
    ref: ref
  }));
});
Button.displayName = 'Button';

var css_248z$1b = "/* calendar */\n\n.calendar-module-Calendar-wrapper-bKSSk-5-0-0-9 {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.calendar-module-Calendar-7PxjX-5-0-0-9 {\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n}\n\n.calendar-module-Calendar--small-A1CLy-5-0-0-9 {\n  padding: var(--spacing-30);\n  padding-bottom: var(--spacing-20);\n  width: 212px;\n}\n\n.calendar-module-Calendar-date--small-CcxQJ-5-0-0-9 {\n  height: 248px;\n}\n\n.calendar-module-Calendar-month--small-wkwYD-5-0-0-9 {\n  height: 200px;\n}\n\n.calendar-module-Calendar-year--small-RdwBQ-5-0-0-9 {\n  height: 200px;\n}\n\n.calendar-module-Calendar--large-sSoxU-5-0-0-9 {\n  padding-top: var(--spacing-40);\n  padding-left: var(--spacing-40);\n  padding-right: var(--spacing-40);\n  padding-bottom: var(--spacing-30);\n  width: 316px;\n}\n\n.calendar-module-Calendar-date--large-1ZITF-5-0-0-9 {\n  height: 324px;\n}\n\n.calendar-module-Calendar-month--large-5g0oP-5-0-0-9 {\n  height: 276px;\n}\n\n.calendar-module-Calendar-year--large-jELMf-5-0-0-9 {\n  height: 272px;\n}\n\n.calendar-module-Calendar-header--large-z3JIz-5-0-0-9 {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: var(--spacing-30);\n}\n\n.calendar-module-Calendar-header--small-dWwwm-5-0-0-9 {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: var(--spacing-20);\n}\n\n.calendar-module-Calendar-headerIcon-nsCVk-5-0-0-9 {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n}\n\n.calendar-module-Calendar-headerIcon--prev-1RFOJ-5-0-0-9 {\n  left: 0;\n}\n\n.calendar-module-Calendar-headerIcon--next-ympYc-5-0-0-9 {\n  right: 0;\n}\n\n.calendar-module-Calendar-headerContent-Ik37t-5-0-0-9 {\n  display: flex;\n  white-space: nowrap;\n  cursor: pointer;\n  padding-top: var(--spacing-10);\n  padding-bottom: var(--spacing-10);\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n}\n\n.calendar-module-Calendar-body-d-N5F-5-0-0-9 {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: space-between;\n}\n\n.calendar-module-Calendar-valueRow-85rKl-5-0-0-9 {\n  display: flex;\n  justify-content: space-between;\n  padding-top: var(--spacing-05);\n  padding-bottom: var(--spacing-05);\n}\n\n.calendar-module-Calendar-valueWrapper-H46Ub-5-0-0-9 {\n  display: inline-flex;\n  flex: 1 0 0;\n  justify-content: center;\n  position: relative;\n}\n\n.calendar-module-Calendar-valueWrapper--inRange-fV605-5-0-0-9 {\n  background: var(--primary-lightest);\n}\n\n.calendar-module-Calendar-valueWrapper--inRange-fV605-5-0-0-9 .calendar-module-Calendar-inRangeValue-VoWIb-5-0-0-9:hover {\n  background: var(--primary-lighter);\n}\n\n.calendar-module-Calendar-valueWrapper--inRange-fV605-5-0-0-9 .calendar-module-Calendar-inRangeValue-VoWIb-5-0-0-9:active {\n  background: var(--primary-light);\n}\n\n.calendar-module-Calendar-valueWrapper--inRangeError-MfWMS-5-0-0-9 {\n  background: var(--alert-lightest);\n}\n\n.calendar-module-Calendar-valueWrapper--start-z-bt7-5-0-0-9 {\n  background: linear-gradient(90deg, white 50%, var(--primary-lightest) 50%);\n  border-radius: var(--border-radius-10) 0 0 var(--border-radius-10);\n}\n\n.calendar-module-Calendar-valueWrapper--startError-RglvV-5-0-0-9 {\n  background: linear-gradient(90deg, white 50%, var(--alert-lightest) 50%);\n}\n\n.calendar-module-Calendar-valueWrapper--end-3mDNa-5-0-0-9 {\n  background: linear-gradient(90deg, var(--primary-lightest) 50%, white 50%);\n  border-radius: 0 var(--border-radius-10) var(--border-radius-10) 0;\n}\n\n.calendar-module-Calendar-valueWrapper--hoverDate-WqHTe-5-0-0-9 {\n  background: linear-gradient(90deg, var(--primary-lightest) 10%, white 50%);\n  border-radius: 0 var(--border-radius-10) var(--border-radius-10) 0;\n}\n\n.calendar-module-Calendar-valueWrapper--hoverEndDate-ZBQie-5-0-0-9 {\n  background: linear-gradient(90deg, white 50%, var(--primary-lightest) 10%);\n}\n\n.calendar-module-Calendar-valueWrapper--endError-Q6xFE-5-0-0-9 {\n  background: linear-gradient(90deg, var(--alert-lightest) 50%, white 50%);\n}\n\n.calendar-module-Calendar-valueWrapper--startEnd-djqp--5-0-0-9 {\n  background: transparent;\n}\n\n.calendar-module-Calendar-value-Ht0Qg-5-0-0-9 {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  border-radius: var(--spacing-10);\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.calendar-module-Calendar-value-Ht0Qg-5-0-0-9:hover {\n  background: var(--secondary-light);\n}\n\n.calendar-module-Calendar-value-Ht0Qg-5-0-0-9:active {\n  background: var(--secondary);\n}\n\n.calendar-module-Calendar-value-Ht0Qg-5-0-0-9:active .calendar-module-Calendar-value--currDate-GxbmJ-5-0-0-9 {\n  color: var(--primary-dark);\n}\n\n.calendar-module-Calendar-value--start-mlqzh-5-0-0-9:hover,\n.calendar-module-Calendar-value--end-975vB-5-0-0-9:hover {\n  background: var(--primary-lightest);\n}\n\n.calendar-module-Calendar-value--startError-bXXuR-5-0-0-9:hover,\n.calendar-module-Calendar-value--endError-M5HbA-5-0-0-9:hover {\n  background: var(--alert-lightest);\n}\n\n.calendar-module-Calendar-value--start-mlqzh-5-0-0-9,\n.calendar-module-Calendar-value--end-975vB-5-0-0-9 {\n  background: var(--primary-lightest);\n}\n\n.calendar-module-Calendar-value--startError-bXXuR-5-0-0-9,\n.calendar-module-Calendar-value--endError-M5HbA-5-0-0-9 {\n  background: var(--alert-lightest);\n}\n\n.calendar-module-Calendar-value--currDateMonthYear-IaAJg-5-0-0-9 {\n  background: var(--primary-lightest);\n}\n\n.calendar-module-Calendar-value--currDateMonthYear-IaAJg-5-0-0-9:hover {\n  background: var(--primary-lighter);\n}\n\n.calendar-module-Calendar-value--currDateMonthYear-IaAJg-5-0-0-9:active {\n  background: var(--primary-lighter);\n}\n\n.calendar-module-Calendar-value--currDate-GxbmJ-5-0-0-9:active {\n  color: var(--primary-dark);\n}\n\n.calendar-module-Calendar-value--active--twAB-5-0-0-9 {\n  background: var(--primary);\n  font-weight: var(--font-weight-bold);\n}\n\n.calendar-module-Calendar-value--active--twAB-5-0-0-9:hover {\n  background: var(--primary-dark);\n}\n\n.calendar-module-Calendar-value--active--twAB-5-0-0-9:active {\n  background: var(--primary-darker);\n}\n\n.calendar-module-Calendar-yearValue--small--xk4--5-0-0-9,\n.calendar-module-Calendar-monthValue--small-R3bKo-5-0-0-9 {\n  height: var(--spacing-60);\n  width: var(--spacing-120);\n}\n\n.calendar-module-Calendar-yearValue--large-Lmlui-5-0-0-9,\n.calendar-module-Calendar-monthValue--large-kkWJR-5-0-0-9 {\n  height: var(--spacing-80);\n  width: var(--spacing-160);\n}\n\n.calendar-module-Calendar-dateValue--small-u5Af3-5-0-0-9 {\n  height: var(--spacing-60);\n  width: var(--spacing-60);\n}\n\n.calendar-module-Calendar-dateValue--large-ngrnG-5-0-0-9 {\n  height: var(--spacing-80);\n  width: var(--spacing-80);\n}\n\n.calendar-module-Calendar-valueWrapper--dummy-QDC-R-5-0-0-9 {\n  opacity: var(--opacity-20);\n}\n\n.calendar-module-Calendar-valueWrapper--disabled-KJRyE-5-0-0-9 {\n  opacity: var(--opacity-10);\n}\n\n.calendar-module-Calendar-valueWrapper--active-dummy-fi7cK-5-0-0-9 {\n  opacity: var(--opacity-16);\n}\n\n.calendar-module-Calendar-value--disabled-xwiCL-5-0-0-9 {\n  pointer-events: none;\n}\n\n.calendar-module-Calendar-dayValues-EuWrN-5-0-0-9 {\n  display: flex;\n  justify-content: center;\n  padding-top: var(--spacing-20);\n  padding-bottom: var(--spacing-20);\n}\n\n.calendar-module-Calendar-dateValues-sXhcu-5-0-0-9 {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: space-around;\n}\n\n.calendar-module-Calendar-dayValues-EuWrN-5-0-0-9 .calendar-module-Calendar-value-Ht0Qg-5-0-0-9 {\n  padding: 0;\n}\n\n.calendar-module-Calendar-eventsIndicator-FoS6M-5-0-0-9 {\n  position: absolute;\n  bottom: var(--spacing-05);\n  width: var(--spacing-10);\n  height: var(--spacing-10);\n  background-color: var(--alert);\n  border-radius: var(--border-radius-full);\n}\n.calendar-module-Calendar-eventsIndicator--small-94d0W-5-0-0-9 {\n  width: 3px;\n  height: 3px;\n}\n.calendar-module-Calendar-eventsIndicator--active-NHhLl-5-0-0-9 {\n  background-color: var(--white);\n}\n\n.calendar-module-Calendar-valueWrapper--inStartRange-lfSXQ-5-0-0-9 {\n  background: linear-gradient(90deg, white 50%, var(--primary-lightest) 50%);\n}\n\n.calendar-module-Calendar-valueWrapper--inEndRange-hiHYl-5-0-0-9 {\n  background: linear-gradient(90deg, var(--primary-lightest) 50%, white 50%);\n}\n\n.calendar-module-Calendar-valueWrapper--inEdgeRange-GU8He-5-0-0-9 .calendar-module-Calendar-inRangeValue-VoWIb-5-0-0-9 {\n  background: var(--primary-lightest);\n}\n\n.calendar-module-Calendar-valueWrapper--inEdgeRange-GU8He-5-0-0-9 .calendar-module-Calendar-inRangeValue-VoWIb-5-0-0-9:hover {\n  background: var(--primary-lighter);\n}\n\n.calendar-module-Calendar-valueWrapper--inEdgeRange-GU8He-5-0-0-9 .calendar-module-Calendar-inRangeValue-VoWIb-5-0-0-9:active {\n  background: var(--primary-light);\n}\n";
var styles$12 = {"Calendar-wrapper":"calendar-module-Calendar-wrapper-bKSSk-5-0-0-9","Calendar":"calendar-module-Calendar-7PxjX-5-0-0-9","Calendar--small":"calendar-module-Calendar--small-A1CLy-5-0-0-9","Calendar-date--small":"calendar-module-Calendar-date--small-CcxQJ-5-0-0-9","Calendar-month--small":"calendar-module-Calendar-month--small-wkwYD-5-0-0-9","Calendar-year--small":"calendar-module-Calendar-year--small-RdwBQ-5-0-0-9","Calendar--large":"calendar-module-Calendar--large-sSoxU-5-0-0-9","Calendar-date--large":"calendar-module-Calendar-date--large-1ZITF-5-0-0-9","Calendar-month--large":"calendar-module-Calendar-month--large-5g0oP-5-0-0-9","Calendar-year--large":"calendar-module-Calendar-year--large-jELMf-5-0-0-9","Calendar-header--large":"calendar-module-Calendar-header--large-z3JIz-5-0-0-9","Calendar-header--small":"calendar-module-Calendar-header--small-dWwwm-5-0-0-9","Calendar-headerIcon":"calendar-module-Calendar-headerIcon-nsCVk-5-0-0-9","Calendar-headerIcon--prev":"calendar-module-Calendar-headerIcon--prev-1RFOJ-5-0-0-9","Calendar-headerIcon--next":"calendar-module-Calendar-headerIcon--next-ympYc-5-0-0-9","Calendar-headerContent":"calendar-module-Calendar-headerContent-Ik37t-5-0-0-9","Calendar-body":"calendar-module-Calendar-body-d-N5F-5-0-0-9","Calendar-valueRow":"calendar-module-Calendar-valueRow-85rKl-5-0-0-9","Calendar-valueWrapper":"calendar-module-Calendar-valueWrapper-H46Ub-5-0-0-9","Calendar-valueWrapper--inRange":"calendar-module-Calendar-valueWrapper--inRange-fV605-5-0-0-9","Calendar-inRangeValue":"calendar-module-Calendar-inRangeValue-VoWIb-5-0-0-9","Calendar-valueWrapper--inRangeError":"calendar-module-Calendar-valueWrapper--inRangeError-MfWMS-5-0-0-9","Calendar-valueWrapper--start":"calendar-module-Calendar-valueWrapper--start-z-bt7-5-0-0-9","Calendar-valueWrapper--startError":"calendar-module-Calendar-valueWrapper--startError-RglvV-5-0-0-9","Calendar-valueWrapper--end":"calendar-module-Calendar-valueWrapper--end-3mDNa-5-0-0-9","Calendar-valueWrapper--hoverDate":"calendar-module-Calendar-valueWrapper--hoverDate-WqHTe-5-0-0-9","Calendar-valueWrapper--hoverEndDate":"calendar-module-Calendar-valueWrapper--hoverEndDate-ZBQie-5-0-0-9","Calendar-valueWrapper--endError":"calendar-module-Calendar-valueWrapper--endError-Q6xFE-5-0-0-9","Calendar-valueWrapper--startEnd":"calendar-module-Calendar-valueWrapper--startEnd-djqp--5-0-0-9","Calendar-value":"calendar-module-Calendar-value-Ht0Qg-5-0-0-9","Calendar-value--currDate":"calendar-module-Calendar-value--currDate-GxbmJ-5-0-0-9","Calendar-value--start":"calendar-module-Calendar-value--start-mlqzh-5-0-0-9","Calendar-value--end":"calendar-module-Calendar-value--end-975vB-5-0-0-9","Calendar-value--startError":"calendar-module-Calendar-value--startError-bXXuR-5-0-0-9","Calendar-value--endError":"calendar-module-Calendar-value--endError-M5HbA-5-0-0-9","Calendar-value--currDateMonthYear":"calendar-module-Calendar-value--currDateMonthYear-IaAJg-5-0-0-9","Calendar-value--active":"calendar-module-Calendar-value--active--twAB-5-0-0-9","Calendar-yearValue--small":"calendar-module-Calendar-yearValue--small--xk4--5-0-0-9","Calendar-monthValue--small":"calendar-module-Calendar-monthValue--small-R3bKo-5-0-0-9","Calendar-yearValue--large":"calendar-module-Calendar-yearValue--large-Lmlui-5-0-0-9","Calendar-monthValue--large":"calendar-module-Calendar-monthValue--large-kkWJR-5-0-0-9","Calendar-dateValue--small":"calendar-module-Calendar-dateValue--small-u5Af3-5-0-0-9","Calendar-dateValue--large":"calendar-module-Calendar-dateValue--large-ngrnG-5-0-0-9","Calendar-valueWrapper--dummy":"calendar-module-Calendar-valueWrapper--dummy-QDC-R-5-0-0-9","Calendar-valueWrapper--disabled":"calendar-module-Calendar-valueWrapper--disabled-KJRyE-5-0-0-9","Calendar-valueWrapper--active-dummy":"calendar-module-Calendar-valueWrapper--active-dummy-fi7cK-5-0-0-9","Calendar-value--disabled":"calendar-module-Calendar-value--disabled-xwiCL-5-0-0-9","Calendar-dayValues":"calendar-module-Calendar-dayValues-EuWrN-5-0-0-9","Calendar-dateValues":"calendar-module-Calendar-dateValues-sXhcu-5-0-0-9","Calendar-eventsIndicator":"calendar-module-Calendar-eventsIndicator-FoS6M-5-0-0-9","Calendar-eventsIndicator--small":"calendar-module-Calendar-eventsIndicator--small-94d0W-5-0-0-9","Calendar-eventsIndicator--active":"calendar-module-Calendar-eventsIndicator--active-NHhLl-5-0-0-9","Calendar-valueWrapper--inStartRange":"calendar-module-Calendar-valueWrapper--inStartRange-lfSXQ-5-0-0-9","Calendar-valueWrapper--inEndRange":"calendar-module-Calendar-valueWrapper--inEndRange-hiHYl-5-0-0-9","Calendar-valueWrapper--inEdgeRange":"calendar-module-Calendar-valueWrapper--inEdgeRange-GU8He-5-0-0-9"};
styleInject(css_248z$1b);

var config = {
  yearBlockRange: 12,
  yearsInRow: 3,
  monthBlock: 12,
  monthsInRow: 3,
  daysInRow: 7,
  months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  days: {
    small: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
    large: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']
  }
};

const {
  yearBlockRange
} = config;
const getIndexOfDay = day => ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'].indexOf(day);
const getYearBlock = year => year - year % yearBlockRange;
const getDaysInMonth = (year, month) => new Date(year, month + 1, 0).getDate();
const getFirstDayOfMonth = (year, month) => new Date(year, month).getDay();
const getDateInfo = d => {
  if (d) {
    const dateVal = convertToDate(d);
    if (dateVal) {
      const year = dateVal.getFullYear();
      const month = dateVal.getMonth();
      const day = dateVal.getDay();
      const date = dateVal.getDate();
      const decadeYear = getYearBlock(year);
      return {
        decadeYear,
        year,
        month,
        day,
        date
      };
    } else {
      return {};
    }
  }
  return {};
};
const convertToDate = (d, format, validators) => {
  let dateVal;
  if (d) {
    if (typeof d === 'number') {
      dateVal = new Date(d);
    } else if (typeof d === 'string') {
      return format ? translateToDate(format, d, validators) : undefined;
    } else if (!(d instanceof Date)) {
      const {
        year,
        month,
        date
      } = d;
      dateVal = new Date(year, month, date, 0, 0, 0);
    } else {
      dateVal = d;
    }
  }
  return dateVal;
};
const compareYearBlock = (d, operator, currDecade) => {
  if (d) {
    const {
      decadeYear: limitDecade
    } = getDateInfo(d);
    switch (operator) {
      case 'less':
        if (limitDecade < currDecade) return true;
        break;
      case 'more':
        if (limitDecade > currDecade) return true;
        break;
      case 'equal':
        if (limitDecade === currDecade) return true;
        break;
    }
  }
  return false;
};
const compareDate = (d, operator, currYear, currMonth, currDate) => {
  if (d) {
    const {
      year: limitYear,
      month: limitMonth,
      date: limitDate
    } = getDateInfo(d);
    switch (operator) {
      case 'less':
        if (limitYear < currYear) return true;
        if (limitYear > currYear) return false;
        if (currMonth !== undefined) {
          if (limitMonth < currMonth) return true;
          if (limitMonth > currMonth) return false;
        }
        if (currDate !== undefined && limitDate < currDate) return true;
        break;
      case 'more':
        if (limitYear > currYear) return true;
        if (limitYear < currYear) return false;
        if (currMonth !== undefined) {
          if (limitMonth > currMonth) return true;
          if (limitMonth < currMonth) return false;
        }
        if (currDate !== undefined && limitDate > currDate) return true;
        break;
      case 'equal':
        if (currDate !== undefined) {
          if (limitYear === currYear && limitMonth === currMonth && limitDate === currDate) return true;
        } else if (currMonth !== undefined) {
          if (limitYear === currYear && limitMonth === currMonth) return true;
        } else if (limitYear === currYear) return true;
    }
  }
  return false;
};
const translateToString = (format, d) => {
  if (format && d) {
    const {
      year,
      month,
      date
    } = getDateInfo(d);
    const separator = format.includes('/') ? '/' : '-';
    const f = format.split(separator);
    const val = f.reduce((out, curr, i) => {
      switch (curr) {
        case 'mm':
          out += (month < 9 && '0') + (month + 1);
          break;
        case 'yyyy':
          out += year;
          break;
        case 'dd':
          out += (date < 10 && '0') + date;
          break;
      }
      if (i !== f.length - 1) out += separator;
      return out;
    }, '');
    return val;
  }
  return '';
};
const translateToDate = (format, val, validators = []) => {
  if (isValid(validators, val, format)) {
    const separator = format.includes('/') ? '/' : '-';
    let year = -1,
      month = -1,
      date = -1;
    const v = val.split(separator);
    format.split(separator).forEach((f, i) => {
      switch (f) {
        case 'mm':
          month = +v[i] - 1;
          break;
        case 'yyyy':
          year = +v[i];
          break;
        case 'dd':
          date = +v[i];
          break;
      }
    });
    const d = convertToDate({
      year,
      month,
      date
    });
    return d;
  } else {
    return undefined;
  }
};
const dateComparison = (date, operator, currDate, currMonth, currYear) => {
  const currentDate = new Date(`${currYear}-${currMonth}-${currDate}`);
  if (date) {
    switch (operator) {
      case 'less':
        return date <= currentDate;
      case 'equal':
        return date.toDateString() === currentDate.toDateString();
      case 'more':
        return date >= currentDate;
      default:
        return false;
    }
  }
  return false;
};

class Calendar extends React.Component {
  constructor(props) {
    super(props);
    _defineProperty$1(this, "updateState", (year, month, date) => {
      this.setState({
        year,
        month,
        date
      });
    });
    _defineProperty$1(this, "getDateValue", (year, month, date) => {
      const d = new Date(year, month, date);
      return d;
    });
    _defineProperty$1(this, "getNavDateInfo", index => {
      const {
        yearBlockNav,
        yearNav,
        monthNav
      } = this.state;
      const {
        monthBlock
      } = config;
      const yearBlock = yearBlockNav;
      const month = (monthNav + index) % monthBlock === -1 ? 11 : (monthNav + index) % monthBlock;
      // const year = yearNav + (index !== 0 && month < monthNav ? 1 : 0);
      let year;
      if (index >= 0) {
        year = yearNav + (index !== 0 && month < monthNav ? 1 : 0);
      } else {
        year = yearNav - (index !== 0 && month > monthNav ? 1 : 0);
      }
      return {
        yearBlock,
        year,
        month
      };
    });
    _defineProperty$1(this, "getInRangeError", () => {
      const {
        rangePicker,
        rangeLimit
      } = this.props;
      const {
        startDate: startDateState,
        endDate: endDateState,
        hoverDate: hoverDateState
      } = this.state;
      if (rangePicker && rangeLimit) {
        const {
          year: startYear,
          month: startMonth,
          date: startDate
        } = getDateInfo(startDateState);
        const {
          year: endYear,
          month: endMonth,
          date: endDate
        } = getDateInfo(endDateState);
        const {
          year: hoverYear,
          month: hoverMonth,
          date: hoverDate
        } = getDateInfo(hoverDateState);
        let limitDate;
        if (startDateState) {
          limitDate = new Date(startDateState);
          limitDate.setDate(startDate + rangeLimit);
          return compareDate(limitDate, 'less', hoverYear, hoverMonth, hoverDate + 1) || compareDate(limitDate, 'less', endYear, endMonth, endDate + 1);
        }
        if (endDateState) {
          limitDate = new Date(endDateState);
          limitDate.setDate(endDate - rangeLimit);
          return compareDate(limitDate, 'more', hoverYear, hoverMonth, hoverDate - 1) || compareDate(limitDate, 'more', startYear, startMonth, startDate - 1);
        }
      }
      return false;
    });
    _defineProperty$1(this, "selectYear", year => () => {
      this.updateState(year);
      this.setState({
        view: 'month'
      });
    });
    _defineProperty$1(this, "yearMouseOverHandler", (year, isCurrentYear, isDisabled, ev) => {
      const {
        onYearHover
      } = this.props;
      const yearData = {
        value: year,
        year: year,
        isCurrentYear: isCurrentYear,
        isDisabled: isDisabled
      };
      if (onYearHover) onYearHover(yearData, ev);
    });
    _defineProperty$1(this, "selectMonth", month => () => {
      this.updateState(this.state.yearNav, month);
      this.setState({
        view: 'date'
      });
    });
    _defineProperty$1(this, "monthMouseOverHandler", (month, isCurrentMonth, isDisabled, ev) => {
      const {
        months
      } = config;
      const {
        onMonthHover
      } = this.props;
      const monthData = {
        value: months[month],
        month: months[month],
        year: this.state.year,
        isCurrentMonth: isCurrentMonth,
        isDisabled: isDisabled
      };
      if (onMonthHover) onMonthHover(monthData, ev);
    });
    _defineProperty$1(this, "selectDate", (index, date, prevMonthDayRange, dayRange) => {
      const d = this.calculateDate(index, date, prevMonthDayRange, dayRange, false);
      this.setState({
        currDate: d
      });
    });
    _defineProperty$1(this, "calculateDate", (index, date, prevMonthDayRange, dayRange, isDateHovered) => {
      let neighbouringMonthIndex;
      let neighbouringMonthDate;
      let type = '';
      if (date <= 0) {
        neighbouringMonthIndex = index - 1;
        neighbouringMonthDate = prevMonthDayRange + date;
        type = 'prev';
      } else if (date > dayRange) {
        neighbouringMonthIndex = index;
        neighbouringMonthDate = date;
      } else {
        neighbouringMonthIndex = index;
        neighbouringMonthDate = date;
      }
      const {
        year,
        month
      } = this.getNavDateInfo(neighbouringMonthIndex);
      if (isDateHovered === false) {
        this.updateState(year, month, neighbouringMonthDate);
        this.onNavIconClickHandler(type)();
      }
      const d = this.getDateValue(year, month, neighbouringMonthDate);
      return d;
    });
    _defineProperty$1(this, "onNavIconClickHandler", type => () => {
      const {
        view,
        yearBlockNav,
        yearNav,
        monthNav
      } = this.state;
      const {
        yearBlockRange,
        monthBlock
      } = config;
      switch (view) {
        case 'year':
          if (type === 'prev') this.setState({
            yearBlockNav: yearBlockNav - yearBlockRange
          });
          if (type === 'next') this.setState({
            yearBlockNav: yearBlockNav + yearBlockRange
          });
          break;
        case 'month':
          if (type === 'prev') this.setState({
            yearNav: yearNav - 1
          });
          if (type === 'next') this.setState({
            yearNav: yearNav + 1
          });
          break;
        case 'date':
          if (type === 'prev') {
            if (monthNav === 0) this.setState({
              yearNav: yearNav - 1
            });
            this.setState({
              monthNav: (monthBlock + monthNav - 1) % monthBlock
            });
          }
          if (type === 'next') {
            if (monthNav === monthBlock - 1) this.setState({
              yearNav: yearNav + 1
            });
            this.setState({
              monthNav: (monthNav + 1) % monthBlock
            });
          }
          break;
      }
    });
    _defineProperty$1(this, "renderJumpButton", type => {
      const {
        disabledBefore,
        disabledAfter,
        size
      } = this.props;
      const {
        view,
        yearBlockNav,
        yearNav,
        monthNav
      } = this.state;
      let disabled = false;
      switch (view) {
        case 'year':
          if (type === 'prev') {
            disabled = compareYearBlock(disabledBefore, 'more', yearBlockNav) || compareYearBlock(disabledBefore, 'equal', yearBlockNav);
          }
          if (type === 'next') {
            disabled = compareYearBlock(disabledAfter, 'less', yearBlockNav) || compareYearBlock(disabledAfter, 'equal', yearBlockNav);
          }
          break;
        case 'month':
          if (type === 'prev') {
            disabled = compareDate(disabledBefore, 'more', yearNav - 1);
          }
          if (type === 'next') {
            disabled = compareDate(disabledAfter, 'less', yearNav + 1);
          }
          break;
        case 'date':
          if (type === 'prev') {
            disabled = compareDate(disabledBefore, 'more', yearNav, monthNav - 1);
          }
          if (type === 'next') {
            disabled = compareDate(disabledAfter, 'less', yearNav, monthNav + 1);
          }
          break;
      }
      const headerIconClass = classNames({
        [styles$12['Calendar-headerIcon']]: true,
        [styles$12[`Calendar-headerIcon--${type}`]]: type
      });
      return /*#__PURE__*/React.createElement(Button, {
        type: "button",
        className: headerIconClass,
        appearance: "basic",
        icon: `arrow_${type === 'next' ? 'forward' : 'back'}`,
        disabled: disabled,
        size: size === 'small' ? 'tiny' : 'regular',
        onClick: this.onNavIconClickHandler(type)
      });
    });
    _defineProperty$1(this, "onNavHeadingClickHandler", currView => () => {
      const {
        monthsInView
      } = this.props;
      let {
        jumpView
      } = this.props;
      if (jumpView) {
        if (monthsInView > 1) jumpView = false;
      }
      if (jumpView) {
        if (currView === 'year') this.setState({
          view: 'date'
        });
        if (currView === 'month') this.setState({
          view: 'year'
        });
        if (currView === 'date') this.setState({
          view: 'month'
        });
      }
    });
    _defineProperty$1(this, "renderHeaderContent", index => {
      const {
        size,
        monthsInView,
        rangePicker
      } = this.props;
      const {
        view,
        yearBlockNav
      } = this.state;
      const {
        yearBlockRange,
        months
      } = config;
      const {
        year: yearNavVal,
        month: monthNavVal
      } = this.getNavDateInfo(index);
      const headerContentClass = classNames({
        [styles$12['Calendar-headerContent']]: true,
        [styles$12['Calendar-headerContent--noIcon-left']]: index === monthsInView - 1,
        [styles$12['Calendar-headerContent--noIcon-right']]: index === 0
      });
      let headerContent = '';
      if (view === 'year') headerContent = `${yearBlockNav} - ${yearBlockNav + (yearBlockRange - 1)}`;
      if (view === 'month') headerContent = `${yearNavVal}`;
      const renderHeading = content => {
        if (size === 'small') {
          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
            weight: "strong"
          }, content), view !== 'year' && !rangePicker && /*#__PURE__*/React.createElement(Icon, {
            appearance: "inverse",
            className: "pl-3",
            name: "keyboard_arrow_down"
          }));
        }
        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Heading, {
          size: "s"
        }, content), view !== 'year' && !rangePicker && /*#__PURE__*/React.createElement(Icon, {
          appearance: "inverse",
          className: "pl-3",
          name: "keyboard_arrow_down"
        }));
      };
      return /*#__PURE__*/React.createElement("div", {
        className: headerContentClass
      }, view !== 'date' &&
      /*#__PURE__*/
      // TODO(a11y)
      //  eslint-disable-next-line
      React.createElement("div", {
        className: "d-flex justify-content-center align-items-center",
        onClick: this.onNavHeadingClickHandler(view)
      }, renderHeading(headerContent)), view === 'date' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
        onClick: this.onNavHeadingClickHandler(view),
        className: "d-flex justify-content-center align-items-center"
      }, renderHeading(months[monthNavVal])), /*#__PURE__*/React.createElement("div", {
        className: "ml-4 d-flex justify-content-center align-items-center",
        onClick: this.onNavHeadingClickHandler('month')
      }, renderHeading(yearNavVal))));
    });
    _defineProperty$1(this, "renderBodyYear", () => {
      const {
        yearBlockRange,
        yearsInRow
      } = config;
      const {
        size,
        rangePicker,
        disabledBefore,
        disabledAfter
      } = this.props;
      const {
        yearBlockNav,
        currYear
      } = this.state;
      const noOfRows = Math.ceil(yearBlockRange / yearsInRow);
      return Array.from({
        length: noOfRows
      }, (_y, row) => /*#__PURE__*/React.createElement("div", {
        key: row,
        className: styles$12['Calendar-valueRow']
      }, Array.from({
        length: yearsInRow
      }, (_x, col) => {
        const offset = yearsInRow * row + col;
        if (offset === yearBlockNav) return undefined;
        const year = yearBlockNav + offset;
        const disabled = compareDate(disabledBefore, 'more', year) || compareDate(disabledAfter, 'less', year);
        const active = !disabled && !rangePicker && year === this.state.year;
        const isCurrentYear = () => {
          return year === currYear;
        };
        const valueClass = classNames({
          [styles$12['Calendar-value']]: true,
          [styles$12['Calendar-value--active']]: active,
          [styles$12['Calendar-value--disabled']]: disabled,
          [styles$12['Calendar-yearValue']]: true,
          [styles$12[`Calendar-yearValue--${size}`]]: size,
          [styles$12['Calendar-value--currDateMonthYear']]: isCurrentYear()
        });
        const textClass = classNames({
          [styles$12['Calendar-value--currDate']]: isCurrentYear() && !active,
          [styles$12['Calendar-text']]: true
        });
        const getTextColor = classNames({
          inverse: !active && !isCurrentYear() && !disabled,
          white: active,
          'primary-lighter': isCurrentYear() && disabled,
          primary: isCurrentYear(),
          'inverse-lightest': disabled
        });
        return (
          /*#__PURE__*/
          //  TODO(a11y)
          //  eslint-disable-next-line
          React.createElement("div", {
            //  eslint-disable-next-line
            key: `${row}-${col}`,
            "data-test": "DesignSystem-Calendar--yearValue",
            className: valueClass,
            onClick: this.selectYear(year)
            //  eslint-disable-next-line
            ,
            onMouseOver: this.yearMouseOverHandler.bind(this, year, isCurrentYear(), disabled)
          }, /*#__PURE__*/React.createElement(Text, {
            size: size === 'small' ? 'small' : 'regular',
            color: getTextColor,
            className: textClass
          }, year))
        );
      })));
    });
    _defineProperty$1(this, "renderBodyMonth", () => {
      const {
        monthBlock,
        monthsInRow,
        months
      } = config;
      const {
        size,
        disabledBefore,
        disabledAfter
      } = this.props;
      const {
        yearNav,
        year,
        currYear,
        currMonth
      } = this.state;
      const noOfRows = Math.ceil(monthBlock / monthsInRow);
      return Array.from({
        length: noOfRows
      }, (_y, row) => /*#__PURE__*/React.createElement("div", {
        key: row,
        className: styles$12['Calendar-valueRow']
      }, Array.from({
        length: monthsInRow
      }, (_x, col) => {
        const month = monthsInRow * row + col;
        const disabled = compareDate(disabledBefore, 'more', yearNav, month) || compareDate(disabledAfter, 'less', yearNav, month);
        const active = !disabled && year === yearNav && month === this.state.month;
        const isCurrentMonth = () => {
          return currYear === yearNav && currMonth === month;
        };
        const valueClass = classNames({
          [styles$12['Calendar-value']]: true,
          [styles$12['Calendar-value--active']]: active,
          [styles$12['Calendar-value--disabled']]: disabled,
          [styles$12['Calendar-monthValue']]: true,
          [styles$12[`Calendar-monthValue--${size}`]]: size,
          [styles$12['Calendar-value--currDateMonthYear']]: isCurrentMonth()
        });
        const getTextColor = classNames({
          inverse: !active && !isCurrentMonth() && !disabled,
          white: active,
          'primary-lighter': isCurrentMonth() && disabled,
          primary: isCurrentMonth(),
          'inverse-lightest': disabled
        });
        const textClass = classNames({
          [styles$12['Calendar-value--currDate']]: isCurrentMonth() && !active,
          [styles$12['Calendar-text']]: true
        });
        return (
          /*#__PURE__*/
          //TODO(a11y)
          //eslint-disable-next-line
          React.createElement("div", {
            key: `${row}-${col}`,
            "data-test": "DesignSystem-Calendar--monthValue",
            className: valueClass,
            onClick: this.selectMonth(month)
            //  eslint-disable-next-line
            ,
            onMouseOver: this.monthMouseOverHandler.bind(this, month, isCurrentMonth(), disabled)
          }, /*#__PURE__*/React.createElement(Text, {
            size: size === 'small' ? 'small' : 'regular',
            color: getTextColor,
            className: textClass
          }, months[month]))
        );
      })));
    });
    _defineProperty$1(this, "onDateRowMouseLeaveHandler", () => {
      const {
        rangePicker
      } = this.props;
      if (rangePicker) {
        this.setState({
          hoverDate: undefined
        });
      }
    });
    _defineProperty$1(this, "renderBodyDate", index => {
      const {
        daysInRow,
        days
      } = config;
      const {
        size,
        firstDayOfWeek
      } = this.props;
      const textSize = size === 'large' ? 'regular' : 'small';
      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
        className: styles$12['Calendar-dayValues']
      }, Array.from({
        length: 7
      }, (_x, day) => {
        const valueClass = classNames({
          [styles$12['Calendar-valueWrapper']]: true
        });
        const dayValue = (day + daysInRow + getIndexOfDay(firstDayOfWeek)) % daysInRow;
        return /*#__PURE__*/React.createElement(Text, {
          key: day,
          className: valueClass,
          appearance: "default",
          weight: "strong",
          size: textSize
        }, days[size][dayValue]);
      })), /*#__PURE__*/React.createElement("div", {
        className: styles$12['Calendar-dateValues'],
        onMouseLeave: this.onDateRowMouseLeaveHandler
      }, this.renderDateValues(index)));
    });
    _defineProperty$1(this, "renderDateValues", index => {
      const {
        daysInRow,
        monthBlock
      } = config;
      const {
        size,
        rangePicker,
        firstDayOfWeek,
        disabledBefore,
        disabledAfter,
        monthsInView,
        onDateHover
      } = this.props;
      const {
        startDate,
        endDate,
        hoverDate,
        year: yearState,
        month: monthState,
        date: dateState,
        currMonth,
        currYear,
        todayDate
      } = this.state;
      const {
        year: yearNavVal,
        month: monthNavVal
      } = this.getNavDateInfo(index);
      const prevMonth = monthNavVal - 1;
      const prevYear = yearNavVal;
      const prevMonthDayRange = getDaysInMonth(prevYear, prevMonth);
      const dayRange = getDaysInMonth(yearNavVal, monthNavVal);
      const firstDayIndex = getFirstDayOfMonth(yearNavVal, monthNavVal);
      const desiredFirstDayIndex = getIndexOfDay(firstDayOfWeek);
      const dayDiff = (firstDayIndex - desiredFirstDayIndex + 7) % 7;
      const dummyDays = Math.abs(dayDiff);
      let noOfRows = Math.ceil((dayRange + dummyDays) / daysInRow);

      // if(noOfRows !== 6 && monthsInView <= 1) ?
      if (noOfRows === 6) ; else if (monthsInView > 1) ; else {
        noOfRows = noOfRows + 1;
      }
      const inRangeError = this.getInRangeError();
      const events = this.props.events;
      const onClickHandler = date => () => {
        if (rangePicker) {
          if (startDate && endDate) {
            this.selectDate(index, date, prevMonthDayRange, dayRange);
          } else {
            if (!inRangeError) this.selectDate(index, date, prevMonthDayRange, dayRange);
          }
        } else {
          this.selectDate(index, date, prevMonthDayRange, dayRange);
        }
      };
      const onMouseOverHandler = date => () => {
        if (rangePicker) {
          const d = this.getDateValue(yearNavVal, monthNavVal, date);
          if (!startDate || !endDate) {
            this.setState({
              hoverDate: d
            });
          }
        }
      };
      const onMouseEnterHandler = (date, isToday, isDisabled, ev) => {
        const d = this.calculateDate(index, date, prevMonthDayRange, dayRange, true) || new Date();
        const {
          months,
          days
        } = config;
        const dayName = days.large[d.getDay()];
        const dateData = {
          value: d.getDate(),
          isToday: isToday,
          isDisabled: isDisabled,
          todayDate: this.state.currDate,
          fullDate: d,
          date: d.getDate(),
          month: months[d.getMonth()],
          year: d.getFullYear(),
          dayName: dayName
        };
        if (onDateHover) onDateHover(dateData, ev);
      };
      return Array.from({
        length: noOfRows
      }, (_y, row) => {
        return /*#__PURE__*/React.createElement("div", {
          key: row,
          className: styles$12['Calendar-valueRow']
        }, Array.from({
          length: daysInRow
        }, (_x, col) => {
          const date = daysInRow * row + col - dummyDays + 1;
          const dummy = date <= 0 || date > dayRange;
          const disabled = compareDate(disabledBefore, 'more', yearNavVal, monthNavVal, date) || compareDate(disabledAfter, 'less', yearNavVal, monthNavVal, date);
          let active = !disabled && yearState === yearNavVal && monthState === monthNavVal && dateState === date;
          const today = () => {
            let boolVal;
            if (date <= 0) {
              boolVal = currYear === yearNavVal && currMonth === monthNavVal - 1 && todayDate === prevMonthDayRange + date;
            } else if (date > dayRange) {
              boolVal = currYear === yearNavVal && currMonth === monthNavVal + 1 && todayDate === date - dayRange;
            } else {
              boolVal = currYear === yearNavVal && currMonth === monthNavVal && todayDate === date;
            }
            return boolVal;
          };
          let startActive = false;
          let endActive = false;
          let inRange = false;
          let inRangeLast = false;
          const {
            year: sYear,
            month: sMonth,
            date: sDate
          } = getDateInfo(startDate);
          const {
            year: eYear,
            month: eMonth,
            date: eDate
          } = getDateInfo(endDate);
          const isStart = startActive || endDate && inRangeLast && compareDate(hoverDate, 'less', eYear, eMonth, eDate);
          const isEnd = endActive || startDate && inRangeLast && compareDate(hoverDate, 'more', sYear, sMonth, sDate);
          const dateInString = `${date <= 0 ? prevMonthDayRange + date : date > dayRange ? date - dayRange : date}`;
          const monthInString = `${date <= 0 ? monthNavVal === 0 ? monthNavVal + monthBlock : (monthNavVal - 1) % monthBlock + 1 : date > dayRange ? (monthNavVal + 1) % monthBlock + 1 : monthNavVal + 1}`;
          const yearInString = `${date <= 0 && monthNavVal + 1 === 1 ? yearNavVal - 1 : date > dayRange && monthNavVal + 1 === 12 ? yearNavVal + 1 : yearNavVal}`;
          const completeDateString = `${monthInString.length === 2 ? monthInString : `0${monthInString}`}/${dateInString.length === 2 ? dateInString : `0${dateInString}`}/${yearInString}`;
          const isEventExist = events && typeof events === 'object' && events.hasOwnProperty(completeDateString);
          if (rangePicker) {
            startActive = compareDate(startDate, 'equal', yearNavVal, monthNavVal, date);
            endActive = compareDate(endDate, 'equal', yearNavVal, monthNavVal, date);
            inRangeLast = compareDate(hoverDate, 'equal', yearNavVal, monthNavVal, date);
            active = !disabled && (startActive || endActive);
            if (startDate && endDate) {
              inRange = !disabled && (dateComparison(startDate, 'less', dateInString, monthInString, yearInString) && dateComparison(endDate, 'more', dateInString, monthInString, yearInString) || startActive || endActive);
            } else if (startDate) {
              inRange = !disabled && (dateComparison(hoverDate, 'more', dateInString, monthInString, yearInString) || inRangeLast) && dateComparison(startDate, 'less', dateInString, monthInString, yearInString);
            } else if (endDate) {
              inRange = !disabled && (dateComparison(hoverDate, 'less', dateInString, monthInString, yearInString) || inRangeLast) && dateComparison(endDate, 'more', dateInString, monthInString, yearInString);
            }
          }
          const isRangeError = inRange && inRangeError;
          const isStartActive = startDate && dateComparison(startDate, 'equal', dateInString, monthInString, yearInString);
          const isEndActive = endDate && dateComparison(endDate, 'equal', dateInString, monthInString, yearInString);
          const activeDate = startDate && endDate && (isStartActive || isEndActive);
          const isHoverBackwardLast = this.props.allowReverseSelection && dateComparison(hoverDate, 'equal', dateInString, monthInString, yearInString) && hoverDate && (startDate && hoverDate < startDate || endDate && hoverDate < endDate);
          const isHoverForwardLast = dateComparison(hoverDate, 'equal', dateInString, monthInString, yearInString) && hoverDate && startDate && hoverDate >= startDate;
          const isEdgeElement = col === 0 || col === 6;
          const isValueRange = inRange || rangePicker && (active || activeDate);
          const wrapperClass = classNames({
            [styles$12['Calendar-valueWrapper']]: true,
            [styles$12['Calendar-valueWrapper--disabled']]: disabled,
            [styles$12['Calendar-valueWrapper--inRange']]: !isEdgeElement && isValueRange,
            [styles$12['Calendar-valueWrapper--inEdgeRange']]: isValueRange && isEdgeElement,
            [styles$12['Calendar-valueWrapper--inRangeError']]: isRangeError,
            [styles$12['Calendar-valueWrapper--start']]: isStart && !isEnd && col !== 6 || rangePicker && isStartActive && col !== 6,
            [styles$12['Calendar-valueWrapper--end']]: isEnd && !isStart && col !== 0 || rangePicker && isEndActive && col !== 0,
            [styles$12['Calendar-valueWrapper--startEnd']]: isStart && isEnd,
            [styles$12['Calendar-valueWrapper--startError']]: isStart && isRangeError || rangePicker && isRangeError && isStartActive,
            [styles$12['Calendar-valueWrapper--endError']]: isEnd && isRangeError || rangePicker && isRangeError && isEndActive,
            [styles$12['Calendar-valueWrapper--dummy']]: dummy && !disabled && !activeDate,
            [styles$12['Calendar-valueWrapper--active-dummy']]: dummy && !disabled && activeDate,
            [styles$12['Calendar-valueWrapper--hoverDate']]: rangePicker && isHoverForwardLast,
            [styles$12['Calendar-valueWrapper--hoverEndDate']]: rangePicker && isHoverBackwardLast,
            [styles$12['Calendar-valueWrapper--inStartRange']]: isValueRange && col === 0 && !active && !activeDate,
            [styles$12['Calendar-valueWrapper--inEndRange']]: isValueRange && col === 6 && !active && !activeDate
          });
          const valueClass = classNames({
            [styles$12['Calendar-value']]: true,
            [styles$12['Calendar-inRangeValue']]: !isStart && !isEnd && !active && !activeDate,
            [styles$12['Calendar-value--start']]: isStart && !isEnd,
            [styles$12['Calendar-value--end']]: isEnd && !isStart,
            [styles$12['Calendar-value--startError']]: isStart && isRangeError,
            [styles$12['Calendar-value--endError']]: isEnd && isRangeError,
            [styles$12['Calendar-value--active']]: active || activeDate,
            [styles$12['Calendar-value--disabled']]: disabled,
            [styles$12['Calendar-dateValue']]: true,
            [styles$12[`Calendar-dateValue--${size}`]]: size,
            [styles$12['Calendar-value--currDateMonthYear']]: today(),
            [styles$12['Calendar-value--currDate']]: today() && !active && !activeDate
          });
          const getTextColor = classNames({
            inverse: !active && !today() && !disabled && !activeDate,
            white: active || activeDate,
            primary: today()
          });
          return /*#__PURE__*/React.createElement("div", {
            key: `${row}-${col}`,
            className: wrapperClass,
            "data-test": "designSystem-Calendar-WrapperClass"
          }, !dummy && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
            color: getTextColor,
            size: size === 'small' ? 'small' : 'regular',
            appearance: disabled ? 'subtle' : 'default',
            "data-test": "DesignSystem-Calendar--dateValue",
            className: valueClass,
            onClick: onClickHandler(date),
            onMouseOver: onMouseOverHandler(date),
            onMouseEnter: onMouseEnterHandler.bind(this, date, today(), disabled)
          }, date), isEventExist && this.renderEventsIndicator(size, active)), (dummy && date > 0 && index === monthsInView - 1 || dummy && date <= 0 && index === 0) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
            appearance: active || activeDate ? 'white' : today() ? 'link' : 'subtle',
            size: size === 'small' ? 'small' : 'regular',
            "data-test": "DesignSystem-Calendar--dateValue",
            className: valueClass,
            onClick: onClickHandler(date),
            onMouseOver: onMouseOverHandler(date),
            onMouseEnter: onMouseEnterHandler.bind(this, date, today(), disabled)
          }, date <= 0 ? prevMonthDayRange + date : date - dayRange), isEventExist && this.renderEventsIndicator(size, active)));
        }));
      });
    });
    _defineProperty$1(this, "renderCalendar", index => {
      const {
        size,
        monthsInView
      } = this.props;
      const {
        view
      } = this.state;
      const containerClass = classNames({
        [styles$12['Calendar']]: true,
        [styles$12[`Calendar-${view}--${size}`]]: view,
        [styles$12[`Calendar--${size}`]]: size
      });
      const headerClass = classNames({
        [styles$12[`Calendar-header--${size}`]]: size
      });
      const bodyClass = classNames({
        [styles$12['Calendar-body']]: true
      });
      return /*#__PURE__*/React.createElement("div", {
        key: index,
        "data-test": "DesignSystem-Calendar",
        className: containerClass
      }, /*#__PURE__*/React.createElement("div", {
        className: headerClass
      }, index === 0 && this.renderJumpButton('prev'), this.renderHeaderContent(index), index === monthsInView - 1 && this.renderJumpButton('next')), /*#__PURE__*/React.createElement("div", {
        className: bodyClass
      }, view === 'year' && this.renderBodyYear(), view === 'month' && this.renderBodyMonth(), view === 'date' && this.renderBodyDate(index)));
    });
    const {
      rangePicker: _rangePicker,
      startDate: _startDate,
      endDate: _endDate,
      monthsInView: _monthsInView,
      view: _view
    } = this.props;
    const currDate = _rangePicker ? _endDate || _startDate : props.date;
    const _yearNav = props.yearNav !== undefined ? props.yearNav : getDateInfo(currDate || Date.now()).year;
    const _monthNav = props.monthNav !== undefined ? props.monthNav : getDateInfo(currDate || Date.now()).month;
    const {
      year: _year,
      month: _month,
      date: _date
    } = getDateInfo(currDate);
    const todayCompleteDate = getDateInfo(new Date(Date.now()));
    this.state = {
      currDate,
      startDate: _startDate,
      endDate: _endDate,
      yearNav: _yearNav,
      monthNav: _monthNav,
      year: _year,
      month: _month,
      date: _date,
      todayDate: todayCompleteDate.date,
      currMonth: todayCompleteDate.month,
      currYear: todayCompleteDate.year,
      view: _monthsInView > 1 ? 'date' : _view,
      yearBlockNav: getYearBlock(_yearNav)
    };
  }
  componentDidUpdate(prevProps, prevState) {
    const {
      monthsInView
    } = this.props;
    if (prevProps.date !== this.props.date) {
      const {
        year,
        month,
        date
      } = getDateInfo(this.props.date);
      this.updateState(year, month, date);
      const d = convertToDate(this.props.date);
      this.setState({
        currDate: d
      });
    }
    if (this.props.startDate && !isNaN(this.props.startDate.getTime()) && prevProps.startDate !== this.props.startDate) {
      const d = convertToDate(this.props.startDate);
      this.setState({
        startDate: d
      });
    }
    if (this.props.endDate && !isNaN(this.props.endDate.getTime()) && prevProps.endDate !== this.props.endDate) {
      const d = convertToDate(this.props.endDate);
      this.setState({
        endDate: d
      });
    }
    if (prevProps.view !== this.props.view) {
      if (this.props.monthsInView === 1) {
        this.setState({
          view: this.props.view
        });
      }
    }
    if (prevProps.yearNav !== this.props.yearNav) {
      const {
        yearNav
      } = this.props;
      if (yearNav) {
        this.setState({
          yearNav,
          yearBlockNav: getYearBlock(yearNav)
        });
      }
    }
    if (prevProps.monthNav !== this.props.monthNav) {
      const {
        monthNav
      } = this.props;
      if (monthNav) {
        this.setState({
          monthNav
        });
      }
    }
    if (prevState.currDate !== this.state.currDate) {
      const {
        rangePicker,
        onDateChange
      } = this.props;
      const {
        currDate,
        startDate,
        endDate
      } = this.state;
      if (currDate) {
        if (onDateChange) onDateChange(currDate);
        if (rangePicker) {
          this.setState({
            hoverDate: undefined
          });
          if (startDate && endDate) {
            this.setState({
              startDate: currDate,
              endDate: undefined
            });
          } else {
            const {
              year,
              month,
              date
            } = getDateInfo(currDate);
            if (startDate) {
              if (compareDate(startDate, 'more', year, month, date)) {
                this.setState({
                  startDate: currDate
                });
              } else {
                this.setState({
                  endDate: currDate
                });
              }
            } else if (endDate) {
              if (compareDate(endDate, 'less', year, month, date)) {
                this.setState({
                  endDate: currDate
                });
              } else {
                this.setState({
                  startDate: currDate
                });
              }
            } else {
              this.setState({
                startDate: currDate
              });
            }
          }
        } else {
          this.setState({
            startDate: currDate
          });
        }
      }
    }
    if (this.state.startDate && !isNaN(this.state.startDate.getTime()) && prevState.startDate?.getTime() !== this.state.startDate?.getTime() || this.state.endDate && !isNaN(this.state.endDate?.getTime()) && prevState.endDate?.getTime() !== this.state.endDate?.getTime()) {
      const {
        onRangeChange
      } = this.props;
      const {
        startDate,
        endDate
      } = this.state;
      if (onRangeChange) onRangeChange(startDate, endDate);
    }
    if (this.props.allowReverseSelection && prevState.hoverDate !== this.state.hoverDate) {
      const {
        hoverDate,
        startDate,
        endDate
      } = this.state;
      if (startDate && !endDate) {
        const {
          year,
          month,
          date
        } = getDateInfo(startDate);
        if (compareDate(hoverDate, 'less', year, month, date)) {
          this.setState({
            startDate: undefined,
            endDate: startDate
          });
        }
      } else if (endDate && !startDate) {
        const {
          year,
          month,
          date
        } = getDateInfo(endDate);
        if (compareDate(hoverDate, 'more', year, month, date)) {
          this.setState({
            startDate: endDate,
            endDate: undefined
          });
        }
      }
    }
    if (prevState.year !== this.state.year) {
      const {
        year
      } = this.state;
      if (year !== undefined && monthsInView === 1) {
        this.setState({
          year,
          yearBlockNav: getYearBlock(year),
          yearNav: year
        });
      }
    }
    if (prevState.month !== this.state.month) {
      const {
        month
      } = this.state;
      if (month !== undefined && monthsInView === 1) {
        this.setState({
          monthNav: month
        });
      }
    }
  }
  renderEventsIndicator(size, active) {
    const eventsIndicatorClass = classNames({
      [styles$12['Calendar-eventsIndicator']]: true,
      [styles$12[`Calendar-eventsIndicator--${size}`]]: true,
      [styles$12['Calendar-eventsIndicator--active']]: active
    });
    return /*#__PURE__*/React.createElement("span", {
      "data-test": "DesignSystem-Calendar-Event-Indicator",
      className: eventsIndicatorClass
    });
  }
  render() {
    const {
      monthsInView,
      className
    } = this.props;
    const baseProps = extractBaseProps(this.props);
    const classes = classNames({
      [styles$12['Calendar-wrapper']]: true
    }, className);
    return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
      className: classes,
      "data-test": "DesignSystem-Calendar-Wrapper"
    }), Array.from({
      length: monthsInView
    }, (_x, index) => {
      return this.renderCalendar(index);
    }));
  }
}
_defineProperty$1(Calendar, "defaultProps", {
  size: 'large',
  monthsInView: 1,
  view: 'date',
  firstDayOfWeek: 'sunday',
  jumpView: true
});

var css_248z$1a = "/* badge */\n\n.card-module-Card-3nZt4-5-0-0-9 {\n  border-radius: var(--border-radius-10);\n  border: var(--border-width-2-5) solid var(--secondary-light);\n  position: relative;\n  background-color: var(--white);\n}\n\n.card-module-Card--default-vE68u-5-0-0-9,\n.card-module-Card--light-ef-kI-5-0-0-9,\n.card-module-Card--medium-hfCda-5-0-0-9,\n.card-module-Card--dark-z4IwI-5-0-0-9 {\n  border: none;\n  box-shadow: var(--shadow-s);\n}\n\n.card-module-Card--shadow10-EQ0Tc-5-0-0-9 {\n  border: none;\n  box-shadow: var(--shadow-s);\n}\n\n.card-module-Card--shadow20-r2kA9-5-0-0-9 {\n  border: none;\n  box-shadow: var(--shadow-m);\n}\n\n.card-module-Card--shadow30-7DdVE-5-0-0-9 {\n  border: none;\n  box-shadow: var(--shadow-l);\n}\n\n.card-module-Card-header-L-wfV-5-0-0-9 {\n  padding: var(--spacing-40) var(--spacing-40) var(--spacing-30) var(--spacing-40);\n}\n\n.card-module-Card-body-AWtGZ-5-0-0-9 {\n  padding-left: var(--spacing-40);\n  padding-right: var(--spacing-40);\n}\n\n.card-module-Card-footer-Gomt8-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: var(--spacing-40);\n}\n\n.card-module-Card-footer--withSeperator-xBISR-5-0-0-9 {\n  border-top: var(--border-width-2-5) solid var(--secondary-light);\n}\n";
var styles$11 = {"Card":"card-module-Card-3nZt4-5-0-0-9","Card--default":"card-module-Card--default-vE68u-5-0-0-9","Card--light":"card-module-Card--light-ef-kI-5-0-0-9","Card--medium":"card-module-Card--medium-hfCda-5-0-0-9","Card--dark":"card-module-Card--dark-z4IwI-5-0-0-9","Card--shadow10":"card-module-Card--shadow10-EQ0Tc-5-0-0-9","Card--shadow20":"card-module-Card--shadow20-r2kA9-5-0-0-9","Card--shadow30":"card-module-Card--shadow30-7DdVE-5-0-0-9","Card-header":"card-module-Card-header-L-wfV-5-0-0-9","Card-body":"card-module-Card-body-AWtGZ-5-0-0-9","Card-footer":"card-module-Card-footer-Gomt8-5-0-0-9","Card-footer--withSeperator":"card-module-Card-footer--withSeperator-xBISR-5-0-0-9"};
styleInject(css_248z$1a);

const Card = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    shadow = 'shadow10',
    children,
    className,
    ...rest
  } = props;
  const classes = classNames({
    [styles$11.Card]: true,
    [styles$11[`Card--${shadow}`]]: shadow
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Card",
    ref: ref
  }, rest, {
    className: classes
  }), children);
});
Card.displayName = 'Card';
Card.defaultProps = {
  shadow: 'shadow10'
};

var css_248z$19 = ".cardSubdued-module-CardSubdued-cRpHh-5-0-0-9 {\n  background: var(--card-subdued-bg);\n  padding: var(--spacing-40);\n}\n\n.cardSubdued-module-CardSubdued--top-9xPTI-5-0-0-9 {\n  border-top: var(--border-width-2-5) solid var(--secondary-light);\n}\n\n.cardSubdued-module-CardSubdued--left-5pkIL-5-0-0-9 {\n  border-left: var(--border-width-2-5) solid var(--secondary-light);\n}\n\n.cardSubdued-module-CardSubdued--right-vqxr4-5-0-0-9 {\n  border-right: var(--border-width-2-5) solid var(--secondary-light);\n}\n\n.cardSubdued-module-CardSubdued--bottom-fOplq-5-0-0-9 {\n  border-bottom: var(--border-width-2-5) solid var(--secondary-light);\n}\n";
var styles$10 = {"CardSubdued":"cardSubdued-module-CardSubdued-cRpHh-5-0-0-9","CardSubdued--top":"cardSubdued-module-CardSubdued--top-9xPTI-5-0-0-9","CardSubdued--left":"cardSubdued-module-CardSubdued--left-5pkIL-5-0-0-9","CardSubdued--right":"cardSubdued-module-CardSubdued--right-vqxr4-5-0-0-9","CardSubdued--bottom":"cardSubdued-module-CardSubdued--bottom-fOplq-5-0-0-9"};
styleInject(css_248z$19);

const CardSubdued = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    border,
    children,
    className,
    ...rest
  } = props;
  const classes = classNames({
    [styles$10.CardSubdued]: true,
    [styles$10[`CardSubdued--${border}`]]: border
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-CardSubdued",
    ref: ref
  }, rest, {
    className: classes
  }), children);
});
CardSubdued.displayName = 'CardSubdued';

const CardHeader = props => {
  const {
    className,
    children
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$11['Card-header']]: true
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-CardHeader"
  }, baseProps, {
    className: classes
  }), children);
};
CardHeader.displayName = 'CardHeader';

const CardBody = props => {
  const {
    className,
    children
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$11['Card-body']]: true
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-CardBody"
  }, baseProps, {
    className: classes
  }), children);
};
CardBody.displayName = 'CardBody';

const CardFooter = props => {
  const {
    className,
    children,
    withSeperator
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$11['Card-footer']]: true,
    [styles$11['Card-footer--withSeperator']]: withSeperator
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-CardFooter"
  }, baseProps, {
    className: classes
  }), children);
};
CardFooter.displayName = 'CardFooter';
CardFooter.defaultProps = {
  withSeperator: true
};

const isSpaceKey = e => e.key === 'Space';

const allowed = {
  button: new Set(['Enter', 'Space', 'Spacebar', ' ']),
  link: new Set(['Enter']),
  // onChange handles everything, no need for extra keyboard interaction
  checkbox: new Set([]),
  radio: new Set([])
};

// Refer for keyboard interactions: https://webaim.org/techniques/keyboard/#testing
const isKeyboardInteractionAllowed = (role, key) => {
  if (!allowed[role]) {
    return false;
  }
  const allowedKeys = allowed[role];
  return allowedKeys.has(key);
};
const useAccessibilityProps = ({
  onClick,
  onKeyDown,
  role = 'button',
  tabIndex,
  ...rest
}) => {
  return {
    ...(onClick ? {
      onClick: onClick,
      role: role,
      tabIndex: tabIndex || 0,
      'aria-label': rest['aria-label'],
      onKeyDown: e => {
        if (onKeyDown) {
          onKeyDown(e);
          return;
        }
        const key = e.key;
        if (isKeyboardInteractionAllowed(role, key)) {
          if (onClick) {
            e.preventDefault();
            onClick(e);
          }
        }
      }
    } : {
      role,
      tabIndex,
      'aria-label': rest['aria-label']
    })
  };
};

var css_248z$18 = "/* Although the icons in the font can be scaled to any size, in accordance with material design icons guidelines, \n * we recommend them to be shown in either 18, 24, 36 or 48px. The default being 24px. \n * https://google.github.io/material-design-icons/\n */\n\n/* Rules for sizing the icon. */\n\n/* .material-icons.md-18 { font-size: 18px; }\n.material-icons.md-24 { font-size: 24px; }\n.material-icons.md-36 { font-size: 36px; }\n.material-icons.md-48 { font-size: 48px; } */\n\n/* Rules for using icons as black on a light background. */\n\n/* .material-icons.md-dark { color: rgba(0, 0, 0, 0.54); }\n.material-icons.md-dark.md-inactive { color: rgba(0, 0, 0, 0.26); } */\n\n/* Rules for using icons as white on a dark background. */\n\n/* .material-icons.md-light { color: rgba(255, 255, 255, 1); }\n.material-icons.md-light.md-inactive { color: rgba(255, 255, 255, 0.3); } */\n.icon-module-Icon-2ZCUa-5-0-0-9 {\n  flex-shrink: 0;\n  overflow: hidden;\n  flex-shrink: 0;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n}\n\n.icon-module-Icon--subtle-LctKY-5-0-0-9 {\n  color: var(--text-subtle);\n}\n\n.icon-module-Icon--disabled-cfSpt-5-0-0-9 {\n  color: var(--text-disabled);\n}\n\n.icon-module-Icon--destructive-hh3wH-5-0-0-9 {\n  color: var(--text-destructive);\n}\n\n.icon-module-Icon--white-xVSQx-5-0-0-9 {\n  color: var(--text-white);\n}\n\n.icon-module-Icon--default-gUL8T-5-0-0-9 {\n  color: var(--text);\n}\n\n.icon-module-Icon--info-NPl0c-5-0-0-9 {\n  color: var(--primary);\n}\n\n.icon-module-Icon--success--1Pol-5-0-0-9 {\n  color: var(--success);\n}\n\n.icon-module-Icon--warning-vkwDf-5-0-0-9 {\n  color: var(--warning);\n}\n\n.icon-module-Icon--alert-9wT0L-5-0-0-9 {\n  color: var(--alert);\n}\n\n.icon-module-Icon--primary-5RS0y-5-0-0-9 {\n  color: var(--primary);\n}\n\n.icon-module-Icon--primaryLighter-G9i-U-5-0-0-9 {\n  color: var(--primary-lighter);\n}\n\n.icon-module-Icon--primaryDark-Z9EK7-5-0-0-9 {\n  color: var(--primary-dark);\n}\n\n.icon-module-Icon--primaryDarker-WzRg--5-0-0-9 {\n  color: var(--primary-darker);\n}\n\n.icon-module-Icon--alertLighter-6B-e7-5-0-0-9 {\n  color: var(--alert-lighter);\n}\n\n.icon-module-Icon--alertDark-k7w0--5-0-0-9 {\n  color: var(--alert-dark);\n}\n\n.icon-module-Icon--alertDarker-ZGpJS-5-0-0-9 {\n  color: var(--alert-darker);\n}\n\n.icon-module-Icon--successLighter-NJRIN-5-0-0-9 {\n  color: var(--success-lighter);\n}\n\n.icon-module-Icon--successDark-w7jA3-5-0-0-9 {\n  color: var(--success-dark);\n}\n\n.icon-module-Icon--successDarker-whOmv-5-0-0-9 {\n  color: var(--success-darker);\n}\n\n.icon-module-Icon--warningLighter-IjeGH-5-0-0-9 {\n  color: var(--warning-lighter);\n}\n\n.icon-module-Icon--warningDark-c0V89-5-0-0-9 {\n  color: var(--warning-dark);\n}\n\n.icon-module-Icon--warningDarker-Y1Zk1-5-0-0-9 {\n  color: var(--warning-darker);\n}\n\n.icon-module-Icon--accent1-joGUJ-5-0-0-9 {\n  color: var(--accent1);\n}\n\n.icon-module-Icon--accent1Lighter-ecAka-5-0-0-9 {\n  color: var(--accent1-lighter);\n}\n\n.icon-module-Icon--accent1Dark-kWavq-5-0-0-9 {\n  color: var(--accent1-dark);\n}\n\n.icon-module-Icon--accent1Darker-xkikD-5-0-0-9 {\n  color: var(--accent1-darker);\n}\n\n.icon-module-Icon--accent2-U6Nln-5-0-0-9 {\n  color: var(--accent2);\n}\n\n.icon-module-Icon--accent2Lighter-l-bdc-5-0-0-9 {\n  color: var(--accent2-lighter);\n}\n\n.icon-module-Icon--accent2Dark-fQYZp-5-0-0-9 {\n  color: var(--accent2-dark);\n}\n\n.icon-module-Icon--accent2Darker-fPTcU-5-0-0-9 {\n  color: var(--accent2-darker);\n}\n\n.icon-module-Icon--accent3-pqiXT-5-0-0-9 {\n  color: var(--accent3);\n}\n\n.icon-module-Icon--accent3Lighter-GdEsf-5-0-0-9 {\n  color: var(--accent3-lighter);\n}\n\n.icon-module-Icon--accent3Dark-UrkMU-5-0-0-9 {\n  color: var(--accent3-dark);\n}\n\n.icon-module-Icon--accent3Darker-h-Kf4-5-0-0-9 {\n  color: var(--accent3-darker);\n}\n\n.icon-module-Icon--accent4-URPLg-5-0-0-9 {\n  color: var(--accent4);\n}\n\n.icon-module-Icon--accent4Lighter-TfLqj-5-0-0-9 {\n  color: var(--accent4-lighter);\n}\n\n.icon-module-Icon--accent4Dark-eMTg--5-0-0-9 {\n  color: var(--accent4-dark);\n}\n\n.icon-module-Icon--accent4Darker-zY0fj-5-0-0-9 {\n  color: var(--accent4-darker);\n}\n\n.icon-module-Icon--inverse-PaEaG-5-0-0-9 {\n  color: var(--inverse);\n}\n";
var iconStyles = {"Icon":"icon-module-Icon-2ZCUa-5-0-0-9","Icon--subtle":"icon-module-Icon--subtle-LctKY-5-0-0-9","Icon--disabled":"icon-module-Icon--disabled-cfSpt-5-0-0-9","Icon--destructive":"icon-module-Icon--destructive-hh3wH-5-0-0-9","Icon--white":"icon-module-Icon--white-xVSQx-5-0-0-9","Icon--default":"icon-module-Icon--default-gUL8T-5-0-0-9","Icon--info":"icon-module-Icon--info-NPl0c-5-0-0-9","Icon--success":"icon-module-Icon--success--1Pol-5-0-0-9","Icon--warning":"icon-module-Icon--warning-vkwDf-5-0-0-9","Icon--alert":"icon-module-Icon--alert-9wT0L-5-0-0-9","Icon--primary":"icon-module-Icon--primary-5RS0y-5-0-0-9","Icon--primaryLighter":"icon-module-Icon--primaryLighter-G9i-U-5-0-0-9","Icon--primaryDark":"icon-module-Icon--primaryDark-Z9EK7-5-0-0-9","Icon--primaryDarker":"icon-module-Icon--primaryDarker-WzRg--5-0-0-9","Icon--alertLighter":"icon-module-Icon--alertLighter-6B-e7-5-0-0-9","Icon--alertDark":"icon-module-Icon--alertDark-k7w0--5-0-0-9","Icon--alertDarker":"icon-module-Icon--alertDarker-ZGpJS-5-0-0-9","Icon--successLighter":"icon-module-Icon--successLighter-NJRIN-5-0-0-9","Icon--successDark":"icon-module-Icon--successDark-w7jA3-5-0-0-9","Icon--successDarker":"icon-module-Icon--successDarker-whOmv-5-0-0-9","Icon--warningLighter":"icon-module-Icon--warningLighter-IjeGH-5-0-0-9","Icon--warningDark":"icon-module-Icon--warningDark-c0V89-5-0-0-9","Icon--warningDarker":"icon-module-Icon--warningDarker-Y1Zk1-5-0-0-9","Icon--accent1":"icon-module-Icon--accent1-joGUJ-5-0-0-9","Icon--accent1Lighter":"icon-module-Icon--accent1Lighter-ecAka-5-0-0-9","Icon--accent1Dark":"icon-module-Icon--accent1Dark-kWavq-5-0-0-9","Icon--accent1Darker":"icon-module-Icon--accent1Darker-xkikD-5-0-0-9","Icon--accent2":"icon-module-Icon--accent2-U6Nln-5-0-0-9","Icon--accent2Lighter":"icon-module-Icon--accent2Lighter-l-bdc-5-0-0-9","Icon--accent2Dark":"icon-module-Icon--accent2Dark-fQYZp-5-0-0-9","Icon--accent2Darker":"icon-module-Icon--accent2Darker-fPTcU-5-0-0-9","Icon--accent3":"icon-module-Icon--accent3-pqiXT-5-0-0-9","Icon--accent3Lighter":"icon-module-Icon--accent3Lighter-GdEsf-5-0-0-9","Icon--accent3Dark":"icon-module-Icon--accent3Dark-UrkMU-5-0-0-9","Icon--accent3Darker":"icon-module-Icon--accent3Darker-h-Kf4-5-0-0-9","Icon--accent4":"icon-module-Icon--accent4-URPLg-5-0-0-9","Icon--accent4Lighter":"icon-module-Icon--accent4Lighter-TfLqj-5-0-0-9","Icon--accent4Dark":"icon-module-Icon--accent4Dark-eMTg--5-0-0-9","Icon--accent4Darker":"icon-module-Icon--accent4Darker-zY0fj-5-0-0-9","Icon--inverse":"icon-module-Icon--inverse-PaEaG-5-0-0-9"};
styleInject(css_248z$18);

// 'outline', 'rounded' to be deprecated soon.

const iconTypeMapper = {
  timelapse: 'outlined',
  content_copy: 'outlined',
  speed: 'outlined',
  add_circle_outline: 'outlined',
  turned_in_not: 'outlined',
  important_devices: 'outlined',
  thumb_down_off_alt: 'outlined',
  alarm_on: 'outlined',
  calendar_view_month: 'outlined',
  aspect_ratio: 'outlined',
  change_history: 'outlined',
  arrow_circle_down: 'outlined',
  card_membership: 'outlined',
  query_builder: 'outlined',
  copyright: 'outlined',
  arrow_circle_up: 'outlined',
  alarm: 'outlined',
  work_outline: 'outlined',
  bookmark_border: 'outlined',
  delete_outline: 'outlined',
  credit_card: 'outlined',
  highlight_of: 'outlined',
  check_circle_outline: 'outlined',
  help_outline: 'outlined',
  schedule: 'outlined',
  radio_button_unchecked: 'outlined',
  radio_button_checked: 'outlined',
  delete: 'outlined'
};

/**
 *
 * <pre class="DocPage-codeBlock mx-6 mb-7">
 *  Following Icons are mapped to **outlined** type by default:
 *  <br />
 *  timelapse,  content_copy,  speed,  add_circle_outline,  turned_in_not,  important_devices,  thumb_down_off_alt,  alarm_on,  calendar_view_month,  aspect_ratio,  change_history,  arrow_circle_down,  card_membership,  query_builder,  copyright,  arrow_circle_up,  alarm,  work_outline,  bookmark_border,  delete_outline,  credit_card,  highlight_of,  check_circle_outline, help_outline,  schedule,  radio_button_unchecked,  radio_button_checked,  delete
 * </pre>
 */

const Icon = props => {
  const {
    appearance,
    className,
    name,
    size,
    children
  } = props;
  const accessibilityProps = useAccessibilityProps(props);
  const baseProps = extractBaseProps(props);
  const mapper = {
    outline: 'outlined',
    sharp: 'outlined',
    round: 'rounded',
    filled: 'rounded',
    'two-tone': 'rounded'
  };
  const type = props.type && mapper[props.type] || props.type || name && iconTypeMapper[name] || 'rounded';
  const getIconAppearance = iconColor => {
    const x = iconColor.indexOf('_');
    return iconColor.slice(0, x) + iconColor.charAt(x + 1).toUpperCase() + iconColor.slice(x + 2);
  };
  const color = appearance && appearance.includes('_') ? getIconAppearance(appearance) : appearance;
  const iconClass = classNames({
    ['material-symbols']: true,
    ['material-symbols-rounded']: type === 'rounded',
    ['material-symbols-outlined']: type === 'outlined',
    [iconStyles['Icon']]: true,
    [iconStyles[`Icon--${color}`]]: appearance,
    [`${className}`]: className
  });
  const styles = {
    fontSize: `${size}px`,
    width: `${size}px`
  };

  // change `children` to {name} after migration
  if (children && /*#__PURE__*/React.isValidElement(children)) {
    return /*#__PURE__*/React.createElement("span", _extends$2({}, baseProps, {
      className: className
    }), children);
  }
  return /*#__PURE__*/React.createElement("i", _extends$2({
    "data-test": "DesignSystem-Icon"
  }, baseProps, {
    className: iconClass,
    style: styles
  }, accessibilityProps), name);
};
Icon.displayName = 'Icon';
Icon.defaultProps = {
  size: 16
};

const GenericText = ({
  children,
  componentType = 'span',
  className,
  ...rest
}, ref) => {
  return /*#__PURE__*/React.createElement(componentType, {
    ...rest,
    className,
    ref
  }, children);
};
var Link$1 = /*#__PURE__*/React.forwardRef(GenericText);

var css_248z$17 = "/* Text */\n.text-module-Text-s1VoI-5-0-0-9 {\n  margin: 0;\n  line-height: var(--font-height);\n}\n\n.text-module-Text--small-Jgkij-5-0-0-9 {\n  font-size: var(--font-size-s);\n  line-height: var(--font-height-normal);\n}\n\n.text-module-Text--regular-1srPn-5-0-0-9 {\n  font-size: var(--font-size);\n  line-height: var(--font-height);\n}\n\n.text-module-Text--large-dvoDb-5-0-0-9 {\n  font-size: var(--font-size-m);\n  line-height: var(--font-height-m);\n}\n\n.text-module-Text--default-8sTrE-5-0-0-9 {\n  color: var(--text);\n}\n\n.text-module-Text--subtle-dIroX-5-0-0-9 {\n  color: var(--text-subtle);\n}\n\n.text-module-Text--disabled-n3vwU-5-0-0-9 {\n  color: var(--text-disabled);\n}\n\n.text-module-Text--destructive-IyHaq-5-0-0-9 {\n  color: var(--text-destructive);\n}\n\n.text-module-Text--white-7KdSH-5-0-0-9 {\n  color: var(--text-white);\n}\n\n.text-module-Text--success---5U--5-0-0-9 {\n  color: var(--text-success);\n}\n\n.text-module-Text--link-xbXRL-5-0-0-9 {\n  color: var(--text-link);\n}\n\n.text-module-Text--medium-NJhdl-5-0-0-9 {\n  font-weight: var(--font-weight-medium);\n}\n\n.text-module-Text--strong-V4cio-5-0-0-9 {\n  font-weight: var(--font-weight-bold);\n}\n";
var textStyles = {"Text":"text-module-Text-s1VoI-5-0-0-9","Text--small":"text-module-Text--small-Jgkij-5-0-0-9","Text--regular":"text-module-Text--regular-1srPn-5-0-0-9","Text--large":"text-module-Text--large-dvoDb-5-0-0-9","Text--default":"text-module-Text--default-8sTrE-5-0-0-9","Text--subtle":"text-module-Text--subtle-dIroX-5-0-0-9","Text--disabled":"text-module-Text--disabled-n3vwU-5-0-0-9","Text--destructive":"text-module-Text--destructive-IyHaq-5-0-0-9","Text--white":"text-module-Text--white-7KdSH-5-0-0-9","Text--success":"text-module-Text--success---5U--5-0-0-9","Text--link":"text-module-Text--link-xbXRL-5-0-0-9","Text--medium":"text-module-Text--medium-NJhdl-5-0-0-9","Text--strong":"text-module-Text--strong-V4cio-5-0-0-9"};
styleInject(css_248z$17);

const Text = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    appearance = 'default',
    size = 'regular',
    children,
    weight,
    small,
    className,
    color,
    ...rest
  } = props;
  const classes = classNames({
    [textStyles.Text]: true,
    [textStyles[`Text--${appearance}`]]: !color && appearance,
    [textStyles[`Text--${weight}`]]: weight,
    [textStyles[`Text--${size}`]]: size,
    [`color-${color}`]: color,
    /* SOON_TO_BE_DEPRECATED */
    [textStyles['Text--small']]: size === 'small' || small
  }, className);
  return /*#__PURE__*/React.createElement(Link$1, _extends$2({
    ref: ref,
    "data-test": "DesignSystem-Text"
  }, rest, {
    className: classes,
    componentType: "span"
  }), children);
});
Text.displayName = 'Text';
Text.defaultProps = {
  appearance: 'default',
  size: 'regular'
};

var css_248z$16 = ".chip-module-Chip-poUZ4-5-0-0-9 {\n  display: flex;\n  box-sizing: border-box;\n  border-radius: var(--border-radius-30);\n  padding-right: var(--spacing-20);\n  padding-left: var(--spacing-20);\n  padding-top: var(--spacing-05);\n  padding-bottom: var(--spacing-05);\n  width: -moz-fit-content;\n  width: fit-content;\n  justify-content: space-between;\n  border-style: solid;\n  border-width: var(--border-width-2-5);\n  align-items: center;\n  flex-direction: row;\n  cursor: default;\n  height: var(--spacing-60);\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.chip-module-Chip-wrapper-pvcWT-5-0-0-9 {\n  display: inline-flex;\n  align-items: center;\n}\n\n.chip-module-Chip-icon--left-iQJW--5-0-0-9 {\n  margin-right: var(--spacing-10);\n  display: flex;\n  align-items: center;\n}\n\n.chip-module-Chip-icon--right-UOlsF-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  border-radius: var(--border-radius-full);\n  margin-left: var(--spacing-05);\n}\n\n.chip-module-Chip--action-xkWzq-5-0-0-9 {\n  background: var(--secondary-light);\n  border: 0px;\n  cursor: pointer;\n}\n\n.chip-module-Chip--action-xkWzq-5-0-0-9:hover {\n  background: var(--secondary);\n}\n\n.chip-module-Chip--action-xkWzq-5-0-0-9:focus-visible {\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n  outline: none;\n}\n\n.chip-module-Chip--action-xkWzq-5-0-0-9:active {\n  background: var(--secondary-dark);\n}\n\n.chip-module-Chip-action--disabled-qik7a-5-0-0-9 {\n  background: var(--secondary-light);\n  opacity: var(--opacity-12);\n  border: 0px;\n  outline: none;\n  cursor: not-allowed;\n}\n\n.chip-module-Chip--selection-OQh8T-5-0-0-9 {\n  background: var(--shadow-0);\n  border-color: var(--stone);\n  cursor: pointer;\n}\n\n.chip-module-Chip--selection-OQh8T-5-0-0-9:hover {\n  background: var(--secondary-lighter);\n  border-color: var(--secondary-dark);\n}\n\n.chip-module-Chip--selection-OQh8T-5-0-0-9:focus-visible {\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n  outline: none;\n}\n\n.chip-module-Chip--selection-OQh8T-5-0-0-9:active {\n  background: var(--secondary-light);\n  border-color: var(--inverse-lightest);\n}\n\n.chip-module-Chip-selection--disabled-Wh7oX-5-0-0-9 {\n  background: var(--white);\n  border-color: var(--secondary);\n  opacity: var(--opacity-12);\n  cursor: not-allowed;\n}\n\n.chip-module-Chip-selection--selected-N7Nmu-5-0-0-9 {\n  background: rgba(220, 236, 249, 0.48);\n  border-color: var(--primary-lighter);\n}\n\n.chip-module-Chip-selection--selected-N7Nmu-5-0-0-9:hover {\n  background: rgba(151, 197, 240, 0.48);\n  border-color: var(--primary-light);\n}\n\n.chip-module-Chip-selection--selected-N7Nmu-5-0-0-9:focus-visible {\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n  outline: none;\n}\n\n.chip-module-Chip-selection--selected-N7Nmu-5-0-0-9:active {\n  background: var(--primary-lighter);\n  border-color: var(--primary-dark);\n}\n\n.chip-module-Chip-selection--selected-N7Nmu-5-0-0-9:active .chip-module-Chip-icon-lfFwr-5-0-0-9,\n.chip-module-Chip-selection--selected-N7Nmu-5-0-0-9:active .chip-module-Chip-text-Y9aWF-5-0-0-9 {\n  color: var(--primary-darker);\n}\n\n.chip-module-Chip-text--truncate-FdQRv-5-0-0-9 {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  display: inline;\n  max-width: 100%;\n}\n\n.chip-module-Chip-selection--selectedDisabled-cqtgW-5-0-0-9 {\n  background: rgba(220, 236, 249, 0.48);\n  border-color: var(--primary-lighter);\n}\n\n.chip-module-Chip--input-76VFm-5-0-0-9 {\n  background: var(--secondary-light);\n  font-weight: var(--font-weight-normal);\n  border: 0px;\n}\n\n.chip-module-Chip--input-76VFm-5-0-0-9:hover {\n  background: var(--secondary);\n}\n\n.chip-module-Chip--input-76VFm-5-0-0-9:focus-visible,\n.chip-module-Chip--input-76VFm-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n  outline: none;\n}\n\n.chip-module-Chip--input-76VFm-5-0-0-9:active {\n  background: var(--secondary-dark);\n}\n\n.chip-module-Chip-input--disabled-Xt12a-5-0-0-9 {\n  background: var(--secondary-lighter);\n  opacity: var(--opacity-12);\n  cursor: not-allowed;\n  border: 0px;\n}\n\n.chip-module-Chip-icon--right-UOlsF-5-0-0-9:focus-visible {\n  outline: var(--spacing-05) solid var(--secondary-shadow);\n}\n\n.chip-module-Chip-icon--right-UOlsF-5-0-0-9:hover {\n  background-color: var(--secondary);\n}\n\n.chip-module-Chip-icon--right-UOlsF-5-0-0-9:active {\n  background-color: var(--secondary-dark);\n}\n\n.chip-module-Chip-icon-disabled--right-Q8o-W-5-0-0-9 {\n  pointer-events: none;\n}\n\n.chip-module-Chip-icon--selected-OTsQP-5-0-0-9 {\n  border-radius: var(--border-radius-full);\n}\n\n.chip-module-Chip-icon--selected-OTsQP-5-0-0-9:focus-visible {\n  outline: var(--spacing-05) solid var(--primary-shadow);\n}\n\n.chip-module-Chip-icon--selected-OTsQP-5-0-0-9:hover {\n  background-color: var(--primary-lighter);\n}\n\n.chip-module-Chip-icon--selected-OTsQP-5-0-0-9:active {\n  background-color: var(--primary-light);\n}\n\n.chip-module-Chip-selection--disabled-Wh7oX-5-0-0-9:focus-visible,\n.chip-module-Chip-icon-disabled--right-Q8o-W-5-0-0-9:focus-visible,\n.chip-module-Chip-selection--selectedDisabled-cqtgW-5-0-0-9:focus-visible,\n.chip-module-Chip-input--disabled-Xt12a-5-0-0-9:focus-visible {\n  outline: none;\n}\n\n.chip-module-Chip-icon--clear-GujdY-5-0-0-9 {\n  padding-right: var(--spacing-05);\n}\n";
var styles$$ = {"Chip":"chip-module-Chip-poUZ4-5-0-0-9","Chip-wrapper":"chip-module-Chip-wrapper-pvcWT-5-0-0-9","Chip-icon--left":"chip-module-Chip-icon--left-iQJW--5-0-0-9","Chip-icon--right":"chip-module-Chip-icon--right-UOlsF-5-0-0-9","Chip--action":"chip-module-Chip--action-xkWzq-5-0-0-9","Chip-action--disabled":"chip-module-Chip-action--disabled-qik7a-5-0-0-9","Chip--selection":"chip-module-Chip--selection-OQh8T-5-0-0-9","Chip-selection--disabled":"chip-module-Chip-selection--disabled-Wh7oX-5-0-0-9","Chip-selection--selected":"chip-module-Chip-selection--selected-N7Nmu-5-0-0-9","Chip-icon":"chip-module-Chip-icon-lfFwr-5-0-0-9","Chip-text":"chip-module-Chip-text-Y9aWF-5-0-0-9","Chip-text--truncate":"chip-module-Chip-text--truncate-FdQRv-5-0-0-9","Chip-selection--selectedDisabled":"chip-module-Chip-selection--selectedDisabled-cqtgW-5-0-0-9","Chip--input":"chip-module-Chip--input-76VFm-5-0-0-9","Chip-input--disabled":"chip-module-Chip-input--disabled-Xt12a-5-0-0-9","Chip-icon-disabled--right":"chip-module-Chip-icon-disabled--right-Q8o-W-5-0-0-9","Chip-icon--selected":"chip-module-Chip-icon--selected-OTsQP-5-0-0-9","Chip-icon--clear":"chip-module-Chip-icon--clear-GujdY-5-0-0-9"};
styleInject(css_248z$16);

const GenericChip = props => {
  const {
    label,
    icon,
    clearButton,
    disabled,
    className,
    selected,
    onClose,
    onClick,
    labelPrefix,
    iconType,
    maxWidth
  } = props;
  const wrapperStyle = {
    maxWidth: maxWidth
  };
  const [isTextTruncated, setIsTextTruncated] = React.useState(false);
  const {
    detectTruncation
  } = Tooltip.useAutoTooltip();
  const contentRef = /*#__PURE__*/React.createRef();
  React.useEffect(() => {
    const isTruncated = detectTruncation(contentRef);
    setIsTextTruncated(isTruncated);
  }, [contentRef]);
  const baseProps = extractBaseProps(props);
  const iconClass = align => classNames({
    [styles$$['Chip-icon']]: true,
    [styles$$[`Chip-icon--${align}`]]: align,
    [styles$$[`Chip-icon-disabled--right`]]: align === 'right' && disabled,
    ['cursor-pointer']: align === 'right' && !disabled,
    [styles$$['Chip-icon--selected']]: align === 'right' && selected
  });
  const onCloseHandler = e => {
    e.stopPropagation();
    if (onClose) onClose();
  };
  const onClickHandler = () => {
    if (onClick) onClick();
  };
  const onKeyDownHandler = event => {
    if (event.key === 'Enter') {
      onCloseHandler(event);
    }
  };
  const onChipKeyDownHandler = event => {
    if (event.key === 'Enter') {
      onClickHandler();
    }
  };
  const iconAppearance = align => classNames({
    ['primary_dark']: selected,
    ['subtle']: !selected && align === 'right',
    ['inverse']: !selected && align === 'left'
  });
  const chipTextClass = classNames({
    [styles$$['Chip-text']]: true,
    ['mr-3']: true
  });
  const textColor = classNames({
    ['primary-dark']: selected,
    ['inverse']: !disabled && !selected
  });
  const chipWrapperClass = classNames({
    [styles$$['Chip-wrapper']]: true
  }, className);
  const renderLabel = () => {
    if (typeof label === 'string') {
      return /*#__PURE__*/React.createElement("div", {
        className: styles$$['Chip-text--truncate'],
        ref: contentRef
      }, labelPrefix && /*#__PURE__*/React.createElement(Text, {
        "data-test": "DesignSystem-GenericChip--LabelPrefix",
        weight: "medium",
        color: textColor,
        className: chipTextClass
      }, labelPrefix), /*#__PURE__*/React.createElement(Text, {
        "data-test": "DesignSystem-GenericChip--Text",
        color: textColor,
        className: styles$$['Chip-text']
      }, label));
    }
    return label;
  };
  const getTooltipText = () => {
    const labelText = typeof label === 'string' ? label : '';
    if (labelPrefix) {
      return `${labelPrefix} ${labelText}`;
    }
    return labelText;
  };
  return /*#__PURE__*/React.createElement(Tooltip, {
    showTooltip: isTextTruncated,
    "data-test": "DesignSystem-GenericChip--Tooltip",
    tooltip: getTooltipText(),
    triggerClass: "flex-grow-0"
  }, /*#__PURE__*/React.createElement("div", _extends$2({
    tabIndex: disabled ? -1 : 0,
    style: wrapperStyle,
    "data-test": "DesignSystem-GenericChip--Wrapper",
    role: "button",
    onKeyDown: onChipKeyDownHandler
  }, baseProps, {
    className: chipWrapperClass,
    onClick: onClickHandler
  }), icon && /*#__PURE__*/React.createElement(Icon, {
    "data-test": "DesignSystem-GenericChip--Icon",
    name: icon,
    type: iconType,
    appearance: iconAppearance('left'),
    className: iconClass('left')
  }), renderLabel(), clearButton && /*#__PURE__*/React.createElement("div", {
    role: "button",
    onClick: onCloseHandler,
    tabIndex: disabled ? -1 : 0,
    onKeyDown: onKeyDownHandler,
    className: iconClass('right'),
    "data-test": "DesignSystem-GenericChip--clearButton"
  }, /*#__PURE__*/React.createElement(Icon, {
    name: "clear",
    appearance: iconAppearance('right'),
    className: "p-2"
  }))));
};
GenericChip.displayName = 'GenericChip';
GenericChip.defaultProps = {
  maxWidth: 'var(--spacing-640)'
};

const Chip = props => {
  const {
    label,
    icon,
    clearButton,
    type,
    disabled,
    selected,
    onClose,
    onClick,
    name,
    className,
    labelPrefix,
    iconType,
    maxWidth
  } = props;
  const baseProps = extractBaseProps(props);
  const onCloseHandler = () => {
    if (!disabled && onClose) onClose(name);
  };
  const onClickHandler = () => {
    if (!disabled && onClick) onClick(name);
  };
  const clearbutton = type === 'action' ? false : clearButton;
  const select = type === 'selection' && selected ? true : false;
  const chipClass = classNames({
    [styles$$.Chip]: true,
    [styles$$[`Chip-${type}--disabled`]]: disabled,
    [styles$$[`Chip--${type}`]]: type && !disabled,
    [styles$$[`Chip-${type}--selected`]]: selected && !disabled,
    [styles$$[`Chip-selection--selectedDisabled`]]: type === 'selection' && selected && disabled,
    [styles$$['Chip-icon--clear']]: clearbutton
  }, className);
  return /*#__PURE__*/React.createElement(GenericChip, _extends$2({
    "data-test": "DesignSystem-Chip--GenericChip"
  }, baseProps, {
    label: label,
    selected: select,
    icon: icon,
    iconType: iconType,
    clearButton: clearbutton,
    disabled: disabled,
    className: chipClass,
    onClose: onCloseHandler,
    onClick: onClickHandler,
    name: name,
    labelPrefix: labelPrefix,
    maxWidth: maxWidth
  }));
};
Chip.displayName = 'Chip';
Chip.defaultProps = {
  type: 'input',
  maxWidth: 'var(--spacing-640)'
};

var css_248z$15 = ".chipGroup-module-ChipGroup--1ERo-5-0-0-9 {\n  display: inline-flex;\n}\n\n.chipGroup-module-ChipGroup-item-5ygP--5-0-0-9 {\n  margin: 0 var(--spacing-10);\n}\n\n.chipGroup-module-ChipGroup-item-5ygP--5-0-0-9:first-child {\n  margin-left: 0;\n}\n\n.chipGroup-module-ChipGroup-item-5ygP--5-0-0-9:last-child {\n  margin-right: 0;\n}\n";
var styles$_ = {"ChipGroup":"chipGroup-module-ChipGroup--1ERo-5-0-0-9","ChipGroup-item":"chipGroup-module-ChipGroup-item-5ygP--5-0-0-9"};
styleInject(css_248z$15);

const ChipGroup = props => {
  const {
    list,
    onClick,
    onClose,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const onClickHandler = item => {
    if (onClick) onClick(item);
  };
  const onCloseHandler = item => {
    if (onClose) onClose(item);
  };
  const ChipGroupClass = classNames({
    [styles$_.ChipGroup]: true
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-ChipGroup"
  }, baseProps, {
    className: ChipGroupClass
  }), list.map((item, ind) => {
    const {
      label = '',
      icon,
      type,
      disabled,
      selected,
      clearButton,
      name,
      iconType
    } = item;
    return /*#__PURE__*/React.createElement("span", {
      key: ind,
      className: styles$_['ChipGroup-item']
    }, /*#__PURE__*/React.createElement(Chip, {
      "data-test": "DesignSystem-ChipGroup--Chip",
      name: name,
      label: label,
      selected: selected,
      icon: icon,
      disabled: disabled,
      clearButton: clearButton,
      iconType: iconType,
      type: type,
      onClick: () => onClickHandler(item),
      onClose: () => onCloseHandler(item)
    }));
  }));
};
ChipGroup.displayName = 'ChipGroup';

const uidGenerator = () => {
  let dt = new Date().getTime();
  const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {
    const r = (dt + Math.random() * 16) % 16 | 0;
    dt = Math.floor(dt / 16);
    const s = (c === 'x' ? r : r & 0x3 | 0x8).toString(16);
    return s;
  });
  return uuid;
};

const CheckboxIcon = props => {
  switch (props.name) {
    case 'checked--regular':
      return /*#__PURE__*/React__default.createElement("svg", {
        width: "10",
        height: "8",
        viewBox: "0 0 10 8",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, /*#__PURE__*/React__default.createElement("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M3.66667 5.56L8.72667 0.5L9.66667 1.44667L3.66667 7.44667L0.333333 4.11333L1.27333 3.17333L3.66667 5.56Z",
        fill: "white"
      }));
    case 'checked--tiny':
      return /*#__PURE__*/React__default.createElement("svg", {
        width: "10",
        height: "8",
        viewBox: "0 0 10 8",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, /*#__PURE__*/React__default.createElement("path", {
        d: "M0.333344 4L1.27334 3.06L3.66668 5.44667L8.72668 0.386665L9.66668 1.33333L3.66668 7.33333L0.333344 4Z",
        fill: "white"
      }));
    case 'indeterminate--regular':
      return /*#__PURE__*/React__default.createElement("svg", {
        width: "10",
        height: "2",
        viewBox: "0 0 10 2",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, /*#__PURE__*/React__default.createElement("path", {
        d: "M0 0H10V2H0V0Z",
        fill: "white"
      }));
    case 'indeterminate--tiny':
      return /*#__PURE__*/React__default.createElement("svg", {
        width: "8",
        height: "2",
        viewBox: "0 0 8 2",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, /*#__PURE__*/React__default.createElement("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M8 0H0V2H8V0Z",
        fill: "white"
      }));
    default:
      return null;
  }
};

var css_248z$14 = ".checkbox-module-Checkbox-Bxzy6-5-0-0-9 {\n  display: flex;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n  line-height: initial;\n  box-sizing: border-box;\n  padding-top: var(--spacing-05);\n  padding-bottom: var(--spacing-05);\n}\n\n.checkbox-module-Checkbox-input-shIYv-5-0-0-9 {\n  position: absolute;\n  z-index: 2;\n  opacity: 0;\n  cursor: pointer;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n}\n\n.checkbox-module-Checkbox-labelWrapper-8RA7S-5-0-0-9 {\n  padding-left: var(--spacing-20);\n  display: flex;\n  flex-direction: column;\n  min-width: 0;\n}\n\n.checkbox-module-Checkbox-label-1c-Z--5-0-0-9 {\n  display: flex;\n  cursor: pointer;\n}\n\n.checkbox-module-Checkbox-label--tiny-4ICqD-5-0-0-9 {\n  font-weight: var(--font-weight-bold);\n}\n\n.checkbox-module-Checkbox-outerWrapper-47kQq-5-0-0-9 {\n  position: relative;\n  margin-top: var(--spacing-05);\n}\n\n.checkbox-module-Checkbox-outerWrapper--regular-MXygQ-5-0-0-9 {\n  height: var(--spacing-40);\n  min-width: var(--spacing-40);\n}\n\n.checkbox-module-Checkbox-outerWrapper--tiny-g9Lcz-5-0-0-9 {\n  height: var(--spacing-30);\n  min-width: var(--spacing-30);\n}\n\n/* Type: Unchecked  */\n\n.checkbox-module-Checkbox-wrapper-iH4AL-5-0-0-9 {\n  top: 0;\n  left: 0;\n  border-radius: var(--border-radius-05);\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  height: 100%;\n  width: 100%;\n  justify-content: center;\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.checkbox-module-Checkbox-input-shIYv-5-0-0-9:focus {\n  outline: 0;\n}\n\n.checkbox-module-Checkbox-input-shIYv-5-0-0-9 ~ .checkbox-module-Checkbox-wrapper--default-Cs-Dj-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--secondary-dark);\n  background-color: var(--shadow-0);\n}\n\n.checkbox-module-Checkbox-input-shIYv-5-0-0-9:focus ~ .checkbox-module-Checkbox-wrapper--default-Cs-Dj-5-0-0-9 {\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n}\n\n.checkbox-module-Checkbox-input-shIYv-5-0-0-9:hover ~ .checkbox-module-Checkbox-wrapper--default-Cs-Dj-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--inverse-lightest);\n  background-color: var(--shadow-0);\n}\n\n.checkbox-module-Checkbox-input-shIYv-5-0-0-9:active ~ .checkbox-module-Checkbox-wrapper--default-Cs-Dj-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--inverse-lightest);\n  background-color: var(--secondary-light);\n}\n\n.checkbox-module-Checkbox--disabled-j-irf-5-0-0-9 {\n  pointer-events: none;\n}\n\n.checkbox-module-Checkbox--disabled-j-irf-5-0-0-9 .checkbox-module-Checkbox-wrapper--default-Cs-Dj-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--secondary-light);\n  background-color: var(--secondary-lightest);\n}\n\n/* Type: checked && Type: indeterminate  */\n\n.checkbox-module-Checkbox-input--checked-1V8bz-5-0-0-9 ~ .checkbox-module-Checkbox-wrapper-iH4AL-5-0-0-9,\n.checkbox-module-Checkbox-input--indeterminate-yMTip-5-0-0-9 ~ .checkbox-module-Checkbox-wrapper-iH4AL-5-0-0-9 {\n  background-color: var(--primary);\n  border: 0;\n}\n\n.checkbox-module-Checkbox-input--checked-1V8bz-5-0-0-9:focus ~ .checkbox-module-Checkbox-wrapper-iH4AL-5-0-0-9,\n.checkbox-module-Checkbox-input--indeterminate-yMTip-5-0-0-9:focus ~ .checkbox-module-Checkbox-wrapper-iH4AL-5-0-0-9 {\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n  background-color: var(--primary);\n  border: 0;\n}\n\n.checkbox-module-Checkbox-input--checked-1V8bz-5-0-0-9:hover ~ .checkbox-module-Checkbox-wrapper-iH4AL-5-0-0-9,\n.checkbox-module-Checkbox-input--indeterminate-yMTip-5-0-0-9:hover ~ .checkbox-module-Checkbox-wrapper-iH4AL-5-0-0-9 {\n  background-color: var(--primary-dark);\n  border: 0;\n}\n\n.checkbox-module-Checkbox-input--checked-1V8bz-5-0-0-9:active ~ .checkbox-module-Checkbox-wrapper-iH4AL-5-0-0-9,\n.checkbox-module-Checkbox-input--indeterminate-yMTip-5-0-0-9:active ~ .checkbox-module-Checkbox-wrapper-iH4AL-5-0-0-9 {\n  background-color: var(--primary-darker);\n  border: 0;\n}\n\n.checkbox-module-Checkbox--disabled-j-irf-5-0-0-9 .checkbox-module-Checkbox-input--checked-1V8bz-5-0-0-9 ~ .checkbox-module-Checkbox-wrapper-iH4AL-5-0-0-9,\n.checkbox-module-Checkbox--disabled-j-irf-5-0-0-9 .checkbox-module-Checkbox-input--indeterminate-yMTip-5-0-0-9 ~ .checkbox-module-Checkbox-wrapper-iH4AL-5-0-0-9 {\n  background-color: var(--primary-lighter);\n  border: 0;\n}\n\n/* Error State -> Default */\n\n.checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--alert);\n}\n\n.checkbox-module-Checkbox-input-shIYv-5-0-0-9:focus ~ .checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9 {\n  box-shadow: var(--shadow-spread) var(--alert-shadow);\n}\n\n.checkbox-module-Checkbox-input-shIYv-5-0-0-9:hover ~ .checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--alert-dark);\n}\n\n.checkbox-module-Checkbox-input-shIYv-5-0-0-9:active ~ .checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--alert-darker);\n  background-color: var(--secondary-light);\n}\n\n.checkbox-module-Checkbox--disabled-j-irf-5-0-0-9 .checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--alert-lighter);\n  background-color: var(--secondary-lightest);\n}\n\n/* Error State -> Checked & Indeterminate */\n\n.checkbox-module-Checkbox-input--checked-1V8bz-5-0-0-9 ~ .checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9,\n.checkbox-module-Checkbox-input--indeterminate-yMTip-5-0-0-9 ~ .checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--alert);\n}\n\n.checkbox-module-Checkbox-input--checked-1V8bz-5-0-0-9:focus ~ .checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9,\n.checkbox-module-Checkbox-input--indeterminate-yMTip-5-0-0-9:focus ~ .checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--alert);\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n}\n\n.checkbox-module-Checkbox-input--checked-1V8bz-5-0-0-9:hover ~ .checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9,\n.checkbox-module-Checkbox-input--indeterminate-yMTip-5-0-0-9:hover ~ .checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--alert-dark);\n}\n\n.checkbox-module-Checkbox-input--checked-1V8bz-5-0-0-9:active ~ .checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9,\n.checkbox-module-Checkbox-input--indeterminate-yMTip-5-0-0-9:active ~ .checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9 {\n  background-color: var(--primary-darker);\n  border: var(--border-width-2-5) solid var(--alert-darker);\n}\n\n.checkbox-module-Checkbox--disabled-j-irf-5-0-0-9 .checkbox-module-Checkbox-input--checked-1V8bz-5-0-0-9 ~ .checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9,\n.checkbox-module-Checkbox--disabled-j-irf-5-0-0-9 .checkbox-module-Checkbox-input--indeterminate-yMTip-5-0-0-9 ~ .checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--alert-lighter);\n}\n";
var checkboxStyles = {"Checkbox":"checkbox-module-Checkbox-Bxzy6-5-0-0-9","Checkbox-input":"checkbox-module-Checkbox-input-shIYv-5-0-0-9","Checkbox-labelWrapper":"checkbox-module-Checkbox-labelWrapper-8RA7S-5-0-0-9","Checkbox-label":"checkbox-module-Checkbox-label-1c-Z--5-0-0-9","Checkbox-label--tiny":"checkbox-module-Checkbox-label--tiny-4ICqD-5-0-0-9","Checkbox-outerWrapper":"checkbox-module-Checkbox-outerWrapper-47kQq-5-0-0-9","Checkbox-outerWrapper--regular":"checkbox-module-Checkbox-outerWrapper--regular-MXygQ-5-0-0-9","Checkbox-outerWrapper--tiny":"checkbox-module-Checkbox-outerWrapper--tiny-g9Lcz-5-0-0-9","Checkbox-wrapper":"checkbox-module-Checkbox-wrapper-iH4AL-5-0-0-9","Checkbox-wrapper--default":"checkbox-module-Checkbox-wrapper--default-Cs-Dj-5-0-0-9","Checkbox--disabled":"checkbox-module-Checkbox--disabled-j-irf-5-0-0-9","Checkbox-input--checked":"checkbox-module-Checkbox-input--checked-1V8bz-5-0-0-9","Checkbox-input--indeterminate":"checkbox-module-Checkbox-input--indeterminate-yMTip-5-0-0-9","Checkbox-wrapper--error":"checkbox-module-Checkbox-wrapper--error-pnJwU-5-0-0-9"};
styleInject(css_248z$14);

var css_248z$13 = ".dropdown-module-Dropdown--waM8-5-0-0-9 {\n  width: 100%;\n  position: relative;\n}\n\n.dropdown-module-Dropdown-wrapper-r0AX--5-0-0-9 {\n  margin-top: var(--spacing-10);\n  margin-bottom: var(--spacing-10);\n}\n\n.dropdown-module-Dropdown-inputWrapper-4ZQ9m-5-0-0-9 {\n  border-bottom: var(--border-width-2-5) solid var(--secondary-dark);\n}\n\n.dropdown-module-Dropdown-inputWrapper-4ZQ9m-5-0-0-9:focus-within {\n  border-bottom: var(--border-width-2-5) solid var(--primary);\n}\n\n.dropdown-module-Dropdown-input-ovmvS-5-0-0-9 {\n  min-width: unset !important;\n}\n\n.dropdown-module-Dropdown-input-ovmvS-5-0-0-9,\n.dropdown-module-Dropdown-input-ovmvS-5-0-0-9:focus-within {\n  border: unset !important;\n  box-shadow: none !important;\n}\n\n.dropdown-module-Dropdown-section-rT604-5-0-0-9 {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-left: var(--spacing-30);\n  margin-top: var(--spacing-30);\n  margin-bottom: var(--spacing-15);\n}\n\n.dropdown-module-Dropdown-section--withClear--R25A-5-0-0-9 {\n  margin-top: var(--spacing-20);\n  margin-bottom: var(--spacing-05);\n}\n\n.dropdown-module-Dropdown-buttonWrapper-hWHut-5-0-0-9 {\n  display: flex;\n  justify-content: flex-end;\n  padding-top: var(--spacing-20);\n  padding-right: var(--spacing-20);\n  padding-bottom: var(--spacing-20);\n  border-top: var(--border-width-2-5) solid var(--secondary-light);\n}\n\n.dropdown-module-Dropdown-footer-q2lkI-5-0-0-9 {\n  padding-left: var(--spacing-30);\n  padding-bottom: var(--spacing-10);\n  padding-top: var(--spacing-20);\n  box-sizing: border-box;\n}\n\n.dropdown-module-Option-9a9gu-5-0-0-9 {\n  display: flex;\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.dropdown-module-Option-9a9gu-5-0-0-9,\n.dropdown-module-Option-loading-niIYl-5-0-0-9 {\n  padding-top: var(--spacing-15);\n  padding-bottom: var(--spacing-15);\n  padding-left: var(--spacing-30);\n  padding-right: var(--spacing-20);\n}\n\n.dropdown-module-Option-checkbox-m-8Hz-5-0-0-9 .dropdown-module-Checkbox-outerWrapper-X7RB4-5-0-0-9 {\n  background-color: var(--shadow-0);\n}\n\n.dropdown-module-Option-checkboxWrapper-K7FXe-5-0-0-9 {\n  display: block;\n}\n\n.dropdown-module-OptionCheckbox-sWOoI-5-0-0-9 {\n  width: 100%;\n  padding-left: var(--spacing-30);\n  padding-top: var(--spacing-15);\n  padding-bottom: var(--spacing-15);\n}\n\n.dropdown-module-Option--active-gTg8I-5-0-0-9,\n.dropdown-module-Option-checkbox--active-vN71f-5-0-0-9 {\n  background-color: var(--secondary-lightest);\n  cursor: pointer;\n}\n\n.dropdown-module-Option--active-gTg8I-5-0-0-9:hover,\n.dropdown-module-Option-checkbox--active-vN71f-5-0-0-9:hover {\n  background-color: var(--secondary-lighter);\n}\n\n.dropdown-module-Option--active-gTg8I-5-0-0-9:active,\n.dropdown-module-Option-checkbox--active-vN71f-5-0-0-9:active {\n  background-color: var(--secondary-light);\n  cursor: pointer;\n}\n\n.dropdown-module-Option--active-gTg8I-5-0-0-9 {\n  transition: var(--standard-productive-curve);\n}\n\n.dropdown-module-Option-loading-niIYl-5-0-0-9 {\n  pointer-events: none;\n}\n\n.dropdown-module-Option--selected-N166--5-0-0-9 {\n  background-color: var(--primary-lightest);\n}\n\n.dropdown-module-Option--selected-N166--5-0-0-9:hover {\n  background-color: var(--primary-lighter);\n}\n\n.dropdown-module-Option--selected-N166--5-0-0-9:active {\n  background-color: var(--primary-lighter);\n  color: var(--primary-darker);\n}\n\n.dropdown-module-Option--selected-N166--5-0-0-9:active .dropdown-module-Option-text-lXgSe-5-0-0-9,\n.dropdown-module-Option--selected-N166--5-0-0-9:active .dropdown-module-Option-subInfo-rCqn2-5-0-0-9 {\n  color: var(--primary-darker);\n}\n\n.dropdown-module-Option--disabled-z9O1J-5-0-0-9,\n.dropdown-module-OptionWrapper--disabled-dDEXE-5-0-0-9 {\n  pointer-events: auto;\n  cursor: default;\n}\n\n.dropdown-module-Option-label-lSBP--5-0-0-9 {\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.dropdown-module-OptionCheckbox-sWOoI-5-0-0-9 .dropdown-module-Checkbox-label-HN9S6-5-0-0-9 {\n  padding-right: var(--spacing-30);\n  width: 100%;\n  display: flex;\n  overflow: hidden;\n  cursor: pointer;\n}\n\n.dropdown-module-Option-text-lXgSe-5-0-0-9,\n.dropdown-module-OptionCheckbox-sWOoI-5-0-0-9 .dropdown-module-Text-wTZmG-5-0-0-9 {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.dropdown-module-Option-text--wrap-RxZCx-5-0-0-9,\n.dropdown-module-Dropdown-wrapper--wrap-HMI-K-5-0-0-9 .dropdown-module-OptionCheckbox-sWOoI-5-0-0-9 .dropdown-module-Text-wTZmG-5-0-0-9 {\n  white-space: unset;\n}\n\n.dropdown-module-Option--icon-AA5JI-5-0-0-9 {\n  padding-left: var(--spacing-20);\n}\n\n.dropdown-module-Option-icon-sux-R-5-0-0-9 {\n  display: flex;\n}\n\n.dropdown-module-Option-icon-sux-R-5-0-0-9 {\n  height: -moz-fit-content;\n  height: fit-content;\n  line-height: var(--font-height);\n}\n";
var dropdownStyles = {"Dropdown":"dropdown-module-Dropdown--waM8-5-0-0-9","Dropdown-wrapper":"dropdown-module-Dropdown-wrapper-r0AX--5-0-0-9","Dropdown-inputWrapper":"dropdown-module-Dropdown-inputWrapper-4ZQ9m-5-0-0-9","Dropdown-input":"dropdown-module-Dropdown-input-ovmvS-5-0-0-9","Dropdown-section":"dropdown-module-Dropdown-section-rT604-5-0-0-9","Dropdown-section--withClear":"dropdown-module-Dropdown-section--withClear--R25A-5-0-0-9","Dropdown-buttonWrapper":"dropdown-module-Dropdown-buttonWrapper-hWHut-5-0-0-9","Dropdown-footer":"dropdown-module-Dropdown-footer-q2lkI-5-0-0-9","Option":"dropdown-module-Option-9a9gu-5-0-0-9","Option-loading":"dropdown-module-Option-loading-niIYl-5-0-0-9","Option-checkbox":"dropdown-module-Option-checkbox-m-8Hz-5-0-0-9","Checkbox-outerWrapper":"dropdown-module-Checkbox-outerWrapper-X7RB4-5-0-0-9","Option-checkboxWrapper":"dropdown-module-Option-checkboxWrapper-K7FXe-5-0-0-9","OptionCheckbox":"dropdown-module-OptionCheckbox-sWOoI-5-0-0-9","Option--active":"dropdown-module-Option--active-gTg8I-5-0-0-9","Option-checkbox--active":"dropdown-module-Option-checkbox--active-vN71f-5-0-0-9","Option--selected":"dropdown-module-Option--selected-N166--5-0-0-9","Option-text":"dropdown-module-Option-text-lXgSe-5-0-0-9","Option-subInfo":"dropdown-module-Option-subInfo-rCqn2-5-0-0-9","Option--disabled":"dropdown-module-Option--disabled-z9O1J-5-0-0-9","OptionWrapper--disabled":"dropdown-module-OptionWrapper--disabled-dDEXE-5-0-0-9","Option-label":"dropdown-module-Option-label-lSBP--5-0-0-9","Checkbox-label":"dropdown-module-Checkbox-label-HN9S6-5-0-0-9","Option-text--wrap":"dropdown-module-Option-text--wrap-RxZCx-5-0-0-9","Dropdown-wrapper--wrap":"dropdown-module-Dropdown-wrapper--wrap-HMI-K-5-0-0-9","Option--icon":"dropdown-module-Option--icon-AA5JI-5-0-0-9","Option-icon":"dropdown-module-Option-icon-sux-R-5-0-0-9"};
styleInject(css_248z$13);

var css_248z$12 = "/** Grid **/\n\n.grid-module-Grid-wrapper-lro6U-5-0-0-9 {\n  display: flex;\n  position: relative;\n  overflow: hidden;\n  height: 100%;\n}\n\n.grid-module-Grid-c7nCj-5-0-0-9 {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  height: 100%;\n  overflow: hidden;\n  background: var(--white);\n}\n\n.grid-module-Grid--resource-Wwxtj-5-0-0-9 .grid-module-Grid-row--body-hzvsO-5-0-0-9:hover,\n.grid-module-Grid--resource-Wwxtj-5-0-0-9 .grid-module-Grid-row--body-hzvsO-5-0-0-9:hover .grid-module-Grid-cellGroup-Q3add-5-0-0-9 {\n  cursor: pointer;\n  background: var(--secondary-lightest);\n}\n\n.grid-module-Grid--resource-Wwxtj-5-0-0-9 .grid-module-Grid-row--body-hzvsO-5-0-0-9:active,\n.grid-module-Grid--resource-Wwxtj-5-0-0-9 .grid-module-Grid-row--body-hzvsO-5-0-0-9:active .grid-module-Grid-cellGroup-Q3add-5-0-0-9 {\n  background: var(--secondary-lighter);\n}\n\n.grid-module-Grid--resource-Wwxtj-5-0-0-9 .grid-module-Grid-row--body-hzvsO-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) rgba(213, 213, 213, 0.16);\n  outline: none;\n}\n\n.grid-module-Grid--pinned-3JMcl-5-0-0-9 {\n  position: absolute;\n  height: 100%;\n  z-index: 5;\n  overflow-x: hidden;\n  -ms-overflow-style: none;\n  border-right: var(--border-width-7-5) solid var(--secondary);\n}\n\n.grid-module-Grid-pinned-c-pxc-5-0-0-9::-webkit-scrollbar {\n  display: none;\n}\n\n.grid-module-Grid--main-zduCm-5-0-0-9 {\n  flex-grow: 1;\n}\n\n.grid-module-Grid--comfortable-TOG1A-5-0-0-9 .grid-module-Grid-cell--head--JOK--5-0-0-9 {\n  min-height: 40px;\n}\n\n.grid-module-Grid--comfortable-TOG1A-5-0-0-9 .grid-module-Grid-cell--body--nkVA-5-0-0-9 {\n  padding-top: var(--spacing-30);\n  padding-bottom: var(--spacing-30);\n}\n\n.grid-module-Grid--standard-vGamG-5-0-0-9 .grid-module-Grid-cell--head--JOK--5-0-0-9 {\n  min-height: 40px;\n}\n\n.grid-module-Grid--standard-vGamG-5-0-0-9 .grid-module-Grid-cell--body--nkVA-5-0-0-9 {\n  padding-top: var(--spacing-30);\n  padding-bottom: var(--spacing-30);\n}\n\n.grid-module-Grid--compressed-mwkZ6-5-0-0-9 .grid-module-Grid-cell--head--JOK--5-0-0-9 {\n  min-height: 40px;\n}\n\n.grid-module-Grid--compressed-mwkZ6-5-0-0-9 .grid-module-Grid-cell--body--nkVA-5-0-0-9 {\n  padding-top: var(--spacing-20);\n  padding-bottom: var(--spacing-20);\n}\n\n.grid-module-Grid--tight-1w1jV-5-0-0-9 .grid-module-Grid-cell--head--JOK--5-0-0-9 {\n  min-height: var(--spacing-80);\n}\n\n.grid-module-Grid--tight-1w1jV-5-0-0-9 .grid-module-Grid-cell--body--nkVA-5-0-0-9 {\n  padding-top: var(--spacing-10);\n  padding-bottom: var(--spacing-10);\n}\n\n.grid-module-Grid-head-WsxqC-5-0-0-9 {\n  display: flex;\n  flex: 0 0 auto;\n  overflow-x: auto;\n  border-bottom: var(--border);\n}\n\n.grid-module-Grid-head-WsxqC-5-0-0-9::-webkit-scrollbar {\n  display: none;\n}\n\n.grid-module-Grid-headCell-OcJ4F-5-0-0-9 {\n  display: flex;\n  height: 100%;\n  flex-direction: row;\n  align-items: center;\n}\n\n.grid-module-Grid-headCell--draggable-WH7xi-5-0-0-9 {\n  cursor: grab;\n}\n\n.grid-module-Grid-headCell--draggable-WH7xi-5-0-0-9:active {\n  cursor: grabbing;\n  z-index: 3;\n  opacity: 1;\n  background-color: inherit;\n  color: inherit;\n}\n\n.grid-module-Grid-body-pAJM6-5-0-0-9 {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow-x: auto;\n  overflow-y: overlay;\n}\n\n.grid-module-Grid-rowWrapper-cZ8-a-5-0-0-9 {\n  display: inline-flex;\n  flex-direction: column;\n  min-width: -moz-fit-content;\n  min-width: fit-content;\n  flex-shrink: 0;\n  border-bottom: var(--border);\n}\n\n.grid-module-Grid-row-wBTps-5-0-0-9 {\n  display: flex;\n  flex-grow: 1;\n  flex-shrink: 0;\n  box-sizing: border-box;\n  background: var(--white);\n  transition: var(--duration--fast-02) var(--standard-productive-curve);\n  transition-delay: var(--duration--fast-01);\n}\n\n.grid-module-Grid-row--body-hzvsO-5-0-0-9 {\n  border-color: var(--secondary-light);\n}\n\n.grid-module-Grid-row--selected-4THdv-5-0-0-9,\n.grid-module-Grid-row--selected-4THdv-5-0-0-9 .grid-module-Grid-cellGroup-Q3add-5-0-0-9 {\n  background: rgba(220, 236, 249, 0.48);\n  transition: var(--duration--fast-02) var(--standard-productive-curve);\n}\n\n.grid-module-Grid-row--selected-4THdv-5-0-0-9:hover,\n.grid-module-Grid-row--selected-4THdv-5-0-0-9 .grid-module-Grid-cellGroup-Q3add-5-0-0-9:hover {\n  background: rgba(151, 197, 240, 0.48) !important;\n}\n\n.grid-module-Grid-row--selected-4THdv-5-0-0-9:active,\n.grid-module-Grid-row--selected-4THdv-5-0-0-9 .grid-module-Grid-cellGroup-Q3add-5-0-0-9:active {\n  background: var(--primary-lighter) !important;\n}\n\n.grid-module-Grid-row--selected-4THdv-5-0-0-9:focus,\n.grid-module-Grid-row--selected-4THdv-5-0-0-9 .grid-module-Grid-cellGroup-Q3add-5-0-0-9:focus {\n  outline: none;\n  box-shadow: var(--shadow-spread) rgba(0, 112, 221, 0.16);\n}\n\n.grid-module-Grid-rowWrapper-cZ8-a-5-0-0-9:last-child .grid-module-Grid-row--body-hzvsO-5-0-0-9 {\n  border-bottom: 0;\n}\n\n.grid-module-GridBody-padding-3KYKp-5-0-0-9 {\n  flex-shrink: 0;\n}\n\n.grid-module-Grid-nestedRow-uxEsD-5-0-0-9 {\n  width: 100%;\n  overflow: hidden;\n}\n\n.grid-module-Grid-nestedRowTrigger--amMF-5-0-0-9 {\n  margin-right: var(--spacing-30);\n  cursor: pointer;\n}\n\n.grid-module-Grid-nestedRow-uxEsD-5-0-0-9 .grid-module-Grid-rowWrapper-cZ8-a-5-0-0-9 {\n  border-bottom: 0;\n}\n\n.grid-module-Grid-nestedRow-uxEsD-5-0-0-9 .grid-module-Grid-cell-GVffL-5-0-0-9:first-child {\n  padding-left: calc(var(--spacing-80) + var(--spacing-20));\n}\n\n.grid-module-Grid-nestedRowPlaceholder-h98gD-5-0-0-9 {\n  width: var(--spacing-60);\n  margin-right: var(--spacing-30);\n}\n\n.grid-module-Grid-cell-GVffL-5-0-0-9 {\n  position: relative;\n  box-sizing: border-box;\n  padding-left: var(--spacing-30);\n  padding-right: var(--spacing-30);\n}\n\n.grid-module-Grid-cell--body--nkVA-5-0-0-9 {\n  padding-right: var(--spacing-30);\n}\n\n.grid-module-Grid-cell--head--JOK--5-0-0-9 {\n  overflow: hidden;\n  padding-right: var(--spacing-10);\n}\n\n.grid-module-Grid-cell--dragged-djAY0-5-0-0-9 {\n  z-index: 3;\n  opacity: 1;\n  background-color: inherit;\n  color: inherit;\n}\n\n.grid-module-Grid-cell--separator-TYHdI-5-0-0-9 {\n  border-left: var(--border);\n  border-color: var(--secondary-light);\n}\n\n.grid-module-Grid-cell--selected-1zcBx-5-0-0-9 {\n  background: var(--primary-lightest);\n}\n\n.grid-module-Grid-cell--nestedRow-U3Dg5-5-0-0-9 {\n  padding-left: var(--spacing-20);\n}\n\n.grid-module-Grid-cell--head--JOK--5-0-0-9.grid-module-Grid-cell-GVffL-5-0-0-9:first-of-type {\n  border-left: none;\n}\n\n/* .Grid .Grid-cellGroup--main .Grid-cell--head.Grid-cell:last-child {\n    border-right: var(--border);\n} */\n\n.grid-module-Grid-row--disabled-f0pzU-5-0-0-9 {\n  opacity: var(--opacity-10);\n  pointer-events: none;\n}\n\n.grid-module-Grid-cell--head--JOK--5-0-0-9.grid-module-Grid-cell--selected-1zcBx-5-0-0-9 {\n  background: var(--primary-light);\n}\n\n.grid-module-Grid-cell--checkbox-kWT4v-5-0-0-9 {\n  width: unset;\n  min-width: unset;\n  display: flex;\n  align-items: center;\n  z-index: 1;\n  padding-right: 0 !important;\n  overflow: visible !important;\n}\n\n.grid-module-Grid-sortingIcons-Lwutu-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  padding-left: var(--spacing-10);\n}\n\n.grid-module-Grid-cellReorder-SMPMA-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  cursor: grab;\n}\n\n.grid-module-Grid-cellReorder-SMPMA-5-0-0-9:active {\n  cursor: grabbing;\n}\n\n.grid-module-Grid-cellContent-Ls-ZE-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n  height: 100%;\n  box-sizing: border-box;\n  z-index: inherit;\n}\n\n.grid-module-Grid-cell--head--JOK--5-0-0-9 .grid-module-Grid-cellContent-Ls-ZE-5-0-0-9 {\n  overflow: hidden;\n}\n\n.grid-module-Grid-cellResize-J-SJu-5-0-0-9 {\n  position: absolute;\n  right: 0;\n  width: var(--spacing-10);\n  cursor: ew-resize;\n  height: 100%;\n}\n\n.grid-module-Grid-cellSortIcon-ZV0FF-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.grid-module-Grid-cellSortIcon-ZV0FF-5-0-0-9:hover {\n  background: var(--secondary);\n}\n\n.grid-module-Grid-cellResize-J-SJu-5-0-0-9:hover {\n  background: var(--primary);\n}\n\n.grid-module-Grid-reorderHighlighter-UMzz7-5-0-0-9 {\n  position: absolute;\n  height: 100%;\n  border: var(--border-width-7-5) solid var(--primary-light);\n  z-index: 10;\n}\n\n.grid-module-Grid-cellGroup-Q3add-5-0-0-9 {\n  display: flex;\n  box-sizing: border-box;\n  background: var(--white);\n}\n\n.grid-module-Grid-cellGroup--pinned-gR1WR-5-0-0-9 {\n  position: sticky;\n  z-index: 4;\n}\n\n.grid-module-Grid-cellGroup--pinned-left-EsISF-5-0-0-9 {\n  left: 0;\n  border-style: inset;\n  border-right: var(--spacing-2-5) solid rgba(213, 213, 213, var(--opacity-3));\n  border-right-width: var(--border-width-10);\n  -o-border-image: linear-gradient(\n      to right,\n      var(--secondary-light),\n      var(--secondary-light) 25%,\n      rgba(213, 213, 213, 0.1) 25%,\n      rgba(213, 213, 213, 0.1)\n    )\n    1 100%;\n     border-image: linear-gradient(\n      to right,\n      var(--secondary-light),\n      var(--secondary-light) 25%,\n      rgba(213, 213, 213, 0.1) 25%,\n      rgba(213, 213, 213, 0.1)\n    )\n    1 100%;\n}\n\n.grid-module-Grid-cellGroup--pinned-right-jWDJC-5-0-0-9 {\n  right: 0;\n  border-style: inset;\n  border-left: var(--border-width-2-5) solid rgba(213, 213, 213, var(--opacity-3));\n  border-left-width: var(--border-width-10);\n  -o-border-image: linear-gradient(\n      to left,\n      var(--secondary-light),\n      var(--secondary-light) 25%,\n      rgba(213, 213, 213, 0.1) 25%,\n      rgba(213, 213, 213, 0.1)\n    )\n    1 100%;\n     border-image: linear-gradient(\n      to left,\n      var(--secondary-light),\n      var(--secondary-light) 25%,\n      rgba(213, 213, 213, 0.1) 25%,\n      rgba(213, 213, 213, 0.1)\n    )\n    1 100%;\n}\n\n.grid-module-Grid-c7nCj-5-0-0-9 .grid-module-Checkbox-wrapper-0R1-K-5-0-0-9 {\n  margin-right: 0;\n}\n\n/** Grid Cell **/\n\n.grid-module-GridCell-Atntl-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.grid-module-GridCell--align-left-zURf7-5-0-0-9 {\n  /* flex-direction: row; */\n  justify-content: flex-start;\n  text-align: left;\n}\n\n.grid-module-GridCell--align-right-nMKtX-5-0-0-9 {\n  /* flex-direction: row-reverse; */\n  justify-content: flex-end;\n  text-align: right;\n}\n\n.grid-module-GridCell--align-center-dtOQN-5-0-0-9 {\n  justify-content: center;\n  text-align: center;\n}\n\n.grid-module-GridCell--metaList-wNdz6-5-0-0-9 {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  overflow: hidden;\n}\n\n.grid-module-GridCell--statusHint-UyDMp-5-0-0-9 .grid-module-StatusHint-R1JrO-5-0-0-9 {\n  overflow: hidden;\n}\n\n.grid-module-GridCell--statusHint-UyDMp-5-0-0-9 .grid-module-StatusHint-R1JrO-5-0-0-9 .grid-module-Text-Fy3XX-5-0-0-9 {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.grid-module-GridCell--avatar-fZFWf-5-0-0-9 .grid-module-Avatar-3XZ0C-5-0-0-9 {\n  margin: 0;\n}\n\n.grid-module-GridCell-metaListWrapper-C5Xha-5-0-0-9 {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  overflow: hidden;\n}\n\n.grid-module-GridCell-metaList-Eu-pj-5-0-0-9 {\n  display: flex;\n}\n\n.grid-module-GridCell-metaList-Eu-pj-5-0-0-9 .grid-module-Text-Fy3XX-5-0-0-9 {\n  display: flex;\n  align-items: center;\n}\n\n.grid-module-GridCell-metaList-Eu-pj-5-0-0-9 .grid-module-Text-Fy3XX-5-0-0-9::before {\n  content: '';\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: var(--spacing-10);\n  height: var(--spacing-10);\n  border-radius: var(--border-radius-full);\n  background: var(--secondary);\n  margin: 0 var(--spacing-20);\n}\n\n.grid-module-GridCell-metaList-Eu-pj-5-0-0-9 .grid-module-Text-Fy3XX-5-0-0-9:first-child::before {\n  display: none;\n}\n\n.grid-module-GridCell--metaList-wNdz6-5-0-0-9 ul li:first-child {\n  margin-left: 0;\n}\n\n/** Header **/\n\n/** Table-header **/\n\n.grid-module-Header-8rhUu-5-0-0-9 {\n  background: var(--white);\n  padding: var(--spacing-30);\n  border-bottom: var(--border);\n}\n\n.grid-module-Header-content-0SgQi-5-0-0-9 {\n  display: flex;\n}\n\n.grid-module-Header-content--bottom-bkVrG-5-0-0-9 {\n  align-items: center;\n  justify-content: space-between;\n}\n\n.grid-module-Header-search-4git6-5-0-0-9 {\n  width: var(--spacing-640);\n  margin-bottom: var(--spacing-40);\n}\n\n.grid-module-Header-label-B0-kh-5-0-0-9 {\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n}\n\n.grid-module-Header-label-B0-kh-5-0-0-9 .grid-module-Checkbox-ETqg7-5-0-0-9 {\n  margin-right: var(--spacing-20);\n}\n\n.grid-module-Header-dropdown-xPNuH-5-0-0-9 {\n  display: flex;\n  margin-left: var(--spacing-10);\n  margin-bottom: var(--spacing-40);\n}\n\n.grid-module-Header-dropdown-xPNuH-5-0-0-9 .grid-module-Dropdown-Ev9FG-5-0-0-9 {\n  margin: 0 var(--spacing-10);\n}\n\n.grid-module-Header-draggableDropdown-QkIiO-5-0-0-9 .grid-module-Dropdown-wrapper-T1n1M-5-0-0-9 {\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.grid-module-Header-filters-u0J3G-5-0-0-9 {\n  display: flex;\n}\n\n.grid-module-Header-sorting-zOkI4-5-0-0-9 {\n  display: flex;\n}\n\n.grid-module-Header-actions-WHtHK-5-0-0-9 {\n  margin-bottom: var(--spacing-40);\n}\n\n.grid-module-Header-global-actions-e6dK3-5-0-0-9 {\n  justify-content: flex-end;\n  margin-left: auto;\n  margin-bottom: var(--spacing-40);\n}\n";
var gridStyles = {"Grid-wrapper":"grid-module-Grid-wrapper-lro6U-5-0-0-9","Grid":"grid-module-Grid-c7nCj-5-0-0-9","Grid--resource":"grid-module-Grid--resource-Wwxtj-5-0-0-9","Grid-row--body":"grid-module-Grid-row--body-hzvsO-5-0-0-9","Grid-cellGroup":"grid-module-Grid-cellGroup-Q3add-5-0-0-9","Grid--pinned":"grid-module-Grid--pinned-3JMcl-5-0-0-9","Grid-pinned":"grid-module-Grid-pinned-c-pxc-5-0-0-9","Grid--main":"grid-module-Grid--main-zduCm-5-0-0-9","Grid--comfortable":"grid-module-Grid--comfortable-TOG1A-5-0-0-9","Grid-cell--head":"grid-module-Grid-cell--head--JOK--5-0-0-9","Grid-cell--body":"grid-module-Grid-cell--body--nkVA-5-0-0-9","Grid--standard":"grid-module-Grid--standard-vGamG-5-0-0-9","Grid--compressed":"grid-module-Grid--compressed-mwkZ6-5-0-0-9","Grid--tight":"grid-module-Grid--tight-1w1jV-5-0-0-9","Grid-head":"grid-module-Grid-head-WsxqC-5-0-0-9","Grid-headCell":"grid-module-Grid-headCell-OcJ4F-5-0-0-9","Grid-headCell--draggable":"grid-module-Grid-headCell--draggable-WH7xi-5-0-0-9","Grid-body":"grid-module-Grid-body-pAJM6-5-0-0-9","Grid-rowWrapper":"grid-module-Grid-rowWrapper-cZ8-a-5-0-0-9","Grid-row":"grid-module-Grid-row-wBTps-5-0-0-9","Grid-row--selected":"grid-module-Grid-row--selected-4THdv-5-0-0-9","GridBody-padding":"grid-module-GridBody-padding-3KYKp-5-0-0-9","Grid-nestedRow":"grid-module-Grid-nestedRow-uxEsD-5-0-0-9","Grid-nestedRowTrigger":"grid-module-Grid-nestedRowTrigger--amMF-5-0-0-9","Grid-cell":"grid-module-Grid-cell-GVffL-5-0-0-9","Grid-nestedRowPlaceholder":"grid-module-Grid-nestedRowPlaceholder-h98gD-5-0-0-9","Grid-cell--dragged":"grid-module-Grid-cell--dragged-djAY0-5-0-0-9","Grid-cell--separator":"grid-module-Grid-cell--separator-TYHdI-5-0-0-9","Grid-cell--selected":"grid-module-Grid-cell--selected-1zcBx-5-0-0-9","Grid-cell--nestedRow":"grid-module-Grid-cell--nestedRow-U3Dg5-5-0-0-9","Grid-row--disabled":"grid-module-Grid-row--disabled-f0pzU-5-0-0-9","Grid-cell--checkbox":"grid-module-Grid-cell--checkbox-kWT4v-5-0-0-9","Grid-sortingIcons":"grid-module-Grid-sortingIcons-Lwutu-5-0-0-9","Grid-cellReorder":"grid-module-Grid-cellReorder-SMPMA-5-0-0-9","Grid-cellContent":"grid-module-Grid-cellContent-Ls-ZE-5-0-0-9","Grid-cellResize":"grid-module-Grid-cellResize-J-SJu-5-0-0-9","Grid-cellSortIcon":"grid-module-Grid-cellSortIcon-ZV0FF-5-0-0-9","Grid-reorderHighlighter":"grid-module-Grid-reorderHighlighter-UMzz7-5-0-0-9","Grid-cellGroup--pinned":"grid-module-Grid-cellGroup--pinned-gR1WR-5-0-0-9","Grid-cellGroup--pinned-left":"grid-module-Grid-cellGroup--pinned-left-EsISF-5-0-0-9","Grid-cellGroup--pinned-right":"grid-module-Grid-cellGroup--pinned-right-jWDJC-5-0-0-9","Checkbox-wrapper":"grid-module-Checkbox-wrapper-0R1-K-5-0-0-9","GridCell":"grid-module-GridCell-Atntl-5-0-0-9","GridCell--align-left":"grid-module-GridCell--align-left-zURf7-5-0-0-9","GridCell--align-right":"grid-module-GridCell--align-right-nMKtX-5-0-0-9","GridCell--align-center":"grid-module-GridCell--align-center-dtOQN-5-0-0-9","GridCell--metaList":"grid-module-GridCell--metaList-wNdz6-5-0-0-9","GridCell--statusHint":"grid-module-GridCell--statusHint-UyDMp-5-0-0-9","StatusHint":"grid-module-StatusHint-R1JrO-5-0-0-9","Text":"grid-module-Text-Fy3XX-5-0-0-9","GridCell--avatar":"grid-module-GridCell--avatar-fZFWf-5-0-0-9","Avatar":"grid-module-Avatar-3XZ0C-5-0-0-9","GridCell-metaListWrapper":"grid-module-GridCell-metaListWrapper-C5Xha-5-0-0-9","GridCell-metaList":"grid-module-GridCell-metaList-Eu-pj-5-0-0-9","Header":"grid-module-Header-8rhUu-5-0-0-9","Header-content":"grid-module-Header-content-0SgQi-5-0-0-9","Header-content--bottom":"grid-module-Header-content--bottom-bkVrG-5-0-0-9","Header-search":"grid-module-Header-search-4git6-5-0-0-9","Header-label":"grid-module-Header-label-B0-kh-5-0-0-9","Checkbox":"grid-module-Checkbox-ETqg7-5-0-0-9","Header-dropdown":"grid-module-Header-dropdown-xPNuH-5-0-0-9","Dropdown":"grid-module-Dropdown-Ev9FG-5-0-0-9","Header-draggableDropdown":"grid-module-Header-draggableDropdown-QkIiO-5-0-0-9","Dropdown-wrapper":"grid-module-Dropdown-wrapper-T1n1M-5-0-0-9","Header-filters":"grid-module-Header-filters-u0J3G-5-0-0-9","Header-sorting":"grid-module-Header-sorting-zOkI4-5-0-0-9","Header-actions":"grid-module-Header-actions-WHtHK-5-0-0-9","Header-global-actions":"grid-module-Header-global-actions-e6dK3-5-0-0-9"};
styleInject(css_248z$12);

const Checkbox = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {
  const {
    size = 'regular',
    tabIndex = 0,
    defaultChecked,
    indeterminate,
    label,
    error,
    disabled,
    onChange,
    name,
    value,
    className,
    checked: checkedProp,
    helpText,
    id = `${name}-${label}-${uidGenerator()}`,
    labelRef,
    wrapLabel,
    ...rest
  } = props;
  const ref = React.useRef(null);
  React.useImperativeHandle(forwardedRef, () => {
    return ref.current;
  });
  const [checked, setChecked] = React.useState(checkedProp === undefined ? defaultChecked : checkedProp);
  React.useEffect(() => {
    setIndeterminate(indeterminate);
  }, [indeterminate]);
  React.useEffect(() => {
    if (checkedProp !== undefined) {
      setChecked(checkedProp);
    }
  }, [checkedProp]);
  const CheckboxClass = classNames({
    [checkboxStyles['Checkbox']]: true,
    [checkboxStyles['Checkbox--disabled']]: disabled
  }, className);
  const CheckboxOuterWrapper = classNames({
    [checkboxStyles['Checkbox-outerWrapper']]: true,
    [dropdownStyles['Checkbox-outerWrapper']]: true,
    [checkboxStyles[`Checkbox-outerWrapper--${size}`]]: size
  });
  const CheckboxInputWrapper = classNames({
    [checkboxStyles['Checkbox-input']]: true,
    [checkboxStyles['Checkbox-input--checked']]: checked,
    [checkboxStyles['Checkbox-input--indeterminate']]: props.indeterminate
  });
  const CheckboxWrapper = classNames({
    [checkboxStyles['Checkbox-wrapper']]: true,
    [gridStyles['Checkbox-wrapper']]: true,
    [checkboxStyles['Checkbox-wrapper--default']]: !error,
    [checkboxStyles['Checkbox-wrapper--error']]: error
  });
  const CheckboxLabelClass = classNames({
    [checkboxStyles['Checkbox-label']]: true,
    [dropdownStyles['Checkbox-label']]: true,
    [checkboxStyles['Checkbox-label--tiny']]: size === 'tiny'
  });
  const LabelTextClass = classNames({
    ['mw-100']: true,
    ['ellipsis--noWrap']: wrapLabel !== true,
    ['ellipsis']: wrapLabel
  });
  const setIndeterminate = indeterminateValue => {
    ref.current.indeterminate = indeterminateValue;
  };
  const onChangeHandler = e => {
    if (checkedProp === undefined) {
      setChecked(e.target.checked);
      setIndeterminate(e.target.indeterminate);
    }
    if (onChange) onChange(e);
  };
  const IconMapper = classNames({
    ['checked--regular']: checked && size === 'regular',
    ['checked--tiny']: checked && size === 'tiny',
    ['indeterminate--regular']: indeterminate && size === 'regular',
    ['indeterminate--tiny']: indeterminate && size === 'tiny'
  });
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-Checkbox",
    className: CheckboxClass
  }, /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-Checkbox-OuterWrapper",
    className: CheckboxOuterWrapper
  }, /*#__PURE__*/React.createElement("input", _extends$2({}, rest, {
    type: "checkbox",
    defaultChecked: defaultChecked,
    onChange: onChangeHandler,
    checked: checked,
    disabled: disabled,
    ref: ref,
    name: name,
    value: value,
    className: CheckboxInputWrapper,
    tabIndex: tabIndex,
    id: id,
    "data-test": "DesignSystem-Checkbox-InputBox"
  })), /*#__PURE__*/React.createElement("span", {
    className: CheckboxWrapper,
    "data-test": "DesignSystem-Checkbox-Icon"
  }, IconMapper && /*#__PURE__*/React.createElement(CheckboxIcon, {
    name: IconMapper
  }))), /*#__PURE__*/React.createElement("div", {
    className: checkboxStyles['Checkbox-labelWrapper']
  }, label && label.trim() && /*#__PURE__*/React.createElement("label", {
    htmlFor: id,
    className: CheckboxLabelClass,
    "data-test": "DesignSystem-Checkbox-Label"
  }, /*#__PURE__*/React.createElement(Text, {
    size: size === 'tiny' ? 'small' : 'regular',
    appearance: disabled ? 'disabled' : 'default',
    className: LabelTextClass,
    ref: labelRef
  }, label.trim())), helpText && /*#__PURE__*/React.createElement(Text, {
    "data-test": "DesignSystem-Checkbox-HelpText",
    size: "small",
    appearance: disabled ? 'disabled' : 'subtle'
  }, helpText.trim()))));
});
Checkbox.displayName = 'Checkbox';

var css_248z$11 = ".column-module-Row-LudWR-5-0-0-9 {\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1 100%;\n}\n\n.column-module-Col-BW4pl-5-0-0-9 {\n  position: relative;\n  box-sizing: border-box;\n  flex: 1 0 0%;\n}\n\n.column-module-Col--auto-HnufQ-5-0-0-9 {\n  flex: 0 0 auto;\n  width: auto;\n}\n\n.column-module-Col--1-iSoXZ-5-0-0-9 {\n  flex: 0 0 auto;\n  width: calc(100% / var(--grid-columns) * 1);\n}\n\n.column-module-Col--2-KR9Oj-5-0-0-9 {\n  flex: 0 0 auto;\n  width: calc(100% / var(--grid-columns) * 2);\n}\n\n.column-module-Col--3-tRdfx-5-0-0-9 {\n  flex: 0 0 auto;\n  width: calc(100% / var(--grid-columns) * 3);\n}\n\n.column-module-Col--4-SxYUZ-5-0-0-9 {\n  flex: 0 0 auto;\n  width: calc(100% / var(--grid-columns) * 4);\n}\n\n.column-module-Col--5-Ghiks-5-0-0-9 {\n  flex: 0 0 auto;\n  width: calc(100% / var(--grid-columns) * 5);\n}\n\n.column-module-Col--6-JO4qo-5-0-0-9 {\n  flex: 0 0 auto;\n  width: calc(100% / var(--grid-columns) * 6);\n}\n\n.column-module-Col--7-SRnJx-5-0-0-9 {\n  flex: 0 0 auto;\n  width: calc(100% / var(--grid-columns) * 7);\n}\n\n.column-module-Col--8-HBxc4-5-0-0-9 {\n  flex: 0 0 auto;\n  width: calc(100% / var(--grid-columns) * 8);\n}\n\n.column-module-Col--9-eMJ9n-5-0-0-9 {\n  flex: 0 0 auto;\n  width: calc(100% / var(--grid-columns) * 9);\n}\n\n.column-module-Col--10-VSo8k-5-0-0-9 {\n  flex: 0 0 auto;\n  width: calc(100% / var(--grid-columns) * 10);\n}\n\n.column-module-Col--11-miljX-5-0-0-9 {\n  flex: 0 0 auto;\n  width: calc(100% / var(--grid-columns) * 11);\n}\n\n.column-module-Col--12-9Obkj-5-0-0-9 {\n  flex: 0 0 auto;\n  width: calc(100% / var(--grid-columns) * 12);\n}\n\n/* if the viewport is between 0 to 575 pixels wide. */\n\n@media (max-width: 575px) {\n  .column-module-Col--xs-auto-oXQ2q-5-0-0-9 {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .column-module-Col--xs-1-KvELd-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 1);\n  }\n  .column-module-Col--xs-2-OUGOZ-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 2);\n  }\n  .column-module-Col--xs-3-G55n8-5-0-0-9 {\n    flex: 0 0 auto;\n  }\n  .column-module-Col--xs-4-PADe9-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 4);\n  }\n  .column-module-Col--xs-5-Ex4rw-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 5);\n  }\n  .column-module-Col--xs-6-fzX37-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 6);\n  }\n  .column-module-Col--xs-7-zWOG--5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 7);\n  }\n  .column-module-Col--xs-8-gngfO-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 8);\n  }\n  .column-module-Col--xs-9-b-r8L-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 9);\n  }\n  .column-module-Col--xs-10-umLd0-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 10);\n  }\n  .column-module-Col--xs-11-KvOKo-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 11);\n  }\n  .column-module-Col--xs-12-u1Ks8-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 12);\n  }\n}\n\n/* if the viewport is between 576 and 767 pixels wide. */\n\n@media (min-width: 576px) and (max-width: 767px) {\n  .column-module-Col--s-auto-rQS8S-5-0-0-9 {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .column-module-Col--s-1-BVL5j-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 1);\n  }\n  .column-module-Col--s-2-9s29P-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 2);\n  }\n  .column-module-Col--s-3-69Bdl-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 3);\n  }\n  .column-module-Col--s-4-nE4kT-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 4);\n  }\n  .column-module-Col--s-5-B72Pu-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 5);\n  }\n  .column-module-Col--s-6-AdMSU-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 6);\n  }\n  .column-module-Col--s-7-e656U-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 7);\n  }\n  .column-module-Col--s-8-1EhC1-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 8);\n  }\n  .column-module-Col--s-9-rpHj--5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 9);\n  }\n  .column-module-Col--s-10-GVB2t-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 10);\n  }\n  .column-module-Col--s-11-3WJSe-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 11);\n  }\n  .column-module-Col--s-12-eFxie-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 12);\n  }\n}\n\n/* if the viewport is between 768 and 991 pixels wide. */\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .column-module-Col--m-auto-DTvE1-5-0-0-9 {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .column-module-Col--m-1-T7-6r-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 1);\n  }\n  .column-module-Col--m-2-UJZxe-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 2);\n  }\n  .column-module-Col--m-3-jgXEy-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 3);\n  }\n  .column-module-Col--m-4-86-dP-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 4);\n  }\n  .column-module-Col--m-5-RxZc2-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 5);\n  }\n  .column-module-Col--m-6-RwrEz-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 6);\n  }\n  .column-module-Col--m-7-HuA0i-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 7);\n  }\n  .column-module-Col--m-8-qKE7R-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 8);\n  }\n  .column-module-Col--m-9--8vSy-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 9);\n  }\n  .column-module-Col--m-10-aBQ1l-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 10);\n  }\n  .column-module-Col--m-11-08F-U-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 11);\n  }\n  .column-module-Col--m-12-gZ47F-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 12);\n  }\n}\n\n/* if the viewport is between 992 and 1199 pixels wide. */\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .column-module-Col--l-auto-SxR1p-5-0-0-9 {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .column-module-Col--l-1-aLREn-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 1);\n  }\n  .column-module-Col--l-2-0mG-c-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 2);\n  }\n  .column-module-Col--l-3--aWDx-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 3);\n  }\n  .column-module-Col--l-4-GTf5q-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 4);\n  }\n  .column-module-Col--l-5-5MGhB-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 5);\n  }\n  .column-module-Col--l-6-DY6jT-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 6);\n  }\n  .column-module-Col--l-7-Wyv6Z-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 7);\n  }\n  .column-module-Col--l-8-30knO-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 8);\n  }\n  .column-module-Col--l-9-H-ap--5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 9);\n  }\n  .column-module-Col--l-10-wgJl4-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 10);\n  }\n  .column-module-Col--l-11-4dOz3-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 11);\n  }\n  .column-module-Col--l-12-xC5rs-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 12);\n  }\n}\n\n/* if the viewport is 1200 pixels wide or wider. */\n\n@media (min-width: 1200px) {\n  .column-module-Col--xl-auto-zH0n0-5-0-0-9 {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .column-module-Col--xl-1-ZCRQR-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 1);\n  }\n  .column-module-Col--xl-2-5agyW-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 2);\n  }\n  .column-module-Col--xl-3-e5vjv-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 3);\n  }\n  .column-module-Col--xl-4--aAZH-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 4);\n  }\n  .column-module-Col--xl-5-167j6-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 5);\n  }\n  .column-module-Col--xl-6-wXLZ--5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 6);\n  }\n  .column-module-Col--xl-7-QA116-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 7);\n  }\n  .column-module-Col--xl-8-Q22c5-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 8);\n  }\n  .column-module-Col--xl-9-bJrrK-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 9);\n  }\n  .column-module-Col--xl-10-IALsA-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 10);\n  }\n  .column-module-Col--xl-11-vrchj-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 11);\n  }\n  .column-module-Col--xl-12-6dUnj-5-0-0-9 {\n    flex: 0 0 auto;\n    width: calc(100% / var(--grid-columns) * 12);\n  }\n}\n";
var rowStyles = {"Row":"column-module-Row-LudWR-5-0-0-9","Col":"column-module-Col-BW4pl-5-0-0-9","Col--auto":"column-module-Col--auto-HnufQ-5-0-0-9","Col--1":"column-module-Col--1-iSoXZ-5-0-0-9","Col--2":"column-module-Col--2-KR9Oj-5-0-0-9","Col--3":"column-module-Col--3-tRdfx-5-0-0-9","Col--4":"column-module-Col--4-SxYUZ-5-0-0-9","Col--5":"column-module-Col--5-Ghiks-5-0-0-9","Col--6":"column-module-Col--6-JO4qo-5-0-0-9","Col--7":"column-module-Col--7-SRnJx-5-0-0-9","Col--8":"column-module-Col--8-HBxc4-5-0-0-9","Col--9":"column-module-Col--9-eMJ9n-5-0-0-9","Col--10":"column-module-Col--10-VSo8k-5-0-0-9","Col--11":"column-module-Col--11-miljX-5-0-0-9","Col--12":"column-module-Col--12-9Obkj-5-0-0-9","Col--xs-auto":"column-module-Col--xs-auto-oXQ2q-5-0-0-9","Col--xs-1":"column-module-Col--xs-1-KvELd-5-0-0-9","Col--xs-2":"column-module-Col--xs-2-OUGOZ-5-0-0-9","Col--xs-3":"column-module-Col--xs-3-G55n8-5-0-0-9","Col--xs-4":"column-module-Col--xs-4-PADe9-5-0-0-9","Col--xs-5":"column-module-Col--xs-5-Ex4rw-5-0-0-9","Col--xs-6":"column-module-Col--xs-6-fzX37-5-0-0-9","Col--xs-7":"column-module-Col--xs-7-zWOG--5-0-0-9","Col--xs-8":"column-module-Col--xs-8-gngfO-5-0-0-9","Col--xs-9":"column-module-Col--xs-9-b-r8L-5-0-0-9","Col--xs-10":"column-module-Col--xs-10-umLd0-5-0-0-9","Col--xs-11":"column-module-Col--xs-11-KvOKo-5-0-0-9","Col--xs-12":"column-module-Col--xs-12-u1Ks8-5-0-0-9","Col--s-auto":"column-module-Col--s-auto-rQS8S-5-0-0-9","Col--s-1":"column-module-Col--s-1-BVL5j-5-0-0-9","Col--s-2":"column-module-Col--s-2-9s29P-5-0-0-9","Col--s-3":"column-module-Col--s-3-69Bdl-5-0-0-9","Col--s-4":"column-module-Col--s-4-nE4kT-5-0-0-9","Col--s-5":"column-module-Col--s-5-B72Pu-5-0-0-9","Col--s-6":"column-module-Col--s-6-AdMSU-5-0-0-9","Col--s-7":"column-module-Col--s-7-e656U-5-0-0-9","Col--s-8":"column-module-Col--s-8-1EhC1-5-0-0-9","Col--s-9":"column-module-Col--s-9-rpHj--5-0-0-9","Col--s-10":"column-module-Col--s-10-GVB2t-5-0-0-9","Col--s-11":"column-module-Col--s-11-3WJSe-5-0-0-9","Col--s-12":"column-module-Col--s-12-eFxie-5-0-0-9","Col--m-auto":"column-module-Col--m-auto-DTvE1-5-0-0-9","Col--m-1":"column-module-Col--m-1-T7-6r-5-0-0-9","Col--m-2":"column-module-Col--m-2-UJZxe-5-0-0-9","Col--m-3":"column-module-Col--m-3-jgXEy-5-0-0-9","Col--m-4":"column-module-Col--m-4-86-dP-5-0-0-9","Col--m-5":"column-module-Col--m-5-RxZc2-5-0-0-9","Col--m-6":"column-module-Col--m-6-RwrEz-5-0-0-9","Col--m-7":"column-module-Col--m-7-HuA0i-5-0-0-9","Col--m-8":"column-module-Col--m-8-qKE7R-5-0-0-9","Col--m-9":"column-module-Col--m-9--8vSy-5-0-0-9","Col--m-10":"column-module-Col--m-10-aBQ1l-5-0-0-9","Col--m-11":"column-module-Col--m-11-08F-U-5-0-0-9","Col--m-12":"column-module-Col--m-12-gZ47F-5-0-0-9","Col--l-auto":"column-module-Col--l-auto-SxR1p-5-0-0-9","Col--l-1":"column-module-Col--l-1-aLREn-5-0-0-9","Col--l-2":"column-module-Col--l-2-0mG-c-5-0-0-9","Col--l-3":"column-module-Col--l-3--aWDx-5-0-0-9","Col--l-4":"column-module-Col--l-4-GTf5q-5-0-0-9","Col--l-5":"column-module-Col--l-5-5MGhB-5-0-0-9","Col--l-6":"column-module-Col--l-6-DY6jT-5-0-0-9","Col--l-7":"column-module-Col--l-7-Wyv6Z-5-0-0-9","Col--l-8":"column-module-Col--l-8-30knO-5-0-0-9","Col--l-9":"column-module-Col--l-9-H-ap--5-0-0-9","Col--l-10":"column-module-Col--l-10-wgJl4-5-0-0-9","Col--l-11":"column-module-Col--l-11-4dOz3-5-0-0-9","Col--l-12":"column-module-Col--l-12-xC5rs-5-0-0-9","Col--xl-auto":"column-module-Col--xl-auto-zH0n0-5-0-0-9","Col--xl-1":"column-module-Col--xl-1-ZCRQR-5-0-0-9","Col--xl-2":"column-module-Col--xl-2-5agyW-5-0-0-9","Col--xl-3":"column-module-Col--xl-3-e5vjv-5-0-0-9","Col--xl-4":"column-module-Col--xl-4--aAZH-5-0-0-9","Col--xl-5":"column-module-Col--xl-5-167j6-5-0-0-9","Col--xl-6":"column-module-Col--xl-6-wXLZ--5-0-0-9","Col--xl-7":"column-module-Col--xl-7-QA116-5-0-0-9","Col--xl-8":"column-module-Col--xl-8-Q22c5-5-0-0-9","Col--xl-9":"column-module-Col--xl-9-bJrrK-5-0-0-9","Col--xl-10":"column-module-Col--xl-10-IALsA-5-0-0-9","Col--xl-11":"column-module-Col--xl-11-vrchj-5-0-0-9","Col--xl-12":"column-module-Col--xl-12-6dUnj-5-0-0-9"};
styleInject(css_248z$11);

const Column = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    size,
    sizeXS,
    sizeS,
    sizeM,
    sizeL,
    sizeXL,
    className,
    children,
    ...rest
  } = props;
  const classes = classNames({
    [rowStyles['Col']]: true,
    [rowStyles[`Col--${size}`]]: size,
    [rowStyles[`Col--xs-${sizeXS}`]]: sizeXS,
    [rowStyles[`Col--s-${sizeS}`]]: sizeS,
    [rowStyles[`Col--m-${sizeM}`]]: sizeM,
    [rowStyles[`Col--l-${sizeL}`]]: sizeL,
    [rowStyles[`Col--xl-${sizeXL}`]]: sizeXL
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    ref: ref,
    "data-test": "DesignSystem-Column"
  }, rest, {
    className: classes
  }), children);
});
Column.displayName = 'Column';

const Trigger$1 = props => {
  const {
    inputFormat,
    inputOptions,
    validators,
    state,
    setState
  } = props;
  const {
    init,
    date: date$1,
    error
  } = state;
  const {
    placeholderChar = '_'
  } = inputOptions;
  const onPasteHandler = (_e, val) => {
    const {
      onPaste
    } = inputOptions;
    setState({
      open: true
    });
    if (val && !val.includes(placeholderChar)) {
      const d = translateToDate(inputFormat, val, validators);
      setState({
        date: d
      });
    }
    if (onPaste) onPaste(_e, val);
  };
  const onChangeHandler = (_e, val) => {
    const {
      onChange
    } = inputOptions;
    setState({
      open: true
    });
    if (val && !val.includes(placeholderChar)) {
      const d = translateToDate(inputFormat, val, validators);
      setState({
        date: d
      });
    }
    if (onChange) onChange(_e);
  };
  const onBlurHandler = (_e, val) => {
    const {
      onBlur
    } = inputOptions;
    setState({
      init: true
    });
    const hasNumber = /\d/;
    if (val && hasNumber.test(val) && val.includes(placeholderChar)) {
      setState({
        error: true
      });
    } else if (val && !hasNumber.test(val) || !val) {
      setState({
        error: false
      });
    }
    if (onBlur) onBlur(_e, val || '');
  };
  const onClearHandler = e => {
    const {
      onClear
    } = inputOptions;
    setState({
      init: true,
      date: undefined
    });
    if (onClear) onClear(e);
  };
  const showError = inputOptions.error || inputOptions.required && error && init;
  const errorMessage = inputOptions.caption === undefined ? 'Invalid value' : inputOptions.caption;
  const inputValidator = val => {
    return isValid(validators, val, inputFormat);
  };
  const mask = date[inputFormat];
  return /*#__PURE__*/React.createElement(X, _extends$2({
    icon: "events",
    placeholder: inputFormat
  }, inputOptions, {
    error: showError,
    mask: mask,
    value: date$1 ? translateToString(inputFormat, date$1) : init ? X.utils.getDefaultValue(mask, placeholderChar) : '',
    onChange: onChangeHandler,
    onPaste: onPasteHandler,
    onBlur: onBlurHandler,
    onClear: onClearHandler,
    caption: showError ? errorMessage : '',
    validators: [inputValidator],
    clearOnEmptyBlur: true,
    id: "parent-DatePicker"
  }));
};

class DatePicker extends React.Component {
  constructor(props) {
    super(props);
    _defineProperty$1(this, "getError", date => {
      const {
        disabledBefore,
        disabledAfter,
        outputFormat,
        onError
      } = this.props;
      if (!date) return false;
      const {
        year: dbYear,
        month: dbMonth,
        date: dbDate
      } = getDateInfo(disabledBefore);
      const {
        year: daYear,
        month: daMonth,
        date: daDate
      } = getDateInfo(disabledAfter);
      if (compareDate(date, 'less', dbYear, dbMonth, dbDate) || compareDate(date, 'more', daYear, daMonth, daDate)) {
        if (onError) {
          const dVal = translateToString(outputFormat, date);
          onError(date, dVal);
        }
        return true;
      }
      return false;
    });
    _defineProperty$1(this, "onDateChangeHandler", d => {
      this.setState({
        init: true,
        date: d
      });
      const {
        closeOnSelect
      } = this.props;
      if (closeOnSelect) this.setState({
        open: false
      });
    });
    _defineProperty$1(this, "onToggleHandler", (o, type) => {
      const {
        disabled
      } = this.props.inputOptions;
      if (disabled) return;
      switch (type) {
        case 'outsideClick':
          this.setState({
            open: o
          });
          break;
        case 'onClick':
          this.setState({
            open: true
          });
          break;
      }
    });
    const {
      inputFormat,
      validators
    } = props;
    const _date = convertToDate(props.date, inputFormat, validators);
    const error = this.getError(_date);
    this.state = {
      date: _date,
      error,
      init: false,
      open: props.open || false
    };
  }
  componentDidUpdate(prevProps, prevState) {
    if (prevProps.date !== this.props.date) {
      const {
        inputFormat,
        validators
      } = this.props;
      const d = convertToDate(this.props.date, inputFormat, validators);
      this.setState({
        date: d
      });
    }
    if (prevProps.open !== this.props.open) {
      this.setState({
        open: this.props.open || false
      });
    }
    if (prevState.date !== this.state.date) {
      const {
        onDateChange,
        outputFormat
      } = this.props;
      const {
        date
      } = this.state;
      const newError = this.getError(date);
      this.setState({
        error: newError
      });
      if (onDateChange) {
        if (!newError) {
          const dVal = translateToString(outputFormat, date);
          onDateChange(date, dVal);
        } else {
          onDateChange(undefined, '');
        }
      }
    }
  }
  renderCalendar() {
    const {
      date: dateProp,
      open,
      position,
      inputFormat,
      outputFormat,
      inputOptions,
      validators,
      withInput,
      disabledBefore,
      disabledAfter,
      onDateChange,
      closeOnSelect,
      size,
      showTodayDate = true,
      children = /*#__PURE__*/React.createElement(React.Fragment, null),
      view,
      ...rest
    } = this.props;
    const {
      date
    } = this.state;
    const {
      months
    } = config;
    const todayDate = new Date(Date.now());
    const todayMonthAndDate = `${months[todayDate.getMonth()]} ${todayDate.getDate()}`;
    const currDate = convertToDate(date, inputFormat, validators);
    const dateDisabledBefore = convertToDate(disabledBefore, inputFormat, validators);
    const dateDisabledAfter = convertToDate(disabledAfter, inputFormat, validators);
    const isSameDay = (date1, date2) => {
      return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();
    };
    const isTodayDisabled = () => {
      if (dateDisabledBefore && isSameDay(todayDate, dateDisabledBefore) || dateDisabledAfter && isSameDay(todayDate, dateDisabledAfter)) {
        return false;
      }
      const isTodayDateDisabled = dateDisabledBefore && todayDate < dateDisabledBefore || dateDisabledAfter && todayDate > dateDisabledAfter;
      return isTodayDateDisabled;
    };
    const todayChipClass = classNames({
      'd-flex justify-content-center': true,
      'pb-5': size === 'small',
      'pb-6': size === 'large',
      'pt-3': size === 'large' && view === 'year'
    });
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
      className: "d-flex"
    }, children, /*#__PURE__*/React.createElement(Calendar, _extends$2({}, rest, {
      size: size,
      date: currDate,
      view: view,
      disabledBefore: dateDisabledBefore,
      disabledAfter: dateDisabledAfter,
      onDateChange: this.onDateChangeHandler
    }))), showTodayDate && /*#__PURE__*/React.createElement("div", {
      className: todayChipClass,
      "data-test": "DesignSystem-Select--TodaysDate-wrapper"
    }, /*#__PURE__*/React.createElement(Chip, {
      label: `Today, ${todayMonthAndDate}`,
      name: "chip",
      type: "action",
      disabled: isTodayDisabled(),
      onClick: () => this.onDateChangeHandler(new Date())
    })));
  }
  render() {
    const {
      position,
      withInput,
      inputFormat,
      inputOptions,
      validators,
      popoverOptions
    } = this.props;
    const {
      open
    } = this.state;
    if (withInput) {
      return /*#__PURE__*/React.createElement(Popover, _extends$2({
        trigger: /*#__PURE__*/React.createElement(Trigger$1, {
          inputFormat: inputFormat,
          inputOptions: inputOptions,
          validators: validators,
          state: this.state,
          setState: this.setState.bind(this)
        })
      }, popoverOptions, {
        triggerClass: "w-100",
        position: position,
        appendToBody: true,
        open: open,
        onToggle: this.onToggleHandler
      }), this.renderCalendar());
    }
    return this.renderCalendar();
  }
}
_defineProperty$1(DatePicker, "defaultProps", {
  ...Calendar.defaultProps,
  position: 'bottom-start',
  inputFormat: 'mm/dd/yyyy',
  outputFormat: 'mm/dd/yyyy',
  validators: [date$1],
  inputOptions: {},
  closeOnSelect: true
});

const parseDate = date_time => {
  const d = new Date();
  d.setHours(date_time.substring(0, 2));
  d.setMinutes(date_time.substring(3, 5));
  return d;
};
const isFormat12Hour = format => {
  return format === '12-Hour';
};
const isTimeIn12HourFormat = time => {
  return _isTimeInAM(time) || _isTimeInPM(time);
};
const _isTimeInAM = time => {
  return time.includes('a') || time.includes('A');
};
const _isTimeInPM = time => {
  return time.includes('p') || time.includes('P');
};

/**
 * Convert time from 12 hour format to 24 hour format
 * @param timeStr in hh:mm [AM/PM] format
 * @returns time in HH:MM format
 */
const convert12To24HourFormat$1 = timeStr => {
  const [time, modifier] = timeStr.split(' ');
  const timeArr = time.split(':');
  let hours = timeArr[0];
  const minutes = timeArr[1];
  if (hours === '12' && _isTimeInAM(modifier)) {
    hours = '00';
  }
  if (_isTimeInPM(modifier) && hours !== '12') {
    hours = (parseInt(hours, 10) + 12).toString();
  }
  return `${hours}:${minutes}`;
};

/**
 * @param val
 * @returns insert 0 at start in case of single digit
 */
const convertToTwoDigit = val => {
  return ('0' + val).slice(-2);
};

/**
 * Convert time from 24 hour format to 12 hour format
 * @param timeStr in HH:MM format
 * @returns time in hh:mm [AM/PM] format
 */
const convert24To12HourFormat = timeStr => {
  const timeArr = timeStr.split(':');
  const hours = parseInt(timeArr[0], 10);
  const modifier = hours >= 12 ? 'PM' : 'AM';
  const convertedHours = hours % 12 || 12;
  let hoursInString = convertedHours.toString();
  hoursInString = convertToTwoDigit(hoursInString);
  const minutes = timeArr[1];
  const result = `${hoursInString.toString()}:${minutes} ${modifier}`;
  return result;
};
const getTimeIn24HrFormat = timeStr => {
  if (isTimeIn12HourFormat(timeStr)) {
    return convert12To24HourFormat$1(timeStr);
  }
  return timeStr;
};

/**
 * @param startTime in HH:MM format
 * @param endTime in HH:MM format
 * @returns returns true if start time is greater than end time
 */
const checkTimeDifference = (startTime, endTime) => {
  const parseStartTime = parseDate(startTime);
  const parseEndTime = parseDate(endTime);
  return parseStartTime > parseEndTime;
};

/**
 * @param startTime in HH:MM format
 * @param endTime in HH:MM format
 * @param interval
 * @returns array of 24 hour time list based on interval
 */
const get24HourTimeList = (startTime, endTime, interval) => {
  const timeList = [];
  const parseStartTime = parseDate(startTime);
  const parseEndTime = parseDate(endTime);
  while (parseStartTime <= parseEndTime) {
    timeList.push(parseStartTime.toTimeString().substring(0, 5));
    parseStartTime.setMinutes(parseStartTime.getMinutes() + interval);
  }
  return timeList;
};

/**
 * @param startTime in HH:MM format
 * @param interval
 * @returns time list in 24 hour format including times option for next day
 */
const getReverseTimeList = (startTime, endTime, interval) => {
  const timeList = get24HourTimeList('00:00', '23:59', interval);
  const startTimeIndex = timeList.indexOf(startTime);
  const endTimeIndex = timeList.indexOf(endTime);
  const nextDayTimeIndex = endTime === '' ? startTimeIndex : endTimeIndex + 1;
  const presentDayList = timeList.slice(startTimeIndex);
  const nextDayList = timeList.slice(0, nextDayTimeIndex);
  const result = presentDayList.concat(nextDayList);
  return result;
};
const getTimeListIn24HourFormat = (startTime, endTime, interval) => {
  if (endTime === '' || checkTimeDifference(startTime, endTime)) {
    return getReverseTimeList(startTime, endTime, interval);
  }
  return get24HourTimeList(startTime, endTime, interval);
};
const getTimeDifference = (startTime, endTime) => {
  const timeStart = new Date('07/07/2022 ' + startTime);
  const timeEnd = new Date('07/07/2022 ' + endTime);
  const diff = timeEnd.getTime() - timeStart.getTime();
  const diff_as_date = new Date(diff);
  const hour = diff_as_date.getUTCHours();
  const minute = diff_as_date.getUTCMinutes();
  return {
    hour,
    minute
  };
};
const getCustomLabel = (time, timeFormat, showDuration, referenceTime) => {
  let label = time;
  if (isFormat12Hour(timeFormat)) {
    label = convert24To12HourFormat(time);
  }
  if (showDuration && referenceTime) {
    const {
      hour,
      minute
    } = getTimeDifference(referenceTime, time);
    const timeDiffLabel = ` (${hour} hr ${minute} min)`;
    label += timeDiffLabel;
  }
  return label;
};
const isOptionDisabled = (time, timeFormat, disabledSlotList) => {
  let timeValue = time;
  if (isFormat12Hour(timeFormat)) {
    timeValue = convert24To12HourFormat(time);
  }
  if (disabledSlotList.includes(timeValue)) {
    return true;
  }
  return false;
};
const convertTimeToOptionList = (timeList, timeFormat, id = 'TimePicker-Option-key', showDuration, referenceTime, disabledSlotList) => {
  const optionList = timeList.map((time, index) => {
    return {
      label: getCustomLabel(time, timeFormat, showDuration, referenceTime),
      value: time,
      disabled: disabledSlotList && isOptionDisabled(time, timeFormat, disabledSlotList),
      selected: false,
      optionID: id + index
    };
  });
  return optionList;
};
const computeEndTime = startTime => {
  return startTime ? '' : '23:59';
};
const getDropdownOptionList = props => {
  const {
    startTime,
    endTime,
    interval,
    timeFormat,
    showDuration,
    disabledSlotList,
    id
  } = props;
  const startTimeIn24Hr = startTime ? getTimeIn24HrFormat(startTime) : '00:00';
  const endTimeIn24Hr = endTime ? getTimeIn24HrFormat(endTime) : computeEndTime(startTime);
  const timeList = getTimeListIn24HourFormat(startTimeIn24Hr, endTimeIn24Hr, interval);
  const dropdownOptionList = convertTimeToOptionList(timeList, timeFormat, id, showDuration, startTime, disabledSlotList);
  return dropdownOptionList;
};

const convertMinTo60 = time => {
  const parseNum = parseInt(time, 10);
  if (parseNum < 10) return time;
  const timeInNum = parseNum > 60 ? parseNum % 60 : parseNum;
  const min = (timeInNum.toString() + '0').slice(0, 2);
  return min;
};
const get24HourCurrentTime = () => {
  const today = new Date();
  return convertToTwoDigit(today.getHours()) + ':' + convertToTwoDigit(today.getMinutes());
};
const convertHourTo24 = time => {
  const timeInNum = parseInt(time, 10) % 24;
  return timeInNum.toString();
};
const convertHourTo12 = time => {
  const timeInNum = parseInt(time, 10) % 12;
  return timeInNum.toString();
};
const _checkNumber = str => {
  const numberRegex = /^[0-9]+$/;
  return numberRegex.test(str);
};
const _checkNumberWithAMPM = str => {
  const numberWithAMPMRegex = /^[0-9]+[ AaMmPp]+$/;
  return numberWithAMPMRegex.test(str);
};
const _checkNumberWithSpecialChar = str => {
  const numberWithSpecialCharRegex = /^[0-9]+[`\s!@#$%^&*()_+\-=[\]{};':"\\|,.<>/?~][0-9]*$/;
  return numberWithSpecialCharRegex.test(str);
};
const _checkNumberWithSpecialCharAMPM = str => {
  const numberWithSpecialCharAMPM = /^[0-9]+[`\s!@#$%^&*()_+\-=[\]{};':"\\|,.<>/?~][0-9]+[ AaMmPp]+$/;
  return numberWithSpecialCharAMPM.test(str);
};
const specialCharRegex = /[`\s!@#$%^&*()_+\-=[\]{};':"\\|,.<>/?~]/;

/**
 * @param searchTime in [number special-char number] format
 * @returns timeObj with hour & minute in 24 hour format
 */
const getTimeFromNumberWithSpecialChar = searchTime => {
  const time = searchTime.split(specialCharRegex);
  const hour = convertHourTo24(time[0]);
  const hh = convertToTwoDigit(hour);
  const min = time[1] !== '' ? convertMinTo60(time[1]) : '00';
  const mm = (min + '0').slice(0, 2);
  return {
    hour: hh,
    min: mm
  };
};

/**
 * If search term only contains number
 * @param searchTerm
 * @returns timeObj with hour & minute in 24 hour format
 */
const getSearchTimeFromNumber = (searchTerm, show12HourFormat) => {
  const searchLen = searchTerm.length;
  const searchTimeInNum = parseInt(searchTerm, 10);
  const firstTwoTerm = searchTerm.slice(0, 2);
  let hh = '00';
  let mm = '00';
  switch (searchLen) {
    case 1:
      // if search term length is 1 consider it as hour
      hh = '0' + searchTerm;
      break;
    case 2:
      // if search term length is 2
      if (searchTimeInNum <= 24 || show12HourFormat && searchTimeInNum <= 12) {
        // consider it as hour
        hh = convertToTwoDigit(searchTerm);
      } else {
        // consider first term as hour and last term as min
        hh = '0' + searchTerm[0];
        mm = convertMinTo60(searchTerm[1] + '0');
        // mm = searchTerm[1] + '0';
      }
      break;
    case 3:
      hh = '0' + searchTerm[0];
      mm = convertMinTo60(searchTerm.slice(1));
      break;
    case 4:
      hh = show12HourFormat ? convertHourTo12(firstTwoTerm) : convertHourTo24(firstTwoTerm);
      mm = convertMinTo60(searchTerm.slice(2));
      break;
    default:
      // set time as -1 in case of invalid time
      hh = '-1';
      mm = '-1';
  }
  return {
    hour: hh,
    min: mm
  };
};

/**
 * @param searchTime in [number AMPM] format
 * @returns timeObj with hour & minute in 24 hour format
 */
const getTimeFromNumberWithAMPM = searchTime => {
  const timeArr = searchTime.split(/[\saAmMpP]/);
  const {
    hour,
    min
  } = getSearchTimeFromNumber(timeArr[0], true);
  return {
    hour,
    min
  };
};

/**
 * @param searchTerm entered by user in any format
 * @returns modified search term in 24 hour format
 */
const formatSearchTerm = (optionList, searchTerm) => {
  let searchTime = {
    hour: '00',
    min: '00'
  };

  // If search term only contains numbers
  if (_checkNumber(searchTerm)) {
    const searchTimeInHHMM = getSearchTimeFromNumber(searchTerm);
    if (parseInt(searchTimeInHHMM.hour) <= 12 && parseInt(searchTimeInHHMM.hour) > 0) {
      // switch to AM/PM based on current time
      searchTime = getCurrentRelativeTime(optionList, searchTimeInHHMM);
    } else {
      searchTime = searchTimeInHHMM;
    }
  }

  // if search term contains numbers along with [ampm]
  else if (_checkNumberWithAMPM(searchTerm)) {
    searchTime = getTimeFromNumberWithAMPM(searchTerm);
    searchTime.hour = convert12To24HourFormat(searchTime.hour, searchTerm);
  }

  // if search term contains numbers along with special character
  else if (_checkNumberWithSpecialChar(searchTerm)) {
    const searchTimeInHHMM = getTimeFromNumberWithSpecialChar(searchTerm);
    if (parseInt(searchTimeInHHMM.hour) <= 12) {
      // switch to AM/PM based on current time
      searchTime = getCurrentRelativeTime(optionList, searchTimeInHHMM);
    } else {
      searchTime = searchTimeInHHMM;
    }
  }

  // if search term contains numbers, special character & [AmPm]
  else if (_checkNumberWithSpecialCharAMPM(searchTerm)) {
    const timeWithoutAMPM = searchTerm.replace(/[\saApPmM]/g, '');
    if (_checkNumber(timeWithoutAMPM)) {
      searchTime = getSearchTimeFromNumber(timeWithoutAMPM, true);
    } else if (_checkNumberWithSpecialChar(timeWithoutAMPM)) {
      searchTime = getTimeFromNumberWithSpecialChar(timeWithoutAMPM);
    }
    searchTime.hour = convert12To24HourFormat(searchTime.hour, searchTerm);
  }
  return searchTime;
};

/**
 * @param hours
 * @param searchTerm
 * @returns hours based on AM/PM in 24 hour format
 */
const convert12To24HourFormat = (hours, searchTerm) => {
  if (hours === '12' && _isTimeInAM(searchTerm)) {
    hours = '00';
  } else if (_isTimeInPM(searchTerm) && hours !== '12') {
    hours = (parseInt(hours, 10) + 12).toString();
  }
  return hours;
};

/**
 * Switch to AM/PM time based on current time
 * @param optionList
 * @param searchTime
 */
const getCurrentRelativeTime = (optionList, searchTime) => {
  const searchTimeStr = `${searchTime.hour}:${searchTime.min}`;
  const currentTime = get24HourCurrentTime();
  const greaterTime = checkTimeDifference(currentTime, searchTimeStr);
  const currentTimeIndex = findClosestTimeIndex(optionList, currentTime);
  const searchTimeIndex = findClosestTimeIndex(optionList, searchTimeStr);
  if (greaterTime && currentTimeIndex > searchTimeIndex) {
    const hourIn24Format = parseInt(searchTime.hour, 10) + 12;
    searchTime.hour = hourIn24Format.toString();
  }
  return searchTime;
};
const findClosestTimeIndex = (optionList, searchItem) => {
  let closestItemIndex = 0;
  const minTime = {
    hour: 100,
    mins: 100
  };
  for (let index = 0; index < optionList.length; index++) {
    const {
      hour,
      minute
    } = getTimeDifference(searchItem, optionList[index]);
    if (hour < minTime.hour || hour === minTime.hour && minute < minTime.mins) {
      minTime.hour = hour;
      minTime.mins = minute;
      closestItemIndex = index;
    }
  }
  return closestItemIndex;
};

/**
 * Get index of search term from option list
 * @param optionList
 * @param searchTerm
 * @returns Index of the search term in option list
 */
const getSearchIndex = (optionList, searchTerm) => {
  let {
    hour,
    min
  } = formatSearchTerm(optionList, searchTerm);
  if (min === '60') {
    min = '00';
    hour = (parseInt(hour, 10) + 1).toString();
  }
  const searchItem = `${hour}:${min}`;
  const searchIndex = findClosestTimeIndex(optionList, searchItem);
  return searchIndex;
};

/**
 * @param searchTerm
 * @returns count number of digits present inside search term
 */
const countNumberInStr = searchTerm => {
  return searchTerm.match(/\d/g)?.length || 0;
};
const isValidSearchTerm = searchTerm => {
  const totalDigit = countNumberInStr(searchTerm);
  return totalDigit > 0 && totalDigit < 5;
};
const getValueFromOptionList = optionList => {
  const list = optionList.map(option => option.value);
  return list;
};
const getSearchValueIndex = (options, searchTerm) => {
  // Search Term is valid if it contains number
  if (!isValidSearchTerm(searchTerm)) {
    return -1;
  }
  const searchIndex = getSearchIndex(options, searchTerm);
  return searchIndex;
};
const getScrollIndex = (dropdownOptionList, searchTerm) => {
  const optionList = getValueFromOptionList(dropdownOptionList);
  if (searchTerm === '') {
    // return current time index
    const currTime = get24HourCurrentTime();
    const currTimeIndex = findClosestTimeIndex(optionList, currTime);
    return currTimeIndex;
  }
  return getSearchValueIndex(optionList, searchTerm);
};

const getSearchedOptions = (options, searchTerm) => {
  const result = options.filter(option => option.label.toLowerCase().includes(searchTerm.toLowerCase()));
  return result;
};
const sortList = arr => {
  return arr.sort((a, b) => a.value > b.value ? 1 : b.value > a.value ? -1 : 0);
};
const _isEqual = (firstList, secondList) => {
  const firstSortedList = sortList([...firstList]);
  const secondSortedList = sortList([...secondList]);
  return firstSortedList.length === secondSortedList.length && firstSortedList.every((option, index) => option.value === secondSortedList[index].value);
};
const _isControlled = selected => selected !== undefined;
const _isOpenControlled = open => open !== undefined;
const _showSelectedItems = (bulk, searchTerm, withCheckbox) => bulk && withCheckbox && searchTerm === '';
const _isSelectAllPresent = (searchTerm, bulkOptions, withSelectAll, withCheckbox) => withCheckbox && withSelectAll && bulkOptions === 0 && searchTerm === '';
const scrollTo = (element, top) => {
  element.scrollTo(0, top);
};
const scrollIntoView = (menuElement, focusedElement) => {
  const menuRect = menuElement?.getBoundingClientRect();
  const focusedRect = focusedElement.getBoundingClientRect();
  const overscroll = focusedElement.offsetHeight;
  if (focusedRect.bottom > menuRect.bottom && menuElement) {
    scrollTo(menuElement, focusedElement.offsetTop - menuRect.height + overscroll);
  } else if (focusedRect.top < menuRect.top && menuElement) {
    scrollTo(menuElement, focusedElement.offsetTop - overscroll);
  }
};
const getSelectAll$1 = (selected, optionsLength, disabledOptionsLength) => {
  if (selected.length) {
    if (selected.length > 0 && disabledOptionsLength > 0 && selected.length === optionsLength - disabledOptionsLength) {
      return {
        indeterminate: true,
        checked: true
      }; //
    }
    const indeterminate = selected.length > 0 && selected.length !== optionsLength;
    const checked = selected.length > 0 && selected.length === optionsLength;
    const obj = {
      checked,
      indeterminate
    };
    return obj;
  }
  return {
    indeterminate: false,
    checked: false
  };
};
const scrollToOptionIndex = (scrollIndex, listOptions) => {
  const optionID = listOptions && listOptions[scrollIndex]?.optionID;
  const targetOption = document.getElementById(optionID);
  targetOption && targetOption.scrollIntoView && targetOption.scrollIntoView({
    block: 'center'
  });
};
const groupListOptions = listOptions => {
  const groupList = listOptions.reduce((acc, option) => {
    const group = option.group || '';
    if (!acc[group]) {
      acc[group] = [];
    }
    acc[group].push(option);
    return acc;
  }, {});
  const flattenedGroupList = Object.values(groupList).flatMap(item => [...item]);
  return flattenedGroupList;
};

const TimePickerWithSearch = props => {
  const {
    open,
    endTime,
    interval,
    onChange,
    startTime,
    timeFormat,
    showDuration,
    noResultMessage,
    disabledSlotList,
    fetchTimeOptions,
    error
  } = props;
  const [tabIndex, setTabIndex] = React.useState(0);
  const [openPopover, setOpenPopover] = React.useState(false);
  const [selectedIndex, setSelectedIndex] = React.useState(-1);
  const [counter, setCounter] = React.useState(0);
  const dropdownOptionList = getDropdownOptionList(props);
  React.useEffect(() => {
    open !== undefined && setOpenPopover(open);
  }, [open]);
  React.useEffect(() => {
    let timer;
    if (openPopover && selectedIndex != -1) {
      setTabIndex(selectedIndex);
      timer = setTimeout(() => {
        scrollToOptionIndex(selectedIndex, dropdownOptionList);
      }, 100);
    }
    return () => {
      clearTimeout(timer);
    };
  }, [openPopover]);

  // Required to re-render dropdown forcefully whenever props changes
  React.useEffect(() => {
    setCounter(counter + 1);
  }, [startTime, endTime, interval, showDuration, disabledSlotList]);
  const onChangeHandler = props => {
    let time = props;
    if (isFormat12Hour(timeFormat)) {
      time = convert24To12HourFormat(time);
    }
    const selectIndex = dropdownOptionList.findIndex(option => option.value === props);
    setSelectedIndex(selectIndex);
    onChange && onChange(time);
  };
  const getOptionList = searchTerm => {
    let scrollIndex;
    const indexValue = getScrollIndex(dropdownOptionList, searchTerm);
    if (searchTerm === '' && selectedIndex != -1) {
      scrollIndex = selectedIndex;
      setTabIndex(selectedIndex);
    } else {
      scrollIndex = indexValue;
      setTabIndex(indexValue);
    }
    return Promise.resolve({
      options: indexValue === -1 ? [] : dropdownOptionList,
      count: dropdownOptionList.length,
      scrollToIndex: scrollIndex === 0 ? scrollIndex + 1 : scrollIndex,
      searchTerm
    });
  };
  const fetchOptionList = () => {
    return fetchTimeOptions ? fetchTimeOptions : getOptionList;
  };
  return /*#__PURE__*/React.createElement(Dropdown, {
    key: counter,
    maxHeight: 160,
    loadersCount: 0,
    withSearch: true,
    open: openPopover,
    tabIndex: tabIndex,
    searchPlaceholder: "Search",
    onChange: onChangeHandler,
    fetchOptions: fetchOptionList(),
    noResultMessage: noResultMessage,
    staticLimit: dropdownOptionList.length,
    onPopperToggle: () => {
      setOpenPopover(!openPopover);
    },
    error: error
  });
};
TimePickerWithSearch.defaultProps = {
  timeFormat: '12-Hour',
  interval: 15
};
TimePickerWithSearch.displayName = 'TimePickerWithSearch';

const TimePickerWithInput = props => {
  const {
    validators,
    inputOptions,
    inputFormat,
    outputFormat,
    onTimeChange,
    time: timeProp,
    error
  } = props;
  const [time$1, setTime] = React.useState(timeProp);
  const [init, setInit] = React.useState(false);
  const {
    placeholderChar = '_'
  } = inputOptions;
  React.useEffect(() => {
    const timeStr = translateToTime(inputFormat, time$1);
    const updatedTime = timeProp === undefined && timeStr.includes(placeholderChar) ? time$1 : timeProp;
    setTime(updatedTime);
  }, [timeProp]);
  const onChangeHandler = (e, val = '') => {
    const updatedTime = val?.toUpperCase();
    setTime(updatedTime);
    if (inputOptions.onChange) {
      inputOptions.onChange(e, val);
    }
  };
  const onBlurHandler = (e, val = '') => {
    const updatedTime = translateToTime(inputFormat, time$1);
    setInit(true);
    if (onTimeChange) {
      const outputTimeStr = updatedTime && !isPlaceholderPresent(placeholderChar, updatedTime) ? getOutputTimeString(inputFormat, outputFormat, updatedTime) : undefined;
      onTimeChange(outputTimeStr);
    }
    if (inputOptions.onBlur) inputOptions.onBlur(e, val);
  };
  const onClearHandler = e => {
    const updatedTime = '';
    setInit(true);
    if (onTimeChange) onTimeChange(updatedTime);
    if (inputOptions.onClear) inputOptions.onClear(e);
  };
  const inputValidator = val => {
    return isValid(validators, val, inputFormat);
  };
  const mask = time[inputFormat];
  return /*#__PURE__*/React.createElement(X, _extends$2({
    placeholder: placeholders[inputFormat],
    placeholderChar: placeholderChar
  }, inputOptions, {
    mask: mask,
    value: time$1 ? translateToTime(inputFormat, time$1) : init ? X.utils.getDefaultValue(mask, placeholderChar) : '',
    validators: inputValidator,
    onChange: onChangeHandler,
    onClear: onClearHandler,
    onBlur: onBlurHandler,
    error: error,
    id: "parent-TimePicker"
  }));
};
TimePickerWithInput.defaultProps = {
  inputFormat: 'hh:mm AM',
  outputFormat: 'hh:mm AM',
  inputOptions: {},
  validators: [time$1]
};
TimePickerWithInput.displayName = 'TimePickerWithInput';

const TimePicker = props => {
  return props.withSearch ? /*#__PURE__*/React.createElement(TimePickerWithSearch, props) : /*#__PURE__*/React.createElement(TimePickerWithInput, props);
};
TimePicker.defaultProps = {
  ...TimePickerWithInput.defaultProps,
  ...TimePickerWithSearch.defaultProps
};
TimePicker.displayName = 'TimePicker';

/* eslint-disable no-undefined,no-param-reassign,no-shadow */

/**
 * Throttle execution of a function. Especially useful for rate limiting
 * execution of handlers on events like resize and scroll.
 *
 * @param  {number}    delay -          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.
 * @param  {boolean}   [noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds while the
 *                                    throttled-function is being called. If noTrailing is false or unspecified, callback will be executed one final time
 *                                    after the last throttled-function call. (After the throttled-function has not been called for `delay` milliseconds,
 *                                    the internal counter is reset).
 * @param  {Function}  callback -       A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,
 *                                    to `callback` when the throttled-function is executed.
 * @param  {boolean}   [debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is false (at end),
 *                                    schedule `callback` to execute after `delay` ms.
 *
 * @returns {Function}  A new, throttled, function.
 */
function throttle (delay, noTrailing, callback, debounceMode) {
  /*
   * After wrapper has stopped being called, this timeout ensures that
   * `callback` is executed at the proper times in `throttle` and `end`
   * debounce modes.
   */
  var timeoutID;
  var cancelled = false; // Keep track of the last time `callback` was executed.

  var lastExec = 0; // Function to clear existing timeout

  function clearExistingTimeout() {
    if (timeoutID) {
      clearTimeout(timeoutID);
    }
  } // Function to cancel next exec


  function cancel() {
    clearExistingTimeout();
    cancelled = true;
  } // `noTrailing` defaults to falsy.


  if (typeof noTrailing !== 'boolean') {
    debounceMode = callback;
    callback = noTrailing;
    noTrailing = undefined;
  }
  /*
   * The `wrapper` function encapsulates all of the throttling / debouncing
   * functionality and when executed will limit the rate at which `callback`
   * is executed.
   */


  function wrapper() {
    for (var _len = arguments.length, arguments_ = new Array(_len), _key = 0; _key < _len; _key++) {
      arguments_[_key] = arguments[_key];
    }

    var self = this;
    var elapsed = Date.now() - lastExec;

    if (cancelled) {
      return;
    } // Execute `callback` and update the `lastExec` timestamp.


    function exec() {
      lastExec = Date.now();
      callback.apply(self, arguments_);
    }
    /*
     * If `debounceMode` is true (at begin) this is used to clear the flag
     * to allow future `callback` executions.
     */


    function clear() {
      timeoutID = undefined;
    }

    if (debounceMode && !timeoutID) {
      /*
       * Since `wrapper` is being called for the first time and
       * `debounceMode` is true (at begin), execute `callback`.
       */
      exec();
    }

    clearExistingTimeout();

    if (debounceMode === undefined && elapsed > delay) {
      /*
       * In throttle mode, if `delay` time has been exceeded, execute
       * `callback`.
       */
      exec();
    } else if (noTrailing !== true) {
      /*
       * In trailing throttle mode, since `delay` time has not been
       * exceeded, schedule `callback` to execute `delay` ms after most
       * recent execution.
       *
       * If `debounceMode` is true (at begin), schedule `clear` to execute
       * after `delay` ms.
       *
       * If `debounceMode` is false (at end), schedule `callback` to
       * execute after `delay` ms.
       */
      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);
    }
  }

  wrapper.cancel = cancel; // Return the wrapper function.

  return wrapper;
}

/* eslint-disable no-undefined */
/**
 * Debounce execution of a function. Debouncing, unlike throttling,
 * guarantees that a function is only executed a single time, either at the
 * very beginning of a series of calls, or at the very end.
 *
 * @param  {number}   delay -         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.
 * @param  {boolean}  [atBegin] -     Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds
 *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.
 *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).
 * @param  {Function} callback -      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,
 *                                  to `callback` when the debounced-function is executed.
 *
 * @returns {Function} A new, debounced function.
 */

function debounce$1 (delay, atBegin, callback) {
  return callback === undefined ? throttle(delay, atBegin, false) : throttle(delay, callback, atBegin !== false);
}

var css_248z$10 = ".dropdownButton-module-DropdownButton-WEFAu-5-0-0-9 {\n  width: 100%;\n  justify-content: space-between;\n  padding-top: unset;\n  padding-bottom: unset;\n  background: var(--secondary-light);\n  color: var(--text);\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.dropdownButton-module-DropdownButton-wrapper--2rai-5-0-0-9 {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  overflow: hidden;\n  align-items: center;\n}\n\n.dropdownButton-module-DropdownButton-text-iFVYT-5-0-0-9 {\n  text-align: left;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.dropdownButton-module-DropdownButton--tiny-Itu7p-5-0-0-9 {\n  height: var(--spacing-60);\n  padding-right: var(--spacing-20);\n  padding-left: var(--spacing-20);\n}\n\n.dropdownButton-module-DropdownButton--regular--xsdh-5-0-0-9 {\n  height: var(--spacing-80);\n  padding-right: var(--spacing-20);\n  padding-left: var(--spacing-30);\n}\n\n.dropdownButton-module-DropdownButton--tinySquare-h9ZCv-5-0-0-9 {\n  padding-left: var(--spacing-10);\n  padding-right: var(--spacing-10);\n}\n\n.dropdownButton-module-DropdownButton--regularSquare-aHX5x-5-0-0-9 {\n  padding-left: var(--spacing-20);\n  padding-right: var(--spacing-20);\n}\n\n.dropdownButton-module-DropdownButton--placeholder-P-OZc-5-0-0-9 {\n  color: var(--text-subtle);\n}\n\n.dropdownButton-module-DropdownButton-WEFAu-5-0-0-9:hover {\n  background: var(--secondary);\n  color: var(--text);\n}\n\n.dropdownButton-module-DropdownButton-WEFAu-5-0-0-9:focus {\n  background-color: var(--secondary-light);\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n}\n\n.dropdownButton-module-DropdownButton-WEFAu-5-0-0-9:active,\n.dropdownButton-module-DropdownButton--open-FO2da-5-0-0-9 {\n  background-color: var(--secondary-dark) !important;\n  color: var(--text) !important;\n  animation-timing-function: cubic-bezier(0, 0, 0.38, 0.9);\n  animation-duration: 120ms;\n}\n\n.dropdownButton-module-DropdownButton-WEFAu-5-0-0-9:disabled {\n  background: var(--secondary-lighter);\n  color: var(--text-disabled);\n  pointer-events: none;\n}\n\n.dropdownButton-module-DropdownButton--icon-lOUG2-5-0-0-9 {\n  padding-left: var(--spacing-20);\n}\n\n.dropdownButton-module-DropdownButton--error-WBIV1-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--alert);\n}\n";
var dropdownButtonStyles = {"DropdownButton":"dropdownButton-module-DropdownButton-WEFAu-5-0-0-9","DropdownButton-wrapper":"dropdownButton-module-DropdownButton-wrapper--2rai-5-0-0-9","DropdownButton-text":"dropdownButton-module-DropdownButton-text-iFVYT-5-0-0-9","DropdownButton--tiny":"dropdownButton-module-DropdownButton--tiny-Itu7p-5-0-0-9","DropdownButton--regular":"dropdownButton-module-DropdownButton--regular--xsdh-5-0-0-9","DropdownButton--tinySquare":"dropdownButton-module-DropdownButton--tinySquare-h9ZCv-5-0-0-9","DropdownButton--regularSquare":"dropdownButton-module-DropdownButton--regularSquare-aHX5x-5-0-0-9","DropdownButton--placeholder":"dropdownButton-module-DropdownButton--placeholder-P-OZc-5-0-0-9","DropdownButton--open":"dropdownButton-module-DropdownButton--open-FO2da-5-0-0-9","DropdownButton--icon":"dropdownButton-module-DropdownButton--icon-lOUG2-5-0-0-9","DropdownButton--error":"dropdownButton-module-DropdownButton--error-WBIV1-5-0-0-9"};
styleInject(css_248z$10);

const DropdownButton = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    triggerSize = 'regular',
    placeholder = 'Select',
    menu = false,
    children,
    icon,
    disabled,
    open,
    inlineLabel,
    error,
    iconType,
    ...rest
  } = props;
  const buttonDisabled = disabled ? 'disabled' : 'default';
  const trimmedPlaceholder = placeholder.trim();
  const value = children ? children : trimmedPlaceholder;
  const iconName = !menu ? 'keyboard_arrow_down' : icon ? icon : 'more_horiz';
  const buttonClass = classNames({
    [buttonStyles['Button']]: true,
    [dropdownButtonStyles.DropdownButton]: true,
    [dropdownButtonStyles[`DropdownButton--${triggerSize}`]]: triggerSize,
    [dropdownButtonStyles[`DropdownButton--${triggerSize}Square`]]: menu,
    [dropdownButtonStyles['DropdownButton--placeholder']]: !children && !menu,
    [dropdownButtonStyles['DropdownButton--icon']]: icon,
    [dropdownButtonStyles['DropdownButton--open']]: open,
    [dropdownButtonStyles['DropdownButton--error']]: error
  });
  const textClass = classNames({
    [textStyles['Text']]: true,
    [textStyles['Text--regular']]: true,
    [dropdownButtonStyles['DropdownButton-text']]: true
  });
  return /*#__PURE__*/React.createElement("button", _extends$2({
    ref: ref,
    type: "button",
    value: children,
    className: buttonClass,
    disabled: disabled,
    tabIndex: 0,
    "data-test": "DesignSystem-DropdownTrigger"
  }, rest), !menu && /*#__PURE__*/React.createElement("div", {
    className: dropdownButtonStyles['DropdownButton-wrapper']
  }, inlineLabel && /*#__PURE__*/React.createElement(Text, {
    appearance: "subtle",
    className: "mr-4 white-space-nowrap"
  }, `${inlineLabel.trim().charAt(0).toUpperCase()}${inlineLabel.trim().slice(1)}`), icon && !inlineLabel && /*#__PURE__*/React.createElement(Icon, {
    appearance: buttonDisabled,
    className: "d-flex align-items-center mr-4",
    name: icon,
    type: iconType
  }), value && /*#__PURE__*/React.createElement("span", {
    className: textClass
  }, value)), /*#__PURE__*/React.createElement(Icon, {
    appearance: buttonDisabled,
    name: iconName,
    type: iconType
  }));
});
DropdownButton.displayName = 'DropdownButton';

const CheckboxOption = props => {
  const {
    className,
    selected,
    optionData,
    onChangeHandler,
    onUpdateActiveOption,
    dataTest,
    id = ''
  } = props;
  const {
    subInfo,
    label,
    disabled
  } = optionData;
  const checkboxClassName = classNames({
    [dropdownStyles['OptionCheckbox']]: true,
    ['pb-0']: subInfo
  });
  const renderSubInfo = subInfo => {
    const labelAppearance = disabled ? 'disabled' : 'subtle';
    const iconAppearance = selected ? 'white' : 'disabled';
    if (typeof subInfo === 'string') {
      return /*#__PURE__*/React.createElement(Text, {
        "data-test": "DesignSystem-DropdownOption--WITH_META--Meta",
        appearance: labelAppearance,
        size: "small",
        weight: "medium"
      }, subInfo);
    }
    const {
      list = [],
      seperator
    } = subInfo;
    return /*#__PURE__*/React.createElement(MetaList, {
      list: list,
      seperator: seperator,
      iconAppearance: iconAppearance,
      labelAppearance: labelAppearance,
      seperatorAppearance: iconAppearance,
      "data-test": "DesignSystem-DropdownOption--WITH_META--MetaList"
    });
  };
  return /*#__PURE__*/React.createElement("div", {
    className: className,
    onMouseEnter: onUpdateActiveOption,
    "data-test": dataTest,
    "data-disabled": disabled
  }, /*#__PURE__*/React.createElement(Checkbox, {
    label: label,
    disabled: disabled,
    checked: selected,
    onChange: onChangeHandler,
    tabIndex: -1,
    className: checkboxClassName,
    "data-test": `${dataTest}--Checkbox`,
    id: id
  }), subInfo && /*#__PURE__*/React.createElement("div", {
    className: "pl-8 ml-3"
  }, renderSubInfo(subInfo)));
};

const DefaultOption = props => {
  const {
    className,
    textClassName,
    onClickHandler,
    optionData,
    color,
    onUpdateActiveOption,
    dataTest
  } = props;
  const {
    label,
    disabled
  } = optionData;
  return (
    /*#__PURE__*/
    // TODO(a11y): fix accessibility
    /* eslint-disable */
    React.createElement("div", {
      className: className,
      onClick: onClickHandler,
      onMouseEnter: onUpdateActiveOption,
      "data-test": dataTest,
      "data-disabled": disabled
    }, /*#__PURE__*/React.createElement("div", {
      className: dropdownStyles['Option-label']
    }, /*#__PURE__*/React.createElement(Text, {
      className: textClassName,
      color: color,
      id: optionData.optionID
    }, label)))
  );
};

const MetaOption = props => {
  const {
    className,
    textClassName,
    onClickHandler,
    optionData,
    onUpdateActiveOption,
    renderSubInfo,
    color,
    dataTest
  } = props;
  const {
    subInfo,
    label,
    disabled
  } = optionData;
  return (
    /*#__PURE__*/
    // TODO(a11y): fix accessibility
    /* eslint-disable */
    React.createElement("div", {
      className: className,
      onClick: onClickHandler,
      onMouseEnter: onUpdateActiveOption,
      "data-test": dataTest,
      "data-disabled": disabled
    }, /*#__PURE__*/React.createElement("div", {
      className: dropdownStyles['Option-label']
    }, /*#__PURE__*/React.createElement(Text, {
      className: textClassName,
      color: color
    }, label), subInfo && renderSubInfo(subInfo)))
  );
};

const IconOption = props => {
  const {
    className,
    textClassName,
    onClickHandler,
    optionData,
    onUpdateActiveOption,
    color,
    dataTest
  } = props;
  const {
    label,
    icon,
    disabled,
    iconType
  } = optionData;
  const OptionClass = classNames({
    [`${className}`]: true,
    [dropdownStyles['Option--icon']]: icon
  });
  const IconClass = classNames({
    [dropdownStyles['Option-icon']]: true,
    ['mr-4']: true
  });
  return (
    /*#__PURE__*/
    // TODO(a11y): fix accessibility
    /* eslint-disable */
    React.createElement("div", {
      className: OptionClass,
      onClick: onClickHandler,
      onMouseEnter: onUpdateActiveOption,
      "data-test": dataTest,
      "data-disabled": disabled
    }, icon && /*#__PURE__*/React.createElement(Icon, {
      className: IconClass,
      "data-test": `${dataTest}--Icon`,
      name: icon,
      type: iconType
    }), /*#__PURE__*/React.createElement("div", {
      className: dropdownStyles['Option-label']
    }, /*#__PURE__*/React.createElement(Text, {
      className: textClassName,
      color: color
    }, label)))
  );
};

const IconWithMetaOption = props => {
  const {
    className,
    textClassName,
    renderSubInfo,
    onClickHandler,
    optionData,
    onUpdateActiveOption,
    appearance,
    color,
    dataTest
  } = props;
  const {
    subInfo,
    label,
    icon,
    disabled
  } = optionData;
  const OptionClass = classNames({
    [`${className}`]: true,
    [dropdownStyles['Option--icon']]: icon
  });
  const IconClass = classNames({
    [dropdownStyles['Option-icon']]: true,
    ['mr-4']: true
  });
  return (
    /*#__PURE__*/
    // TODO(a11y): fix accessibility
    /* eslint-disable */
    React.createElement("div", {
      className: OptionClass,
      onClick: onClickHandler,
      onMouseEnter: onUpdateActiveOption,
      "data-test": dataTest,
      "data-disabled": disabled
    }, icon && /*#__PURE__*/React.createElement(Icon, {
      "data-test": `${dataTest}--Icon`,
      className: IconClass,
      name: icon,
      appearance: appearance
    }), /*#__PURE__*/React.createElement("div", {
      className: dropdownStyles['Option-label']
    }, /*#__PURE__*/React.createElement(Text, {
      className: textClassName,
      color: color
    }, label), subInfo && renderSubInfo(subInfo)))
  );
};

const OptionTypeMapping = {
  ['DEFAULT']: DefaultOption,
  ['WITH_ICON']: IconOption,
  ['WITH_META']: MetaOption,
  ['WITH_CHECKBOX']: CheckboxOption,
  ['ICON_WITH_META']: IconWithMetaOption
};
const Option = props => {
  const {
    optionData,
    selected,
    onClick,
    updateActiveOption,
    onChange,
    active,
    index,
    checkboxes,
    menu,
    id = ''
  } = props;
  const {
    optionType = 'DEFAULT'
  } = optionData.optionType ? optionData : props;
  const {
    disabled
  } = optionData;
  const color = disabled ? 'inverse-lightest' : selected && !menu ? 'primary-dark' : 'inverse';
  const appearance = disabled ? 'disabled' : selected && !menu ? 'primary_dark' : 'default';
  const type = checkboxes ? 'WITH_CHECKBOX' : optionType;
  const component = OptionTypeMapping[type];
  const OptionClassName = classNames({
    [dropdownStyles['Option']]: true,
    [dropdownStyles['Option--active']]: active,
    [dropdownStyles['Option--selected']]: selected && !menu,
    [dropdownStyles['Option--disabled']]: disabled,
    ['OptionWrapper']: true,
    [`color-${color}`]: true
  });
  const CheckboxClassName = classNames({
    [dropdownStyles['Option-checkbox']]: true,
    [dropdownStyles['Option-checkbox--active']]: active,
    ['OptionWrapper']: true
  });
  const textClassName = classNames({
    [dropdownStyles['Option-text']]: true,
    [dropdownStyles['Option-text--wrap']]: !props.truncateOption
  });
  const customOptionClass = classNames({
    ['OptionWrapper']: true,
    [dropdownStyles['OptionWrapper--disabled']]: disabled
  });
  const onUpdateActiveOption = () => {
    if (disabled) return;
    if (updateActiveOption) updateActiveOption(index);
  };
  const onClickHandler = e => {
    e.stopPropagation();
    if (disabled) return;
    if (onClick) onClick();
  };
  const onChangeHandler = e => {
    e.stopPropagation();
    if (disabled) return;
    if (onChange) onChange(e);
  };
  if (props.optionRenderer) {
    return /*#__PURE__*/React.createElement("div", _extends$2({
      "data-test": "DesignSystem-DropdownOption--Custom",
      className: customOptionClass,
      "data-disabled": disabled,
      onMouseEnter: onUpdateActiveOption
    }, !checkboxes && {
      onClick
    }), props.optionRenderer({
      optionData,
      selected,
      onChange,
      active,
      index
    }));
  }
  const renderSubInfo = subInfo => {
    const labelAppearance = disabled ? 'disabled' : selected && !menu ? 'white' : 'subtle';
    const subInfoColor = disabled ? 'inverse-lightest' : selected && !menu ? 'primary-dark' : 'inverse-lighter';
    const iconAppearance = selected ? 'white' : 'disabled';
    if (typeof subInfo === 'string') {
      return /*#__PURE__*/React.createElement(Text, {
        "data-test": "DesignSystem-DropdownOption--WITH_META--Meta",
        color: subInfoColor,
        size: "small",
        weight: "medium",
        className: dropdownStyles['Option-subInfo']
      }, subInfo);
    }
    const {
      list = [],
      seperator
    } = subInfo;
    return /*#__PURE__*/React.createElement(MetaList, {
      list: list,
      seperator: seperator,
      iconAppearance: iconAppearance,
      labelAppearance: labelAppearance,
      seperatorAppearance: iconAppearance,
      "data-test": "DesignSystem-DropdownOption--WITH_META--MetaList"
    });
  };
  return component({
    selected,
    index,
    renderSubInfo,
    optionData,
    textClassName,
    appearance,
    color,
    onClickHandler,
    onChangeHandler,
    onUpdateActiveOption,
    dataTest: `DesignSystem-DropdownOption--${type}`,
    className: checkboxes ? CheckboxClassName : OptionClassName,
    id
  });
};

var css_248z$$ = "@keyframes placeholder-module-shimmer-Lxrg3-5-0-0-9 {\n  0% {\n    background-position: -500px 0;\n  }\n  100% {\n    background-position: 500px 0;\n  }\n}\n\n.placeholder-module-Placeholder--animation-aMGNi-5-0-0-9 {\n  border-radius: var(--border-radius-05);\n  animation-duration: 1.5s;\n  animation-fill-mode: forwards;\n  animation-iteration-count: infinite;\n  animation-name: placeholder-module-shimmer-Lxrg3-5-0-0-9;\n  animation-timing-function: linear;\n  background: var(--secondary-lightest);\n  background: linear-gradient(\n    to right,\n    var(--secondary-lighter) 8%,\n    var(--secondary-dark) 18%,\n    var(--secondary-lighter) 33%\n  );\n  background-size: 1000px 104px;\n}\n\n.placeholder-module-Placeholder-vJUgz-5-0-0-9 {\n  display: flex;\n  flex-grow: 1;\n  flex-shrink: 0;\n  align-items: center;\n}\n\n.placeholder-module-Placeholder--withImage-yTlyC-5-0-0-9 {\n  display: flex;\n  justify-content: flex-start;\n}\n\n.placeholder-module-Placeholder-paragraph-6zgwj-5-0-0-9 {\n  display: flex;\n  flex-direction: column;\n  flex: 1 0;\n}\n\n.placeholder-module-Placeholder-paragraph--withImage-6eoKu-5-0-0-9 {\n  margin-left: var(--spacing-20);\n}\n\n.placeholder-module-PlaceholderParagraph-02mKH-5-0-0-9 {\n  display: flex;\n  flex-grow: 1;\n  height: var(--font-size);\n}\n\n.placeholder-module-PlaceholderParagraph-wrapper-Sznyx-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  height: var(--font-height);\n}\n\n.placeholder-module-PlaceholderParagraph-wrapper--length-small-hR-g8-5-0-0-9 {\n  width: 33%;\n}\n\n.placeholder-module-PlaceholderParagraph-wrapper--length-medium-8Q4r0-5-0-0-9 {\n  width: 66%;\n}\n\n.placeholder-module-PlaceholderParagraph-wrapper--length-large-3ieIN-5-0-0-9 {\n  width: 100%;\n}\n\n.placeholder-module-PlaceholderParagraph-wrapper--size-xxs-VxxWI-5-0-0-9 {\n  height: var(--font-height-s);\n}\n\n.placeholder-module-PlaceholderParagraph-wrapper--size-xs-hXLBa-5-0-0-9 {\n  height: var(--font-height-m);\n}\n\n.placeholder-module-PlaceholderParagraph-wrapper--size-s-HnFD1-5-0-0-9 {\n  height: var(--font-height-s);\n}\n\n.placeholder-module-PlaceholderParagraph-wrapper--size-m-fbcAd-5-0-0-9 {\n  height: var(--font-height-m);\n}\n\n.placeholder-module-PlaceholderParagraph-wrapper--size-l-85-g4-5-0-0-9 {\n  height: var(--font-height-l);\n}\n\n.placeholder-module-PlaceholderParagraph-wrapper--size-xl-kd-HK-5-0-0-9 {\n  height: var(--font-height-xl);\n}\n\n.placeholder-module-PlaceholderParagraph-wrapper--size-xxl-wK2D7-5-0-0-9 {\n  height: var(--font-height-xxl);\n}\n\n.placeholder-module-PlaceholderParagraph-wrapper--size-xxxl-QwffS-5-0-0-9 {\n  height: var(--font-height-xxl);\n}\n\n.placeholder-module-PlaceholderParagraph--xxs-dJyU6-5-0-0-9 {\n  height: var(--font-size-s);\n}\n\n.placeholder-module-PlaceholderParagraph--xs-CZxRT-5-0-0-9 {\n  height: var(--font-size-s);\n}\n\n.placeholder-module-PlaceholderParagraph--s-1TOed-5-0-0-9 {\n  height: var(--font-size);\n}\n\n.placeholder-module-PlaceholderParagraph--m-umPOe-5-0-0-9 {\n  height: var(--font-size-m);\n}\n\n.placeholder-module-PlaceholderParagraph--l-5tvMH-5-0-0-9 {\n  height: var(--font-size-l);\n}\n\n.placeholder-module-PlaceholderParagraph--xl-M63Dg-5-0-0-9 {\n  height: var(--font-size-xl);\n}\n\n.placeholder-module-PlaceholderParagraph--xxl-yW2hv-5-0-0-9 {\n  height: var(--font-size-xxl);\n}\n\n.placeholder-module-PlaceholderParagraph--xxxl-hm8Ue-5-0-0-9 {\n  height: var(--font-size-xxxl);\n}\n\n.placeholder-module-PlaceholderImage-tEdXI-5-0-0-9 {\n  display: flex;\n  flex-shrink: 0;\n  width: 16px;\n  height: 16px;\n}\n\n.placeholder-module-PlaceholderImage--small-IZcYq-5-0-0-9 {\n  width: 16px;\n  height: 16px;\n}\n\n.placeholder-module-PlaceholderImage--medium-NA-GL-5-0-0-9 {\n  width: 32px;\n  height: 32px;\n}\n\n.placeholder-module-PlaceholderImage--large-z28GC-5-0-0-9 {\n  width: 48px;\n  height: 48px;\n}\n\n.placeholder-module-PlaceholderImage--round-IvhOF-5-0-0-9 {\n  border-radius: var(--border-radius-full);\n}\n";
var styles$Z = {"Placeholder--animation":"placeholder-module-Placeholder--animation-aMGNi-5-0-0-9","shimmer":"placeholder-module-shimmer-Lxrg3-5-0-0-9","Placeholder":"placeholder-module-Placeholder-vJUgz-5-0-0-9","Placeholder--withImage":"placeholder-module-Placeholder--withImage-yTlyC-5-0-0-9","Placeholder-paragraph":"placeholder-module-Placeholder-paragraph-6zgwj-5-0-0-9","Placeholder-paragraph--withImage":"placeholder-module-Placeholder-paragraph--withImage-6eoKu-5-0-0-9","PlaceholderParagraph":"placeholder-module-PlaceholderParagraph-02mKH-5-0-0-9","PlaceholderParagraph-wrapper":"placeholder-module-PlaceholderParagraph-wrapper-Sznyx-5-0-0-9","PlaceholderParagraph-wrapper--length-small":"placeholder-module-PlaceholderParagraph-wrapper--length-small-hR-g8-5-0-0-9","PlaceholderParagraph-wrapper--length-medium":"placeholder-module-PlaceholderParagraph-wrapper--length-medium-8Q4r0-5-0-0-9","PlaceholderParagraph-wrapper--length-large":"placeholder-module-PlaceholderParagraph-wrapper--length-large-3ieIN-5-0-0-9","PlaceholderParagraph-wrapper--size-xxs":"placeholder-module-PlaceholderParagraph-wrapper--size-xxs-VxxWI-5-0-0-9","PlaceholderParagraph-wrapper--size-xs":"placeholder-module-PlaceholderParagraph-wrapper--size-xs-hXLBa-5-0-0-9","PlaceholderParagraph-wrapper--size-s":"placeholder-module-PlaceholderParagraph-wrapper--size-s-HnFD1-5-0-0-9","PlaceholderParagraph-wrapper--size-m":"placeholder-module-PlaceholderParagraph-wrapper--size-m-fbcAd-5-0-0-9","PlaceholderParagraph-wrapper--size-l":"placeholder-module-PlaceholderParagraph-wrapper--size-l-85-g4-5-0-0-9","PlaceholderParagraph-wrapper--size-xl":"placeholder-module-PlaceholderParagraph-wrapper--size-xl-kd-HK-5-0-0-9","PlaceholderParagraph-wrapper--size-xxl":"placeholder-module-PlaceholderParagraph-wrapper--size-xxl-wK2D7-5-0-0-9","PlaceholderParagraph-wrapper--size-xxxl":"placeholder-module-PlaceholderParagraph-wrapper--size-xxxl-QwffS-5-0-0-9","PlaceholderParagraph--xxs":"placeholder-module-PlaceholderParagraph--xxs-dJyU6-5-0-0-9","PlaceholderParagraph--xs":"placeholder-module-PlaceholderParagraph--xs-CZxRT-5-0-0-9","PlaceholderParagraph--s":"placeholder-module-PlaceholderParagraph--s-1TOed-5-0-0-9","PlaceholderParagraph--m":"placeholder-module-PlaceholderParagraph--m-umPOe-5-0-0-9","PlaceholderParagraph--l":"placeholder-module-PlaceholderParagraph--l-5tvMH-5-0-0-9","PlaceholderParagraph--xl":"placeholder-module-PlaceholderParagraph--xl-M63Dg-5-0-0-9","PlaceholderParagraph--xxl":"placeholder-module-PlaceholderParagraph--xxl-yW2hv-5-0-0-9","PlaceholderParagraph--xxxl":"placeholder-module-PlaceholderParagraph--xxxl-hm8Ue-5-0-0-9","PlaceholderImage":"placeholder-module-PlaceholderImage-tEdXI-5-0-0-9","PlaceholderImage--small":"placeholder-module-PlaceholderImage--small-IZcYq-5-0-0-9","PlaceholderImage--medium":"placeholder-module-PlaceholderImage--medium-NA-GL-5-0-0-9","PlaceholderImage--large":"placeholder-module-PlaceholderImage--large-z28GC-5-0-0-9","PlaceholderImage--round":"placeholder-module-PlaceholderImage--round-IvhOF-5-0-0-9"};
styleInject(css_248z$$);

const PlaceholderParagraph = props => {
  const {
    length,
    size,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$Z['Placeholder--animation']]: true,
    [styles$Z.PlaceholderParagraph]: true,
    [styles$Z[`PlaceholderParagraph--${size}`]]: size
  });
  const wrapperClass = classNames({
    [styles$Z['PlaceholderParagraph-wrapper']]: true,
    [styles$Z[`PlaceholderParagraph-wrapper--length-${length}`]]: length,
    [styles$Z[`PlaceholderParagraph-wrapper--size-${size}`]]: size
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
    className: wrapperClass
  }), /*#__PURE__*/React.createElement("span", {
    className: classes
  }));
};
PlaceholderParagraph.displayName = 'PlaceholderParagraph';
PlaceholderParagraph.defaultProps = {
  length: 'medium'
};

const PlaceholderImage = props => {
  const {
    size = 'small',
    round,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$Z.PlaceholderImage]: true,
    [styles$Z['Placeholder--animation']]: true,
    [styles$Z['PlaceholderImage--round']]: round,
    [styles$Z[`PlaceholderImage--${size}`]]: size
  }, className);
  return /*#__PURE__*/React.createElement("span", _extends$2({}, baseProps, {
    className: classes
  }));
};
PlaceholderImage.displayName = 'PlaceholderImage';
PlaceholderImage.defaultProps = {
  size: 'small'
};

const Placeholder = props => {
  const {
    imageSize,
    withImage,
    round,
    children,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const paragraphClasses = classNames({
    [styles$Z['Placeholder-paragraph']]: true,
    [styles$Z['Placeholder-paragraph--withImage']]: withImage
  });
  const classes = classNames({
    [styles$Z['Placeholder']]: true
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Placeholder"
  }, baseProps, {
    className: classes
  }), withImage && /*#__PURE__*/React.createElement(PlaceholderImage, {
    round: round,
    size: imageSize,
    "data-test": "DesignSystem-Placeholder--Image"
  }), children && /*#__PURE__*/React.createElement("div", {
    className: paragraphClasses,
    "data-test": "DesignSystem-Placeholder--Paragraph"
  }, children));
};
Placeholder.displayName = 'Placeholder';
Placeholder.defaultProps = {
  withImage: true,
  imageSize: 'small'
};

const Loading = props => {
  const {
    loadingType,
    optionIndex
  } = props;
  const placeholderSizes = ['medium', 'large'];
  const size = placeholderSizes[(optionIndex + 2) % 2];
  switch (loadingType) {
    case 'DEFAULT':
      return /*#__PURE__*/React.createElement(PlaceholderParagraph, {
        length: size,
        "data-test": "DesignSystem-Dropdown--PlaceholderParagraph"
      });
    case 'WITH_ICON':
      return /*#__PURE__*/React.createElement(Placeholder, {
        withImage: true,
        round: true,
        "data-test": "DesignSystem-Dropdown--Placeholder"
      }, /*#__PURE__*/React.createElement(PlaceholderParagraph, {
        length: "large"
      }));
    case 'WITH_META':
      return /*#__PURE__*/React.createElement(Placeholder, {
        withImage: false,
        "data-test": "DesignSystem-Dropdown--Placeholder"
      }, /*#__PURE__*/React.createElement(PlaceholderParagraph, {
        length: "large",
        "data-test": "DesignSystem-Dropdown--PlaceholderParagraph"
      }), /*#__PURE__*/React.createElement(PlaceholderParagraph, {
        length: "medium",
        size: "xxs",
        "data-test": "DesignSystem-Dropdown--PlaceholderParagraph"
      }));
    case 'WITH_CHECKBOX':
      return /*#__PURE__*/React.createElement(Placeholder, {
        withImage: true,
        "data-test": "DesignSystem-Dropdown--Placeholder"
      }, /*#__PURE__*/React.createElement(PlaceholderParagraph, {
        length: "large"
      }));
    case 'ICON_WITH_META':
      return /*#__PURE__*/React.createElement(Placeholder, {
        withImage: true,
        round: true,
        imageSize: 'medium',
        "data-test": "DesignSystem-Dropdown--Placeholder"
      }, /*#__PURE__*/React.createElement(PlaceholderParagraph, {
        length: "large",
        "data-test": "DesignSystem-Dropdown--PlaceholderParagraph"
      }), /*#__PURE__*/React.createElement(PlaceholderParagraph, {
        length: "medium",
        size: "xxs",
        "data-test": "DesignSystem-Dropdown--PlaceholderParagraph"
      }));
  }
  return null;
};

const errorTitle = {
  FAILED_TO_FETCH: 'Failed to fetch data',
  NO_RECORDS_FOUND: 'No results found',
  DEFAULT: 'No record available'
};
const errorDescription = {
  FAILED_TO_FETCH: "We couldn't load the data, try reloading.",
  NO_RECORDS_FOUND: 'Try modifying your search to find what you are looking for.',
  DEFAULT: 'We have nothing to show you at the moment.'
};
const ErrorTemplate = ({
  dropdownStyle,
  errorType,
  updateOptions
}) => {
  const classes = classNames({
    [dropdownStyles['Dropdown-wrapper']]: true,
    'px-7': true,
    'd-flex': true
  });
  return /*#__PURE__*/React.createElement("div", {
    className: classes,
    style: dropdownStyle,
    "data-test": "DesignSystem-Dropdown--wrapper"
  }, /*#__PURE__*/React.createElement("div", {
    className: "d-flex flex-column justify-content-center align-items-center w-100",
    "data-test": "DesignSystem-Dropdown--errorWrapper"
  }, /*#__PURE__*/React.createElement(Text, {
    className: "text-align-center mb-3",
    weight: "strong"
  }, errorTitle[errorType]), /*#__PURE__*/React.createElement(Text, {
    className: "text-align-center mb-6",
    weight: "medium",
    size: "small",
    appearance: "subtle"
  }, errorDescription[errorType]), errorType === 'FAILED_TO_FETCH' && /*#__PURE__*/React.createElement(Button, {
    size: "tiny",
    largeIcon: true,
    "aria-label": "reload",
    icon: "refresh",
    iconAlign: "left",
    onClick: () => updateOptions()
  }, "Reload")));
};

const alignmentMapping = {
  right: 'bottom-start',
  left: 'bottom-end'
};
const DropdownList = props => {
  const {
    listOptions = [],
    inputRef,
    align = 'right',
    optionType = 'DEFAULT',
    applyButtonLabel = 'Apply',
    cancelButtonLabel = 'Cancel',
    truncateOption = true,
    withSelectAll = true,
    maxHeight = 200,
    customTrigger,
    selected,
    tempSelected,
    previousSelected,
    remainingOptions,
    firstEnabledOption,
    dropdownOpen,
    menu,
    searchTerm,
    showApplyButton,
    withCheckbox,
    withSearch,
    popoverOptions,
    onSearchChange,
    optionRenderer,
    applyOptions,
    cancelOptions,
    toggleDropdown,
    className,
    searchPlaceholder = 'Search..',
    scrollIndex,
    updateOptions,
    noResultMessage,
    errorType,
    loadingOptions
  } = props;
  const baseProps = extractBaseProps(props);
  const dropdownRef = /*#__PURE__*/React.createRef();
  const triggerRef = /*#__PURE__*/React.createRef();
  const dropdownTriggerRef = /*#__PURE__*/React.createRef();
  const dropdownCancelButtonRef = /*#__PURE__*/React.createRef();
  const dropdownApplyButtonRef = /*#__PURE__*/React.createRef();
  const [popoverStyle, setPopoverStyle] = React.useState();
  const [cursor, setCursor] = React.useState(firstEnabledOption);
  const [minHeight, setMinHeight] = React.useState();
  const getMinHeight = () => {
    if (dropdownRef.current) {
      const minHeight = dropdownRef.current?.offsetHeight;
      minHeight && setMinHeight(minHeight);
    }
  };
  const isDropdownListBlank = listOptions.length === 0 && !loadingOptions && selected.length <= 0;
  React.useEffect(() => {
    let timer;
    if (dropdownOpen) {
      const {
        width,
        minWidth,
        maxWidth
      } = props;
      const popperWidth = triggerRef.current?.clientWidth;
      const popperMinWidth = showApplyButton ? 176 : menu ? 128 : popperWidth;
      const popperWrapperStyle = {
        width: width ? width : popperWidth,
        minWidth: minWidth ? minWidth : popperMinWidth,
        maxWidth: maxWidth ? maxWidth : '100%'
      };
      requestAnimationFrame(getMinHeight);
      setPopoverStyle(popperWrapperStyle);

      // scrolls to current time
      if (scrollIndex && tempSelected.length === 0) {
        timer = setTimeout(() => {
          scrollToOptionIndex(scrollIndex, listOptions);
        }, 100);
      }
    }
    return () => {
      clearTimeout(timer);
    };
  }, [dropdownOpen]);
  React.useEffect(() => {
    if (firstEnabledOption !== cursor) setCursor(firstEnabledOption);
  }, [firstEnabledOption]);
  const {
    triggerSize = 'regular',
    placeholder = 'Select',
    icon,
    error,
    disabled,
    inlineLabel,
    triggerLabel,
    iconType
  } = props;
  const CustomTrigger = customTrigger ? customTrigger(triggerLabel ? triggerLabel : placeholder) : /*#__PURE__*/React.createElement(React.Fragment, null);
  const NewCustomTrigger = /*#__PURE__*/React.cloneElement(CustomTrigger, {
    tabIndex: 0,
    ref: dropdownTriggerRef
  });
  const trigger = customTrigger ? NewCustomTrigger : /*#__PURE__*/React.createElement(DropdownButton, {
    placeholder: placeholder,
    triggerSize: triggerSize,
    open: dropdownOpen,
    icon: icon,
    disabled: disabled,
    inlineLabel: inlineLabel,
    menu: menu,
    error: error,
    ref: dropdownTriggerRef,
    iconType: iconType
  }, triggerLabel);
  const dropdownStyle = {
    maxHeight,
    overflowY: 'auto',
    overflowX: 'hidden',
    minHeight: minHeight
  };
  const loaderStyle = {
    maxHeight: minHeight ? minHeight : maxHeight,
    overflowY: 'auto',
    overflowX: 'hidden',
    minHeight: minHeight
  };
  const defaultErrorTemplate = () => {
    return /*#__PURE__*/React.createElement(ErrorTemplate, {
      dropdownStyle: {
        ...dropdownStyle,
        minHeight: maxHeight
      },
      updateOptions: updateOptions,
      errorType: errorType
    });
  };
  const getDropdownSectionClass = showClearButton => {
    return classNames({
      [dropdownStyles['Dropdown-section']]: true,
      [dropdownStyles['Dropdown-section--withClear']]: showClearButton
    });
  };
  const dropdownClass = classNames({
    [dropdownStyles['Dropdown']]: true
  }, className);
  const dropdownWrapperClass = classNames({
    [dropdownStyles['Dropdown-wrapper']]: true,
    [dropdownStyles['Dropdown-wrapper--wrap']]: !truncateOption
  });
  const SelectAllClass = classNames({
    [dropdownStyles['Option-checkbox--active']]: cursor === 0,
    [dropdownStyles['Option-checkboxWrapper']]: true,
    [dropdownStyles['Option-checkbox']]: true,
    ['OptionWrapper']: true
  });
  const onToggleDropdown = (open, type) => {
    toggleDropdown(open, type);
    if (!disabled) dropdownTriggerRef.current?.focus();
    setCursor(firstEnabledOption);
  };
  const onCancelOptions = () => {
    cancelOptions();
    dropdownTriggerRef.current?.focus();
  };
  const onApplyOptions = () => {
    applyOptions();
    dropdownTriggerRef.current?.focus();
  };
  const optionClickHandler = item => {
    props.onOptionSelect(item);
    dropdownTriggerRef.current?.focus();
  };
  const searchClearHandler = () => {
    setCursor(firstEnabledOption);
    if (onSearchChange && searchTerm) onSearchChange('');
  };
  const searchHandler = event => {
    setCursor(firstEnabledOption);
    if (onSearchChange) onSearchChange(event.target.value);
  };
  const updateActiveOption = (index, parentCheckbox) => {
    const updatedIndex = withCheckbox && withSelectAll && !props.async && !parentCheckbox ? index + 1 : index;
    setCursor(updatedIndex);
  };
  const renderFooter = () => {
    const {
      footerLabel = 'Search for more options'
    } = props;
    return /*#__PURE__*/React.createElement("div", {
      className: dropdownStyles['Dropdown-footer']
    }, /*#__PURE__*/React.createElement(Text, {
      size: "small",
      appearance: 'subtle'
    }, footerLabel));
  };
  const renderGroups = (group, selectedGroup) => {
    const {
      onClearOptions
    } = props;
    const isClearDisabled = selected.every(option => option.disabled);
    return /*#__PURE__*/React.createElement("div", {
      className: getDropdownSectionClass(selectedGroup)
    }, /*#__PURE__*/React.createElement(Text, {
      size: "small",
      appearance: 'subtle'
    }, group), selectedGroup && /*#__PURE__*/React.createElement(Button, {
      onClick: onClearOptions,
      disabled: isClearDisabled,
      appearance: "transparent",
      size: "tiny",
      type: "button"
    }, "Clear"));
  };
  const renderApplyButton = () => {
    const disable = _isEqual(previousSelected, tempSelected) || props.loadingOptions;
    return /*#__PURE__*/React.createElement("div", {
      className: dropdownStyles['Dropdown-buttonWrapper']
    }, /*#__PURE__*/React.createElement(Button, {
      ref: dropdownCancelButtonRef,
      className: "mr-4",
      appearance: 'basic',
      onClick: onCancelOptions,
      disabled: props.loadingOptions,
      size: 'tiny',
      tabIndex: -1,
      "data-test": "DesignSystem-Dropdown-CancelButton",
      type: "button"
    }, cancelButtonLabel), /*#__PURE__*/React.createElement(Button, {
      ref: dropdownApplyButtonRef,
      appearance: 'primary',
      disabled: disable,
      size: 'tiny',
      onClick: onApplyOptions,
      "data-test": "DesignSystem-Dropdown-ApplyButton",
      type: "button"
    }, applyButtonLabel));
  };
  const renderSearch = () => {
    return /*#__PURE__*/React.createElement("div", {
      className: dropdownStyles['Dropdown-inputWrapper']
    }, /*#__PURE__*/React.createElement(Input, {
      name: "Dropdown-search",
      icon: 'search',
      value: searchTerm,
      placeholder: searchPlaceholder
      // TODO(a11y): research more on this.
      // eslint-disable-next-line jsx-a11y/no-autofocus
      ,
      autoFocus: true,
      onChange: searchHandler,
      onClear: searchClearHandler,
      ref: inputRef,
      autoComplete: 'off',
      className: dropdownStyles['Dropdown-input']
    }));
  };
  const renderLoading = loadersLength => {
    const arr = Array(loadersLength).fill('Loading');
    const type = withCheckbox ? 'WITH_CHECKBOX' : optionType;
    return arr.map((option, ind) => {
      return /*#__PURE__*/React.createElement("div", {
        className: dropdownStyles['Option-loading'],
        key: `${option}-${ind}`
      }, /*#__PURE__*/React.createElement(Loading, {
        loadingType: type,
        optionIndex: ind
      }));
    });
  };
  const renderSelectAll = () => {
    const {
      selectAllLabel = 'Select All',
      selectAll,
      onSelectAll
    } = props;
    const label = selectAllLabel.trim() ? selectAllLabel.trim() : 'Select All';
    const id = `Checkbox-option-${label.toLowerCase().replace(/\s+/g, '')}-${new Date().getTime()}`;
    return /*#__PURE__*/React.createElement("div", {
      className: SelectAllClass,
      onMouseEnter: () => updateActiveOption(0, true)
    }, /*#__PURE__*/React.createElement("label", {
      htmlFor: id,
      className: dropdownStyles['Checkbox-label']
    }, /*#__PURE__*/React.createElement(Checkbox, {
      label: label,
      onChange: onSelectAll,
      checked: selectAll.checked,
      indeterminate: selectAll.indeterminate,
      tabIndex: -1,
      className: dropdownStyles['OptionCheckbox'],
      id: id
    })));
  };
  const renderOptions = (item, index) => {
    // const selectAllPresent = withCheckbox
    //   && remainingOptions === 0
    //   && searchTerm === ''
    //   && withSelectAll;

    const selectAllPresent = _isSelectAllPresent(searchTerm, remainingOptions, withSelectAll, withCheckbox);
    const active = selectAllPresent ? index + 1 === cursor : index === cursor;
    const optionIsSelected = tempSelected.findIndex(option => option.value === item.value) !== -1;
    const id = `Checkbox-option-${index}-${item.value}-${new Date().getTime()}`;
    return /*#__PURE__*/React.createElement("label", {
      htmlFor: id,
      key: index
    }, /*#__PURE__*/React.createElement(Option, {
      optionData: item,
      truncateOption: truncateOption,
      selected: optionIsSelected,
      index: index,
      updateActiveOption: updateActiveOption,
      optionRenderer: optionRenderer,
      active: active,
      checkboxes: withCheckbox,
      menu: menu,
      onClick: () => optionClickHandler(item),
      onChange: e => props.onSelect(item, e.target.checked),
      optionType: props.optionType,
      id: id
    }));
  };
  const renderDropdownSection = () => {
    const {
      selectedSectionLabel = 'Selected Items',
      allItemsSectionLabel = 'All Items',
      loadersCount = 10,
      errorTemplate = defaultErrorTemplate
    } = props;
    const selectAllPresent = _isSelectAllPresent(searchTerm, remainingOptions, withSelectAll, withCheckbox);
    const groupedListOptions = groupListOptions(listOptions);
    const emptyMessageClass = classNames({
      [dropdownStyles['Dropdown-wrapper']]: true,
      'w-100': true
    });
    if (loadersCount && loadingOptions) {
      return /*#__PURE__*/React.createElement("div", {
        className: dropdownStyles['Dropdown-loading']
      }, /*#__PURE__*/React.createElement("div", {
        className: dropdownStyles['Dropdown-wrapper'],
        style: loaderStyle
      }, renderLoading(loadersCount)));
    }
    if (isDropdownListBlank) {
      if (noResultMessage) {
        return /*#__PURE__*/React.createElement("div", {
          className: emptyMessageClass,
          style: dropdownStyle,
          "data-test": "DesignSystem-Dropdown--errorWrapper"
        }, /*#__PURE__*/React.createElement("div", {
          className: dropdownStyles['Option']
        }, /*#__PURE__*/React.createElement("div", {
          className: dropdownStyles['Option-subinfo']
        }, noResultMessage)));
      } else {
        return errorTemplate && errorTemplate({
          errorType
        });
      }
    }
    return /*#__PURE__*/React.createElement("div", {
      className: dropdownWrapperClass,
      style: dropdownStyle,
      ref: dropdownRef
    }, selectAllPresent && renderSelectAll(), selected.length > 0 && renderGroups(selectedSectionLabel, true), selected.map((option, index) => renderOptions(option, index)), selected.length > 0 && listOptions.length - selected.length > 0 && !listOptions[0].group?.trim() &&
    // allItemsSectionLabel is displayed only when there are no groups
    renderGroups(allItemsSectionLabel), groupedListOptions.map((option, index) => {
      const prevGroup = index > 0 ? groupedListOptions[index - 1].group : selected.length ? selectedSectionLabel : undefined;
      const currentGroup = option.group;
      const isGroupDifferent = prevGroup !== currentGroup;
      const updatedIndex = index + selected.length;
      return /*#__PURE__*/React.createElement("div", {
        className: dropdownStyles['Option-checkboxWrapper'],
        key: index
      }, isGroupDifferent && currentGroup && renderGroups(currentGroup), renderOptions(option, updatedIndex));
    }), props.async && remainingOptions > 0 && renderFooter());
  };
  const focusOption = (direction, classes) => {
    const elements = document.querySelectorAll(classes);
    const updatedCursor = direction === 'down' ? cursor + 1 : cursor - 1;
    let startIndex = updatedCursor;
    const endIndex = direction === 'down' ? elements.length : -1;
    while (startIndex !== endIndex) {
      const node = elements[startIndex];
      if (node.getAttribute('data-disabled') !== 'true') {
        const element = elements[startIndex];
        if (element) scrollIntoView(dropdownRef.current, element);
        if (element !== undefined) setCursor(startIndex);
        break;
      }
      if (direction === 'down') {
        startIndex++;
      } else {
        startIndex--;
      }
    }
  };
  const onkeydown = event => {
    const optionClass = '.OptionWrapper';
    switch (event.key) {
      case 'ArrowDown':
        event.preventDefault();
        dropdownOpen ? focusOption('down', optionClass) : onToggleDropdown(!dropdownOpen);
        break;
      case 'ArrowUp':
        event.preventDefault();
        dropdownOpen ? focusOption('up', optionClass) : onToggleDropdown(!dropdownOpen);
        break;
      case 'Enter':
        {
          const activeElement = document.activeElement;
          if (dropdownOpen && (inputRef.current === activeElement || dropdownTriggerRef.current === activeElement)) {
            event.preventDefault();
            const classes = withCheckbox ? `${optionClass} .${checkboxStyles['Checkbox-input']}` : optionClass;
            const elements = document.querySelectorAll(classes);
            const element = elements[cursor];
            if (element) element.click();
          }
          if (!dropdownOpen) onToggleDropdown(!dropdownOpen);
          break;
        }
      case 'Tab':
        {
          if (!showApplyButton && dropdownOpen) {
            event.preventDefault();
            onToggleDropdown(false, 'onClick');
            return;
          }
          const currentElement = document.activeElement;
          const disabledApplyButton = dropdownApplyButtonRef.current?.disabled;
          if ((currentElement === dropdownCancelButtonRef.current && disabledApplyButton || currentElement === dropdownApplyButtonRef.current) && dropdownOpen) {
            event.preventDefault();
            onToggleDropdown(false, 'onClick');
            return;
          }
          if (showApplyButton && dropdownOpen) {
            event.preventDefault();
            if (currentElement === dropdownCancelButtonRef.current) {
              dropdownApplyButtonRef.current?.focus();
            } else {
              dropdownCancelButtonRef.current?.focus();
            }
          }
          break;
        }
    }
  };
  const enableSearch = withSearch || props.async;
  return (
    /*#__PURE__*/
    //TODO(a11y)
    //eslint-disable-next-line
    React.createElement("div", _extends$2({}, baseProps, {
      className: dropdownClass,
      ref: triggerRef,
      onKeyDown: onkeydown
    }), /*#__PURE__*/React.createElement(Popover, _extends$2({
      onToggle: onToggleDropdown,
      trigger: trigger,
      triggerClass: !menu ? 'w-100' : '',
      open: dropdownOpen,
      customStyle: popoverStyle,
      position: alignmentMapping[align]
    }, popoverOptions, {
      "data-test": "DesignSystem-Dropdown--Popover"
    }), enableSearch && renderSearch(), renderDropdownSection(), showApplyButton && withCheckbox && renderApplyButton()))
  );
};
DropdownList.displayName = 'DropdownList';

const inputRef = /*#__PURE__*/React.createRef();
/**
 *
 * Dropdown component has been deprecated, please use following components instead:
 *
 * - [Select](https://mds.innovaccer.com/?path=/docs/components-select-all--all)
 * - [Menu](https://mds.innovaccer.com/?path=/docs/components-menu-all--all)
 * - [Combobox](https://mds.innovaccer.com/?path=/docs/components-combobox-all--all)
 *
 * ###Note:
 * 1. Dropdown props types:
 *  - async: fetchOptions
 *  - sync: options, loading
 * 2. Sync Dropdown:
 *  - Manually toggle loading state to update options (Options <= staticLimit).
 * 3. Callback Functions
 *  - Controlled Dropdown:
 *    * onUpdate: Called when user `clicks on option` / `clicks on Clear, Cancel or Apply button`.
 *    * onChange: Called when selected options are updated.
 *  - Uncontrolled Dropdown:
 *    * onChange: Called when user `clicks on option` / `clicks on Clear, or Apply button`.
 * 4. Default errorTemplate:
 *
 *  <pre class="DocPage-codeBlock mx-6 mb-7">
 * (props) => {
 *      const { errorType = 'DEFAULT' } = props;
 *      const errorMessages = {
 *        'FAILED\_TO\_FETCH': 'Failed to fetch data',
 *        'NO\_RECORDS\_FOUND': 'No results found',
 *        'DEFAULT': 'No record available'
 *      }
 *      return(
 *        \<Heading>{errorMessages[errorType]}\</Heading>
 *      );
 * }
 * </pre>
 */
class Dropdown extends React.Component {
  constructor(props) {
    super(props);
    _defineProperty$1(this, "staticLimit", void 0);
    _defineProperty$1(this, "getDisabledOptions", (options = []) => {
      return options.filter(option => option.disabled);
    });
    _defineProperty$1(this, "fetchOptionsFunction", searchTerm => {
      const {
        options
      } = this.props;
      const filteredOptions = searchTerm ? getSearchedOptions(options, searchTerm) : options;
      return new Promise(resolve => {
        resolve({
          searchTerm,
          options: filteredOptions,
          count: filteredOptions.length
        });
      });
    });
    _defineProperty$1(this, "getUnSelectedOptions", (options, init) => {
      if (options.length) {
        if (!init) {
          return options.filter(option => this.state.tempSelected.findIndex(item => item.value === option.value) === -1);
        }
        const {
          selected = []
        } = this.props;
        const unSelectedGroup = options.filter(option => _isControlled(this.props.selected) ? selected.findIndex(item => item.value === option.value) === -1 : !option.selected);
        return unSelectedGroup;
      }
      return options;
    });
    _defineProperty$1(this, "getSelectedOptions", (options, init) => {
      const {
        selected = []
      } = this.props;
      if (options.length) {
        if (!init) return this.state.tempSelected;
        const selectedGroup = _isControlled(this.props.selected) ? selected : options.filter(option => option.selected);
        return selectedGroup;
      }
      return [];
    });
    _defineProperty$1(this, "updateOptions", (init, async) => {
      const {
        searchTerm,
        selectAll,
        tempSelected,
        previousSelected,
        errorType
      } = this.state;
      let updatedAsync = async === undefined ? this.state.async : async;
      const {
        fetchOptions,
        withCheckbox,
        withSearch
      } = this.props;
      const fetchFunction = fetchOptions ? fetchOptions : this.fetchOptionsFunction;
      fetchFunction(searchTerm).then(res => {
        const {
          options,
          count
        } = res;
        if (res.scrollToIndex) {
          setTimeout(() => {
            scrollToOptionIndex(res.scrollToIndex, options);
          }, 0);
        }
        if (!res.searchTerm || res.searchTerm && res.searchTerm === this.state.searchTerm) {
          updatedAsync = searchTerm === '' ? count > this.staticLimit : updatedAsync;
          const unSelectedGroup = _showSelectedItems(updatedAsync, searchTerm, withCheckbox) ? this.getUnSelectedOptions(options, init) : options;
          const selectedGroup = searchTerm === '' ? this.getSelectedOptions(options, init) : [];
          const optionsLength = searchTerm === '' ? count : this.state.optionsLength;
          const disabledOptions = this.getDisabledOptions(unSelectedGroup.slice(0, this.staticLimit));
          let errorResult = errorType;
          if (optionsLength === 0 && searchTerm === '') {
            errorResult = 'DEFAULT';
          } else if (searchTerm !== '') {
            errorResult = 'NO_RECORDS_FOUND';
          } else {
            errorResult = 'FAILED_TO_FETCH';
          }
          this.setState({
            ...this.state,
            errorType: fetchOptions ? errorResult : errorType,
            scrollIndex: res.scrollToIndex || 0,
            optionsLength,
            loading: false,
            async: updatedAsync,
            searchedOptionsLength: count,
            options: unSelectedGroup.slice(0, this.staticLimit),
            tempSelected: init ? selectedGroup : tempSelected,
            previousSelected: init ? selectedGroup : previousSelected,
            selected: _showSelectedItems(updatedAsync, searchTerm, withCheckbox) ? selectedGroup : [],
            triggerLabel: this.updateTriggerLabel(init ? selectedGroup : tempSelected),
            selectAll: !updatedAsync && init ? getSelectAll$1(selectedGroup, optionsLength, disabledOptions.length) : selectAll
          });
          if (updatedAsync || withSearch) inputRef.current?.focus();
        }
      }).catch(() => {
        this.setState({
          errorType: fetchOptions ? 'FAILED_TO_FETCH' : errorType,
          loading: false,
          options: []
        });
      });
    });
    _defineProperty$1(this, "updateSearchTerm", search => {
      this.setState({
        ...this.state,
        loading: true,
        searchInit: true,
        searchTerm: search,
        errorType: 'NO_RECORDS_FOUND'
      });
    });
    _defineProperty$1(this, "updateOnPopperToggle", () => {
      const {
        withCheckbox,
        showApplyButton,
        onClose,
        name,
        selected = []
      } = this.props;
      const {
        previousSelected,
        tempSelected,
        optionsLength,
        async,
        loading,
        searchTerm,
        options
      } = this.state;
      const popperIsOpen = _isOpenControlled(this.props.open) ? this.props.open : this.state.open;
      const disabledOptionsCount = this.getDisabledOptions(options).length;
      if (withCheckbox && showApplyButton) {
        const temporarySelected = _isControlled(this.props.selected) ? selected : previousSelected;
        this.setState({
          tempSelected: temporarySelected,
          selectAll: getSelectAll$1(temporarySelected, optionsLength, disabledOptionsCount),
          triggerLabel: this.updateTriggerLabel(temporarySelected)
        });
      }
      if (_isOpenControlled(this.props.open)) {
        this.setState({
          open: popperIsOpen
        });
      }
      if (popperIsOpen) {
        const moveSelectedGroup = _showSelectedItems(async, searchTerm, withCheckbox) && !_isEqual(this.state.selected, tempSelected);
        this.setState({
          loading: moveSelectedGroup || loading || searchTerm !== '',
          searchInit: searchTerm !== '',
          searchTerm: ''
        });
        if (moveSelectedGroup) this.updateOptions(false);
      }
      if (onClose && !popperIsOpen) {
        const arr = withCheckbox && showApplyButton ? _isControlled(this.props.selected) ? selected : previousSelected : this.state.tempSelected;
        const values = arr.map(option => option.value);
        this.debounceOnClose(values, name);
      }
    });
    _defineProperty$1(this, "debounceOnClose", debounce$1(300, (values, name) => {
      const {
        onClose
      } = this.props;
      if (onClose) {
        onClose(values, name);
      }
    }));
    _defineProperty$1(this, "updateTriggerLabel", (selectedArray = [], totalOptions) => {
      const selectedLength = selectedArray.length;
      if (selectedLength === 0) return '';
      const {
        triggerOptions = {},
        getLabel
      } = this.props;
      const {
        customLabel,
        labelLimit = 2
      } = triggerOptions;
      const optionsLength = this.state ? this.state.optionsLength : totalOptions;
      let label = '';
      if (selectedLength <= labelLimit) {
        label = selectedArray.map(option => {
          return option.label;
        }).join(', ');
      } else {
        label = customLabel ? customLabel(selectedLength, optionsLength, selectedArray) : `${selectedLength} selected`;
      }
      if (getLabel) getLabel(label);
      return label;
    });
    _defineProperty$1(this, "updateSelectedOptions", (selectedArray, isSingleSelect, isControlled) => {
      const {
        optionsLength,
        previousSelected,
        selected,
        loading,
        open
      } = this.state;
      const {
        onChange,
        withCheckbox,
        showApplyButton,
        closeOnSelect,
        name,
        onPopperToggle
      } = this.props;
      const updatePreviousSelected = withCheckbox && showApplyButton && isControlled;
      const disabledOptions = this.getDisabledOptions(this.state.options);
      const isClearClicked = selectedArray.length === 0 && selected.length > 0 || selectedArray.every(option => option.disabled) && !selected.every(option => option.disabled);
      this.setState({
        ...this.state,
        tempSelected: selectedArray,
        triggerLabel: this.updateTriggerLabel(selectedArray),
        selectAll: getSelectAll$1(selectedArray, optionsLength, disabledOptions.length),
        open: _isOpenControlled(this.props.open) || withCheckbox ? open : !closeOnSelect,
        previousSelected: updatePreviousSelected ? selectedArray : previousSelected,
        selected: isClearClicked ? selectedArray : selected,
        loading: isClearClicked ? true : loading
      });
      if (isClearClicked) this.debounceClear();
      if (onChange && (!showApplyButton || isControlled)) {
        const values = selectedArray.map(item => item.value);
        const selectedValues = isSingleSelect ? values[0] : values;
        onChange(selectedValues, name);
      }
      if (!withCheckbox && closeOnSelect && onPopperToggle && _isOpenControlled(this.props.open)) {
        onPopperToggle(false, 'optionClick');
      }
    });
    _defineProperty$1(this, "isValidOption", option => {
      const {
        closeOnSelect,
        withCheckbox,
        open,
        onPopperToggle
      } = this.props;
      const temp = this.state.tempSelected;
      if (temp.length > 0 && !withCheckbox && temp[0].value === option['value']) {
        this.setState({
          ...this.state,
          open: _isOpenControlled(open) || !closeOnSelect
        });
        if (!withCheckbox && closeOnSelect && onPopperToggle && _isOpenControlled(open)) {
          onPopperToggle(false, 'optionClick');
        }
        return false;
      }
      return true;
    });
    _defineProperty$1(this, "onOptionSelect", option => {
      const {
        onUpdate,
        selected,
        menu
      } = this.props;
      if (_isControlled(selected)) {
        if (onUpdate && (this.isValidOption(option) || menu)) {
          onUpdate('select-option', option);
        }
        return;
      }
      if (this.isValidOption(option) || menu) {
        this.updateSelectedOptions([option], true);
      }
    });
    _defineProperty$1(this, "onSelect", (option, checked) => {
      const {
        onUpdate,
        selected,
        showApplyButton
      } = this.props;
      if (_isControlled(selected) && !showApplyButton) {
        if (onUpdate) onUpdate(checked ? 'select-option' : 'deselect-option', option);
        return;
      }
      const {
        tempSelected
      } = this.state;
      let selectedArray = tempSelected.slice();
      if (!checked) {
        const index = selectedArray.findIndex(item => item.value === option.value);
        selectedArray.splice(index, 1);
      }
      selectedArray = checked ? selectedArray.concat(option) : selectedArray;
      this.updateSelectedOptions(selectedArray, false);
    });
    _defineProperty$1(this, "onSelectAll", event => {
      const {
        onUpdate,
        selected,
        showApplyButton
      } = this.props;
      const {
        tempSelected,
        options
      } = this.state;
      if (_isControlled(selected) && !showApplyButton) {
        if (onUpdate) onUpdate(event.target.checked ? 'select-all' : 'deselect-all');
        return;
      }
      const selectedArr = tempSelected.slice();
      const selectedDisabledArray = selectedArr.filter(option => option.disabled);
      const selectedArray = event.target.checked ? [...options.filter(option => !option.disabled), ...selectedDisabledArray] : selectedDisabledArray;
      this.updateSelectedOptions(selectedArray, false);
    });
    _defineProperty$1(this, "debounceSearch", debounce$1(this.props.searchDebounceDuration, () => {
      this.setState({
        searchInit: false
      }, () => {
        this.updateOptions(false);
      });
    }));
    _defineProperty$1(this, "reload", () => {
      this.setState({
        loading: true
      }, () => {
        this.updateOptions(false);
      });
    });
    _defineProperty$1(this, "debounceClear", debounce$1(250, () => this.updateOptions(false)));
    _defineProperty$1(this, "onClearOptions", () => {
      const {
        selected,
        name,
        onUpdate,
        showApplyButton,
        onChange
      } = this.props;
      const {
        tempSelected
      } = this.state;
      const selectedArray = tempSelected.filter(option => option.disabled);
      if (_isControlled(selected) && !showApplyButton) {
        if (onUpdate) onUpdate('clear-all');
        return;
      }
      this.setState({
        selected: selectedArray,
        tempSelected: selectedArray,
        triggerLabel: '',
        loading: true
      });
      this.debounceClear();
      if (onChange && !showApplyButton) onChange(selectedArray, name);
    });
    _defineProperty$1(this, "onTogglePopper", type => {
      const {
        onPopperToggle
      } = this.props;
      if (onPopperToggle && _isOpenControlled(this.props.open)) {
        onPopperToggle(false, type);
      }
    });
    _defineProperty$1(this, "onCancelOptions", () => {
      const {
        previousSelected,
        tempSelected,
        optionsLength
      } = this.state;
      const {
        selected,
        onUpdate,
        onClose,
        name
      } = this.props;
      const popperIsOpen = _isOpenControlled(this.props.open) ? this.state.open : false;
      const values = previousSelected.map(option => option.value);
      if (_isControlled(selected)) {
        if (onUpdate) onUpdate('cancel-selected', previousSelected, tempSelected);
        this.onTogglePopper('cancelClick');
        return;
      }
      const label = this.updateTriggerLabel(previousSelected);
      const disabledOptions = this.getDisabledOptions(this.state.options);
      this.setState({
        ...this.state,
        tempSelected: previousSelected,
        selectAll: getSelectAll$1(previousSelected, optionsLength, disabledOptions.length),
        triggerLabel: label,
        open: popperIsOpen
      });
      if (onClose && !popperIsOpen) {
        onClose(values, name);
      }
      this.onTogglePopper('cancelClick');
    });
    _defineProperty$1(this, "onApplyOptions", () => {
      const {
        tempSelected,
        previousSelected
      } = this.state;
      const {
        onChange,
        selected,
        onUpdate,
        onClose,
        name
      } = this.props;
      const popperIsOpen = _isOpenControlled(this.props.open) ? this.state.open : false;
      const values = tempSelected.map(option => option.value);
      if (_isControlled(selected)) {
        if (onUpdate) onUpdate('apply-selected', previousSelected, tempSelected);
        this.onTogglePopper('applyClick');
        return;
      }
      this.setState({
        ...this.state,
        previousSelected: tempSelected,
        optionsApplied: true,
        open: popperIsOpen
      });
      if (onChange) {
        onChange(values, name);
      }
      if (onClose && !popperIsOpen) {
        onClose(values, name);
      }
      this.onTogglePopper('applyClick');
    });
    _defineProperty$1(this, "onToggleDropdown", (updatedOpen, type) => {
      if (this.props.disabled) {
        return;
      }
      const {
        onPopperToggle
      } = this.props;
      if (onPopperToggle && _isOpenControlled(this.props.open)) {
        onPopperToggle(updatedOpen, type);
        return;
      }
      this.setState({
        open: updatedOpen
      });
    });
    const {
      selected: _selected = [],
      totalOptions: _totalOptions,
      withCheckbox: _withCheckbox,
      loading: _loading,
      open: _open,
      options: _options
    } = props;
    this.staticLimit = Math.min(100, props.staticLimit);
    const _optionsLength = _totalOptions ? _totalOptions : _options.length;
    const _async = 'fetchOptions' in this.props || _optionsLength > this.staticLimit;
    const _selectedGroup = !_async ? this.getSelectedOptions(_options, true) : [];
    const _disabledOptions = this.getDisabledOptions(_options);
    this.state = {
      async: _async,
      optionsLength: _optionsLength,
      open: _open,
      searchInit: false,
      searchedOptionsLength: _optionsLength,
      optionsApplied: false,
      options: _options || [],
      loading: _async ? true : _loading,
      searchTerm: '',
      tempSelected: _selectedGroup,
      previousSelected: _selectedGroup,
      selected: _showSelectedItems(_async, '', _withCheckbox) ? _selected : [],
      triggerLabel: this.updateTriggerLabel(_selectedGroup, _optionsLength),
      selectAll: getSelectAll$1(_selectedGroup, _optionsLength, _disabledOptions.length),
      errorType: 'DEFAULT'
    };
  }
  componentDidMount() {
    const {
      async
    } = this.state;
    if (async) this.updateOptions(true);
  }
  componentDidUpdate(prevProps, prevState) {
    if (!this.state.async) {
      const {
        loading,
        fetchOptions,
        options = [],
        withSearch
      } = this.props;
      const disabledOptionsCount = this.getDisabledOptions(options).length;
      if (prevProps.loading !== loading && !fetchOptions) {
        if (options.length > this.staticLimit) {
          this.updateOptions(true, true);
        } else {
          const selectedGroup = this.getSelectedOptions(options, true);
          this.setState({
            ...this.state,
            options,
            loading,
            tempSelected: selectedGroup,
            previousSelected: selectedGroup,
            optionsLength: options.length,
            searchedOptionsLength: options.length,
            triggerLabel: this.updateTriggerLabel(selectedGroup),
            selectAll: getSelectAll$1(selectedGroup, this.state.optionsLength, disabledOptionsCount)
          });
          if (withSearch) inputRef.current?.focus();
        }
      }
    }
    if (this.props.selected !== undefined && prevProps.selected !== this.props.selected && prevProps.loading === this.props.loading) {
      const isSingleSelect = !this.props.withCheckbox;
      this.updateSelectedOptions(this.props.selected, isSingleSelect, true);
    }
    if (prevState.searchTerm !== this.state.searchTerm) {
      this.debounceSearch();
    }
    if (prevProps.open !== this.props.open || prevState.open !== this.state.open) {
      if (_isOpenControlled(this.props.open) && this.props.open === this.state.open) return;
      this.updateOnPopperToggle();
    }
  }
  render() {
    const {
      options,
      async,
      open,
      searchTerm,
      searchInit,
      loading,
      searchedOptionsLength,
      tempSelected,
      selectAll,
      triggerLabel,
      previousSelected,
      scrollIndex,
      errorType
    } = this.state;
    const {
      withSelectAll = true,
      withCheckbox
    } = this.props;
    const {
      triggerOptions = {},
      selected,
      tabIndex,
      ...rest
    } = this.props;
    const remainingOptionsLen = searchedOptionsLength - options.length;
    const firstEnabledOption = tabIndex ? tabIndex : _isSelectAllPresent(searchTerm, remainingOptionsLen, withSelectAll, withCheckbox) ? 0 : options.findIndex(option => !option.disabled);
    return /*#__PURE__*/React.createElement(DropdownList, _extends$2({
      listOptions: options,
      inputRef: inputRef,
      remainingOptions: remainingOptionsLen,
      firstEnabledOption: firstEnabledOption,
      loadingOptions: loading,
      async: async,
      searchInit: searchInit,
      dropdownOpen: open,
      searchTerm: searchTerm,
      triggerLabel: triggerLabel,
      tempSelected: tempSelected,
      previousSelected: previousSelected,
      selected: this.state.selected,
      applyOptions: this.onApplyOptions,
      cancelOptions: this.onCancelOptions,
      toggleDropdown: this.onToggleDropdown,
      onClearOptions: this.onClearOptions,
      onSelect: this.onSelect,
      selectAll: selectAll,
      onSearchChange: this.updateSearchTerm,
      onOptionSelect: this.onOptionSelect,
      onSelectAll: this.onSelectAll,
      customTrigger: triggerOptions.customTrigger,
      scrollIndex: scrollIndex,
      updateOptions: this.reload,
      errorType: errorType
    }, rest));
  }
}
_defineProperty$1(Dropdown, "defaultProps", {
  triggerOptions: {},
  options: [],
  closeOnSelect: true,
  staticLimit: 50,
  searchDebounceDuration: 300
});

var css_248z$_ = "/* Heading */\n.heading-module-Heading-tmepg-5-0-0-9 {\n  margin: 0;\n}\n\n.heading-module-Heading--s-r3kT8-5-0-0-9 {\n  font-weight: var(--font-weight-bold);\n  font-size: var(--font-size-m);\n  line-height: var(--font-height-m);\n}\n\n.heading-module-Heading--m-KypUv-5-0-0-9 {\n  font-weight: var(--font-weight-medium);\n  font-size: var(--font-size-l);\n  line-height: var(--font-height-l);\n}\n\n.heading-module-Heading--l-6irdW-5-0-0-9 {\n  font-weight: var(--font-weight-normal);\n  font-size: var(--font-size-xl);\n  line-height: var(--font-height-xl);\n}\n\n.heading-module-Heading--xl-XGjXU-5-0-0-9 {\n  font-weight: var(--font-weight-medium);\n  font-size: var(--font-size-xxl);\n  line-height: var(--font-height-xxl);\n}\n\n.heading-module-Heading--xxl-eD434-5-0-0-9 {\n  font-weight: var(--font-weight-normal);\n  font-size: var(--font-size-xxxl);\n  line-height: var(--font-height-xxl);\n}\n\n.heading-module-Heading--default-3YJIX-5-0-0-9 {\n  color: var(--text);\n}\n\n.heading-module-Heading--subtle-K3WJd-5-0-0-9 {\n  color: var(--text-subtle);\n}\n\n.heading-module-Heading--disabled-dQRjW-5-0-0-9 {\n  color: var(--text-disabled);\n}\n\n.heading-module-Heading--white-LK0i2-5-0-0-9 {\n  color: var(--text-white);\n}\n";
var styles$Y = {"Heading":"heading-module-Heading-tmepg-5-0-0-9","Heading--s":"heading-module-Heading--s-r3kT8-5-0-0-9","Heading--m":"heading-module-Heading--m-KypUv-5-0-0-9","Heading--l":"heading-module-Heading--l-6irdW-5-0-0-9","Heading--xl":"heading-module-Heading--xl-XGjXU-5-0-0-9","Heading--xxl":"heading-module-Heading--xxl-eD434-5-0-0-9","Heading--default":"heading-module-Heading--default-3YJIX-5-0-0-9","Heading--subtle":"heading-module-Heading--subtle-K3WJd-5-0-0-9","Heading--disabled":"heading-module-Heading--disabled-dQRjW-5-0-0-9","Heading--white":"heading-module-Heading--white-LK0i2-5-0-0-9"};
styleInject(css_248z$_);

const sizeMap = {
  s: 'h5',
  m: 'h4',
  l: 'h3',
  xl: 'h2',
  xxl: 'h1'
};
const Heading = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    appearance = 'default',
    size = 'm',
    children,
    className,
    color,
    ...rest
  } = props;
  const classes = classNames({
    [styles$Y.Heading]: true,
    [styles$Y[`Heading--${size}`]]: size,
    [styles$Y[`Heading--${appearance}`]]: !color && appearance,
    [`color-${color}`]: color
  }, className);
  return /*#__PURE__*/React.createElement(Link$1, _extends$2({
    ref: ref,
    "data-test": "DesignSystem-Heading"
  }, rest, {
    className: classes,
    componentType: sizeMap[size]
  }), children);
});
Heading.displayName = 'Heading';

var css_248z$Z = ".actionButton-module-ActionButton-GMsQC-5-0-0-9 {\n  display: flex;\n  flex-shrink: 0;\n  overflow: hidden;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  cursor: pointer;\n  color: var(--inverse-lighter);\n  border-radius: var(--border-radius-full);\n  padding: var(--spacing-05);\n}\n\n.actionButton-module-ActionButton-GMsQC-5-0-0-9:focus-visible,\n.actionButton-module-ActionButton-GMsQC-5-0-0-9:focus {\n  outline: var(--spacing-05) solid var(--secondary-shadow);\n}\n\n.actionButton-module-ActionButton-GMsQC-5-0-0-9:hover {\n  background-color: var(--secondary);\n}\n\n.actionButton-module-ActionButton-GMsQC-5-0-0-9:active {\n  background-color: var(--secondary-dark);\n}\n";
var styles$X = {"ActionButton":"actionButton-module-ActionButton-GMsQC-5-0-0-9"};
styleInject(css_248z$Z);

const ActionButton$1 = props => {
  const {
    className,
    iconType,
    ...rest
  } = props;
  const iconClass = classNames({
    [styles$X['ActionButton']]: true,
    [`${className}`]: className
  });
  return /*#__PURE__*/React.createElement(Icon, _extends$2({
    className: iconClass,
    type: iconType,
    "data-test": "DesignSystem-Input-ActionButton"
  }, rest));
};
ActionButton$1.displayName = 'ActionButton';
ActionButton$1.defaultProps = {
  size: 16,
  type: 'rounded'
};

var css_248z$Y = "/* input */\n\n.input-module-Input-input-eQ8b8-5-0-0-9::-ms-clear {\n  display: none;\n}\n\n.input-module-Input-4ywvi-5-0-0-9 {\n  display: flex;\n  flex-grow: 1;\n  flex-direction: row;\n  align-items: center;\n  box-sizing: border-box;\n  border-radius: var(--border-radius-10);\n  border: var(--border);\n  padding-right: var(--spacing-30);\n  padding-left: var(--spacing-30);\n  background: var(--white);\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.input-module-Input--tiny-NegXy-5-0-0-9 {\n  height: var(--font-height-m);\n  padding-top: var(--spacing-10);\n  padding-bottom: var(--spacing-10);\n}\n\n.input-module-Input--regular-YN-1C-5-0-0-9 {\n  height: var(--font-height-l);\n  padding-top: var(--spacing-15);\n  padding-bottom: var(--spacing-15);\n}\n\n.input-module-Input--large-FqoAi-5-0-0-9 {\n  height: 40px;\n  padding-top: var(--spacing-20);\n  padding-bottom: var(--spacing-20);\n}\n\n.input-module-Input-4ywvi-5-0-0-9:hover {\n  background: var(--secondary-lighter);\n  border-color: var(--secondary-dark);\n  cursor: text;\n}\n\n.input-module-Input-4ywvi-5-0-0-9:focus-within {\n  background: var(--white);\n  border-color: var(--primary);\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n}\n\n.input-module-Input-4ywvi-5-0-0-9:focus-within .input-module-Input-icon--left-F1r05-5-0-0-9 {\n  color: var(--primary);\n}\n\n.input-module-Input--error-EGIUq-5-0-0-9:focus-within {\n  border-color: var(--alert);\n  box-shadow: var(--shadow-spread) var(--alert-shadow);\n}\n\n.input-module-Input--error-EGIUq-5-0-0-9:focus-within .input-module-Input-icon--left-F1r05-5-0-0-9 {\n  color: var(--alert);\n}\n\n.input-module-Input--disabled-IRtQk-5-0-0-9 {\n  background: var(--secondary-lightest);\n  border-color: var(--secondary-lighter);\n  pointer-events: none;\n}\n\n.input-module-Input--readOnly-4IaEw-5-0-0-9 {\n  background: var(--secondary-lightest);\n  border-color: var(--secondary);\n  pointer-events: none;\n}\n\n.input-module-Input--disabled-IRtQk-5-0-0-9 .input-module-Input-icon--left-F1r05-5-0-0-9 {\n  color: var(--inverse-lightest);\n}\n\n.input-module-Input--error-EGIUq-5-0-0-9,\n.input-module-Input--error-EGIUq-5-0-0-9:hover {\n  background: var(--white);\n  border-color: var(--alert);\n}\n\n.input-module-Input-input-eQ8b8-5-0-0-9 {\n  display: flex;\n  width: 100%;\n  font-family: var(--font-family);\n  font-weight: var(--font-weight-normal);\n  font-size: var(--font-size);\n  line-height: var(--font-height-s);\n  color: var(--night);\n  padding: 0;\n  border: none;\n  background: transparent;\n}\n\n.input-module-Input-input-eQ8b8-5-0-0-9::-moz-placeholder {\n  color: var(--inverse-lighter);\n}\n\n.input-module-Input-input-eQ8b8-5-0-0-9::placeholder {\n  color: var(--inverse-lighter);\n}\n\n.input-module-Input-input-eQ8b8-5-0-0-9:focus {\n  outline: 0;\n}\n\n.input-module-Input-input-eQ8b8-5-0-0-9:disabled .input-module-Input-input-eQ8b8-5-0-0-9::-moz-placeholder {\n  color: var(--inverse-lighter);\n}\n\n.input-module-Input-input-eQ8b8-5-0-0-9:disabled .input-module-Input-input-eQ8b8-5-0-0-9::placeholder {\n  color: var(--inverse-lighter);\n}\n\n.input-module-Input-input--regular-2cMTS-5-0-0-9 {\n  line-height: var(--font-height);\n}\n\n.input-module-Input-input--large-Ps2E1-5-0-0-9 {\n  line-height: var(--font-height-m);\n  font-size: var(--font-size-m);\n}\n\n.input-module-Input-icon-V1pYc-5-0-0-9 {\n  display: flex;\n  align-content: center;\n  font-size: var(--font-size-m);\n}\n\n.input-module-Input-icon--left-F1r05-5-0-0-9 {\n  margin-right: var(--spacing-20);\n  color: var(--inverse);\n}\n\n.input-module-Input-icon--inputBlank-GkWyn-5-0-0-9 {\n  color: var(--inverse-lighter);\n}\n\n.input-module-Input-icon--error-o9EcI-5-0-0-9 {\n  color: var(--alert);\n}\n\n.input-module-Input-icon--right-A9G9E-5-0-0-9 {\n  cursor: pointer;\n  color: var(--inverse-lighter);\n  border-radius: var(--border-radius-full);\n}\n\n.input-module-Input-iconWrapper--right-HdKL--5-0-0-9:focus-visible .input-module-Input-icon--right-A9G9E-5-0-0-9 {\n  outline: var(--spacing-05) solid var(--secondary-shadow);\n}\n\n.input-module-Input-icon--right-A9G9E-5-0-0-9:focus-visible {\n  outline: var(--spacing-05) solid var(--secondary-shadow);\n  border-radius: var(--border-radius-full);\n}\n\n.input-module-Input-iconWrapper--right-HdKL--5-0-0-9:hover .input-module-Input-icon--right-A9G9E-5-0-0-9 {\n  background-color: var(--secondary);\n}\n\n.input-module-Input-iconWrapper--right-HdKL--5-0-0-9:active .input-module-Input-icon--right-A9G9E-5-0-0-9 {\n  background-color: var(--secondary-dark);\n}\n\n.input-module-Input-inlineLabel-Sgbvs-5-0-0-9 {\n  margin-right: var(--spacing-20);\n}\n\n.input-module-Input-iconWrapper--right-HdKL--5-0-0-9:focus-visible {\n  outline: none;\n}\n";
var styles$W = {"Input-input":"input-module-Input-input-eQ8b8-5-0-0-9","Input":"input-module-Input-4ywvi-5-0-0-9","Input--tiny":"input-module-Input--tiny-NegXy-5-0-0-9","Input--regular":"input-module-Input--regular-YN-1C-5-0-0-9","Input--large":"input-module-Input--large-FqoAi-5-0-0-9","Input-icon--left":"input-module-Input-icon--left-F1r05-5-0-0-9","Input--error":"input-module-Input--error-EGIUq-5-0-0-9","Input--disabled":"input-module-Input--disabled-IRtQk-5-0-0-9","Input--readOnly":"input-module-Input--readOnly-4IaEw-5-0-0-9","Input-input--regular":"input-module-Input-input--regular-2cMTS-5-0-0-9","Input-input--large":"input-module-Input-input--large-Ps2E1-5-0-0-9","Input-icon":"input-module-Input-icon-V1pYc-5-0-0-9","Input-icon--inputBlank":"input-module-Input-icon--inputBlank-GkWyn-5-0-0-9","Input-icon--error":"input-module-Input-icon--error-o9EcI-5-0-0-9","Input-icon--right":"input-module-Input-icon--right-A9G9E-5-0-0-9","Input-iconWrapper--right":"input-module-Input-iconWrapper--right-HdKL--5-0-0-9","Input-inlineLabel":"input-module-Input-inlineLabel-Sgbvs-5-0-0-9"};
styleInject(css_248z$Y);

var css_248z$X = ".verificationCodeInput-module-VerificationCodeInput-Input-bdn9x-5-0-0-9 {\n  display: inline-flex;\n  width: 40px;\n}\n\n.verificationCodeInput-module-VerificationCodeInput-Input-bdn9x-5-0-0-9 .verificationCodeInput-module-Input-input-IIOUQ-5-0-0-9 {\n  text-align: center;\n}\n\n.verificationCodeInput-module-VerificationCodeInput-Input-bdn9x-5-0-0-9 .verificationCodeInput-module-Input-input-IIOUQ-5-0-0-9::-webkit-inner-spin-button,\n.verificationCodeInput-module-VerificationCodeInput-Input-bdn9x-5-0-0-9 .verificationCodeInput-module-Input-input-IIOUQ-5-0-0-9::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n";
var styles$V = {"VerificationCodeInput-Input":"verificationCodeInput-module-VerificationCodeInput-Input-bdn9x-5-0-0-9","Input-input":"verificationCodeInput-module-Input-input-IIOUQ-5-0-0-9"};
styleInject(css_248z$X);

const sizeMapping$2 = {
  tiny: 12,
  regular: 16,
  large: 20
};

/**
 * ###### Input has two types:
 *  - [Controlled Input](https://reactjs.org/docs/forms.html#controlled-components)
 *  - [Uncontrolled Input](https://reactjs.org/docs/uncontrolled-components.html)
 */
const Input = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {
  const {
    size = 'regular',
    type = 'text',
    minWidth = type !== 'number' ? 256 : undefined,
    defaultValue,
    name,
    placeholder,
    value,
    icon,
    inlineLabel,
    required,
    error,
    info,
    onChange,
    onClick,
    onClear,
    onBlur,
    onFocus,
    onPaste,
    actionIcon,
    className,
    autoFocus,
    disabled,
    readOnly,
    iconType,
    ...rest
  } = props;
  const ref = React.useRef(null);
  const [isInputBlank, setIsInputBlank] = React.useState(!value);
  React.useImperativeHandle(forwardedRef, () => {
    return ref.current;
  });
  React.useEffect(() => {
    if (autoFocus) ref.current?.focus({
      preventScroll: true
    });
  }, []);
  React.useEffect(() => {
    if (ref.current && value !== undefined) {
      const element = ref.current;
      try {
        const cursorPosition = element.value.length;
        element.setSelectionRange(cursorPosition, cursorPosition);
      } catch (error) {
        console.error('Error setting selection range:', error);
      }
    }
  }, [type]);
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$W['Input']]: true,
    [styles$W[`Input--${size}`]]: size,
    [styles$W['Input--disabled']]: disabled,
    [styles$W['Input--error']]: error,
    [styles$W['Input--readOnly']]: readOnly
  }, className);
  const inputClass = classNames({
    [styles$W['Input-input']]: true,
    [styles$V['Input-input']]: true,
    [styles$W[`Input-input--${size}`]]: size
  });
  const leftIconClass = classNames({
    [styles$W['Input-icon']]: true,
    [styles$W['Input-icon--left']]: true,
    [styles$W['Input-icon--inputBlank']]: isInputBlank,
    [styles$W['Input-icon--error']]: error
  });
  const rightIconClass = classNames({
    [styles$W['Input-icon']]: true,
    [styles$W['Input-iconWrapper--right']]: true
  });
  const trigger = /*#__PURE__*/React.createElement("div", {
    className: rightIconClass // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex
    ,
    tabIndex: 0
  }, /*#__PURE__*/React.createElement(Icon, {
    name: 'info',
    size: sizeMapping$2[size],
    className: styles$W['Input-icon--right']
  }));
  return /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-InputWrapper",
    className: classes,
    style: {
      minWidth
    },
    onClick: () => ref.current?.focus(),
    role: "presentation",
    onBlur: () => setIsInputBlank(!ref.current?.value)
  }, inlineLabel && /*#__PURE__*/React.createElement("div", {
    className: styles$W['Input-inlineLabel']
  }, /*#__PURE__*/React.createElement(Text, {
    appearance: "subtle"
  }, inlineLabel)), size !== 'tiny' && icon && /*#__PURE__*/React.createElement("div", {
    className: leftIconClass
  }, /*#__PURE__*/React.createElement(Icon, {
    name: icon,
    size: sizeMapping$2[size],
    type: iconType
  })), /*#__PURE__*/React.createElement("input", _extends$2({
    "data-test": "DesignSystem-Input"
  }, baseProps, rest, {
    ref: ref,
    name: name,
    type: type,
    defaultValue: defaultValue,
    placeholder: placeholder,
    className: inputClass,
    value: value,
    required: required,
    disabled: disabled,
    readOnly: readOnly,
    onChange: onChange,
    onBlur: onBlur,
    onClick: onClick,
    onFocus: onFocus,
    onPaste: onPaste
    /**
     *for readOnly: true, tab focus from input element is removed. Hence, its tabIndex is set to -1.
     *For rest, "undefined" lets user agent(browser) use the default tabIndex.
     */,
    tabIndex: readOnly ? -1 : undefined
  })), disabled ? '' : info ? /*#__PURE__*/React.createElement(Tooltip, {
    position: "bottom",
    tooltip: info
  }, trigger) : actionIcon && (value || defaultValue) ? actionIcon : onClear && (value || defaultValue) && /*#__PURE__*/React.createElement("div", {
    className: rightIconClass
  }, /*#__PURE__*/React.createElement(Icon, {
    "data-test": "DesignSystem-Input--closeIcon",
    onClick: e => {
      ref.current?.focus({
        preventScroll: true
      });
      onClear(e);
    },
    name: 'close',
    size: sizeMapping$2[size],
    className: styles$W['Input-icon--right']
  })));
});
Input.displayName = 'Input';
Object.assign(Input, {
  ActionButton: ActionButton$1
});

var css_248z$W = ".metricInput-module-MetricInput-input-F33lA-5-0-0-9::-ms-clear {\n  display: none;\n}\n\n.metricInput-module-MetricInput--0hzO-5-0-0-9 {\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  align-items: center;\n  box-sizing: border-box;\n  border-radius: var(--border-radius-10);\n  border: var(--border);\n  padding-right: var(--spacing-10);\n  background: var(--white);\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.metricInput-module-MetricInput--regular-qwE-W-5-0-0-9 {\n  height: var(--spacing-80);\n  padding-left: var(--spacing-30);\n}\n\n.metricInput-module-MetricInput--large-PHYvQ-5-0-0-9 {\n  height: 40px;\n  padding-left: var(--spacing-40);\n}\n\n.metricInput-module-MetricInput--0hzO-5-0-0-9:hover {\n  background: var(--secondary-lightest);\n  cursor: text;\n}\n\n.metricInput-module-MetricInput--0hzO-5-0-0-9:focus-within {\n  background: var(--white);\n  border-color: var(--primary);\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n}\n\n.metricInput-module-MetricInput--0hzO-5-0-0-9:focus-within .metricInput-module-MetricInput-icon-xUfPZ-5-0-0-9 {\n  color: var(--primary);\n}\n\n.metricInput-module-MetricInput--disabled-41NDQ-5-0-0-9 {\n  background: var(--secondary-lightest);\n  border-color: var(--secondary-light);\n  pointer-events: none;\n}\n\n.metricInput-module-MetricInput--readOnly-fVSGN-5-0-0-9 {\n  background: var(--secondary-lightest);\n  border-color: var(--secondary);\n  pointer-events: none;\n}\n\n.metricInput-module-MetricInput--disabled-41NDQ-5-0-0-9 .metricInput-module-MetricInput-icon-xUfPZ-5-0-0-9 {\n  color: var(--inverse-lightest);\n}\n\n.metricInput-module-MetricInput--error-FAM-w-5-0-0-9,\n.metricInput-module-MetricInput--error-FAM-w-5-0-0-9:hover {\n  background: var(--white);\n  border-color: var(--alert);\n}\n\n.metricInput-module-MetricInput--error-FAM-w-5-0-0-9:focus-within {\n  border-color: var(--alert);\n  box-shadow: var(--shadow-spread) var(--alert-shadow);\n}\n\n.metricInput-module-MetricInput--error-FAM-w-5-0-0-9:focus-within .metricInput-module-MetricInput-icon-xUfPZ-5-0-0-9 {\n  color: var(--alert);\n}\n\n.metricInput-module-MetricInput-input-F33lA-5-0-0-9 {\n  display: flex;\n  width: 100%;\n  font-family: var(--font-family);\n  font-weight: var(--font-weight-normal);\n  font-size: var(--font-size);\n  line-height: var(--font-height-s);\n  color: var(--night);\n  padding: 0;\n  border: none;\n  background: transparent;\n}\n\n.metricInput-module-MetricInput-input--large-Xn7eL-5-0-0-9 {\n  line-height: var(--font-height-m);\n  font-size: var(--font-size-m);\n}\n\n.metricInput-module-MetricInput-input-F33lA-5-0-0-9::-moz-placeholder {\n  color: var(--inverse-lighter);\n}\n\n.metricInput-module-MetricInput-input-F33lA-5-0-0-9::placeholder {\n  color: var(--inverse-lighter);\n}\n\n.metricInput-module-MetricInput-input-F33lA-5-0-0-9:focus {\n  outline: 0;\n}\n\n.metricInput-module-MetricInput-input-F33lA-5-0-0-9:disabled .metricInput-module-MetricInput-input-F33lA-5-0-0-9::-moz-placeholder {\n  color: var(--inverse-lighter);\n}\n\n.metricInput-module-MetricInput-input-F33lA-5-0-0-9:disabled .metricInput-module-MetricInput-input-F33lA-5-0-0-9::placeholder {\n  color: var(--inverse-lighter);\n}\n\n.metricInput-module-MetricInput-icon--regular-QqKyP-5-0-0-9 {\n  margin-right: var(--spacing-20);\n  line-height: var(--font-height-s);\n}\n\n.metricInput-module-MetricInput-icon--large-oSw1r-5-0-0-9 {\n  margin-right: var(--spacing-30);\n  line-height: var(--font-height-m);\n}\n\n.metricInput-module-MetricInput-input-F33lA-5-0-0-9::-webkit-inner-spin-button,\n.metricInput-module-MetricInput-input-F33lA-5-0-0-9::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  margin: 0;\n}\n\n.metricInput-module-MetricInput-arrowIcon--large-yJSOA-5-0-0-9 {\n  height: var(--spacing-40);\n  width: var(--spacing-40);\n  border-radius: var(--border-radius-05);\n}\n\n.metricInput-module-MetricInput-arrowIcon--regular-qEPIp-5-0-0-9 {\n  height: var(--spacing-30);\n  width: var(--spacing-30);\n  border-radius: var(--border-radius-05);\n}\n";
var styles$U = {"MetricInput-input":"metricInput-module-MetricInput-input-F33lA-5-0-0-9","MetricInput":"metricInput-module-MetricInput--0hzO-5-0-0-9","MetricInput--regular":"metricInput-module-MetricInput--regular-qwE-W-5-0-0-9","MetricInput--large":"metricInput-module-MetricInput--large-PHYvQ-5-0-0-9","MetricInput-icon":"metricInput-module-MetricInput-icon-xUfPZ-5-0-0-9","MetricInput--disabled":"metricInput-module-MetricInput--disabled-41NDQ-5-0-0-9","MetricInput--readOnly":"metricInput-module-MetricInput--readOnly-fVSGN-5-0-0-9","MetricInput--error":"metricInput-module-MetricInput--error-FAM-w-5-0-0-9","MetricInput-input--large":"metricInput-module-MetricInput-input--large-Xn7eL-5-0-0-9","MetricInput-icon--regular":"metricInput-module-MetricInput-icon--regular-QqKyP-5-0-0-9","MetricInput-icon--large":"metricInput-module-MetricInput-icon--large-oSw1r-5-0-0-9","MetricInput-arrowIcon--large":"metricInput-module-MetricInput-arrowIcon--large-yJSOA-5-0-0-9","MetricInput-arrowIcon--regular":"metricInput-module-MetricInput-arrowIcon--regular-qEPIp-5-0-0-9"};
styleInject(css_248z$W);

var css_248z$V = "/* pagination */\n\n.pagination-module-Pagination-DCmdy-5-0-0-9 {\n  display: flex;\n  vertical-align: middle;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n.pagination-module-Pagination-button-bEn7d-5-0-0-9 {\n  padding-left: var(--spacing-20);\n  padding-right: var(--spacing-20);\n}\n\n.pagination-module-Pagination-buttonWrapper--hS-F-5-0-0-9 {\n  display: flex;\n  flex-direction: row;\n}\n\n.pagination-module-Pagination-pageIndex-bDTfx-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-left: var(--spacing-30);\n  padding-right: var(--spacing-30);\n}\n\n.pagination-module-Pagination-MetricInput-SPkmy-5-0-0-9 {\n  width: var(--spacing-120);\n  margin-right: var(--spacing-20);\n  padding-left: var(--spacing-20);\n  padding-right: var(--spacing-20);\n}\n\n.pagination-module-Pagination-MetricInput-SPkmy-5-0-0-9 .pagination-module-MetricInput-input-7icmp-5-0-0-9 {\n  text-align: center;\n}\n.pagination-module-Pagination-MetricInput-SPkmy-5-0-0-9 .pagination-module-MetricInput-arrowIcons-6jLZm-5-0-0-9 {\n  display: none;\n}\n\n@media (max-width: 575px) {\n  .pagination-module-Pagination-pageIndex-bDTfx-5-0-0-9 {\n    order: -1;\n    flex-basis: 100%;\n  }\n  .pagination-module-Pagination-buttonWrapper--hS-F-5-0-0-9 {\n    margin-top: var(--spacing-20);\n    width: 50%;\n  }\n  .pagination-module-Pagination-buttonWrapper--next-5AZZQ-5-0-0-9 {\n    justify-content: flex-start;\n  }\n  .pagination-module-Pagination-buttonWrapper--previous--r33Z-5-0-0-9 {\n    justify-content: flex-end;\n  }\n}\n";
var styles$T = {"Pagination":"pagination-module-Pagination-DCmdy-5-0-0-9","Pagination-button":"pagination-module-Pagination-button-bEn7d-5-0-0-9","Pagination-buttonWrapper":"pagination-module-Pagination-buttonWrapper--hS-F-5-0-0-9","Pagination-pageIndex":"pagination-module-Pagination-pageIndex-bDTfx-5-0-0-9","Pagination-MetricInput":"pagination-module-Pagination-MetricInput-SPkmy-5-0-0-9","MetricInput-input":"pagination-module-MetricInput-input-7icmp-5-0-0-9","MetricInput-arrowIcons":"pagination-module-MetricInput-arrowIcons-6jLZm-5-0-0-9","Pagination-buttonWrapper--next":"pagination-module-Pagination-buttonWrapper--next-5AZZQ-5-0-0-9","Pagination-buttonWrapper--previous":"pagination-module-Pagination-buttonWrapper--previous--r33Z-5-0-0-9"};
styleInject(css_248z$V);

const sizeMapping$1 = {
  regular: 16,
  large: 20
};
const capMin = (min = -Infinity, value) => isNaN(min) || !min && min !== 0 || isNaN(value) || !value && value !== 0 ? value : Math.max(min, value);
const capMax = (max = +Infinity, value) => isNaN(max) || !max && max !== 0 || isNaN(value) || !value && value !== 0 ? value : Math.min(max, value);

/**
 * ###### MetricInput has two types:
 *  - [Controlled MetricInput](https://reactjs.org/docs/forms.html#controlled-components)
 *  - [Uncontrolled MetricInput](https://reactjs.org/docs/uncontrolled-components.html)
 */
const MetricInput = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {
  const {
    size = 'regular',
    defaultValue,
    name,
    placeholder,
    icon,
    prefix,
    suffix,
    error,
    min,
    max,
    onChange,
    onClick,
    onBlur,
    onFocus,
    className,
    autoFocus,
    disabled,
    readOnly,
    value: valueProp,
    showActionButton = true,
    onKeyDown,
    iconType,
    ...rest
  } = props;
  const ref = React.useRef(null);
  const isUncontrolled = valueProp === undefined;
  const [value, setValue] = React.useState(valueProp || defaultValue);
  React.useImperativeHandle(forwardedRef, () => {
    return ref.current;
  });
  React.useEffect(() => {
    if (autoFocus) ref.current?.focus({
      preventScroll: true
    });
  }, []);
  React.useEffect(() => {
    if (valueProp !== undefined) {
      setValue(valueProp);
    }
  }, [valueProp]);
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$U['MetricInput']]: true,
    [styles$U[`MetricInput--${size}`]]: size,
    [styles$U['MetricInput--disabled']]: disabled,
    [styles$U['MetricInput--readOnly']]: readOnly,
    [styles$U['MetricInput--error']]: error
  }, className);
  const inputClass = classNames({
    [styles$U['MetricInput-input']]: true,
    [styles$T['MetricInput-input']]: true,
    [styles$U[`MetricInput-input--${size}`]]: size,
    [`mr-4`]: !suffix && !showActionButton && size === 'regular',
    [`mr-6`]: !suffix && !showActionButton && size === 'large'
  });
  const iconClass = classNames({
    [styles$U['MetricInput-icon']]: true,
    [styles$U[`MetricInput-icon--${size}`]]: size
  });
  const prefixClass = classNames({
    ['mr-4']: size === 'regular',
    ['mr-5']: size !== 'regular'
  });
  const suffixClass = classNames({
    ['ml-4 mr-3']: size === 'regular',
    ['mx-5']: size !== 'regular'
  });
  const actionButton = classNames({
    ['p-0']: true,
    [styles$U[`MetricInput-arrowIcon--${size}`]]: size,
    ['ml-3']: true
  });
  const onChangeHandler = e => {
    if (isUncontrolled) {
      setValue(e.target.value);
    }
    if (onChange) onChange(e);
  };
  const onArrowClick = (e, direction) => {
    let newValue = Number(value || 0);
    const decimalDigits = newValue.toString().split('.')[1]?.length || 0;
    const isValid = direction === 'down' ? min !== undefined && newValue > min || min === undefined : max !== undefined && newValue < max || max === undefined;
    if (disabled || readOnly || !isValid) return;
    newValue = direction === 'down' ? newValue - 1 : newValue + 1;
    newValue = capMax(max, capMin(min, +newValue.toFixed(decimalDigits)));
    if (isUncontrolled) setValue(newValue);
    if (onChange) {
      const syntheticEvent = Object.create(e, {
        target: {
          value: {
            value: newValue
          }
        }
      });
      onChange(syntheticEvent);
    }
  };
  const onKeyDownHandler = e => {
    switch (e.key) {
      case 'e':
      case 'E':
        e.preventDefault();
        return;
      case 'ArrowDown':
        e.preventDefault();
        onArrowClick(e, 'down');
        return;
      case 'ArrowUp':
        e.preventDefault();
        onArrowClick(e, 'up');
        return;
    }
  };
  const handleKeyDown = e => {
    if (showActionButton) {
      onKeyDownHandler(e);
    }
  };
  const actionButtonSize = size === 'large' ? 'regular' : 'tiny';
  return /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-MetricInputWrapper",
    className: classes,
    onKeyDown: onKeyDown,
    role: "presentation"
  }, icon && /*#__PURE__*/React.createElement(Icon, {
    "data-test": "DesignSystem-MetricInput--icon",
    name: icon,
    type: iconType,
    size: sizeMapping$1[size],
    appearance: !value ? 'disabled' : 'subtle',
    className: iconClass
  }), prefix && /*#__PURE__*/React.createElement(Text, {
    "data-test": "DesignSystem-MetricInput--prefix",
    className: prefixClass,
    size: size,
    appearance: "subtle"
  }, prefix), /*#__PURE__*/React.createElement("input", _extends$2({
    "data-test": "DesignSystem-MetricInput"
  }, baseProps, rest, {
    type: "number",
    ref: ref,
    name: name,
    defaultValue: defaultValue,
    placeholder: placeholder,
    className: inputClass,
    value: value,
    disabled: disabled,
    readOnly: readOnly,
    onChange: onChangeHandler,
    onBlur: onBlur,
    onClick: onClick,
    onFocus: onFocus,
    onKeyDown: handleKeyDown
  })), suffix && /*#__PURE__*/React.createElement(Text, {
    "data-test": "DesignSystem-MetricInput--suffix",
    className: suffixClass,
    size: size,
    appearance: "subtle"
  }, suffix), showActionButton && /*#__PURE__*/React.createElement("div", {
    className: styles$T['MetricInput-arrowIcons']
  }, /*#__PURE__*/React.createElement(Button, {
    type: "button",
    icon: "keyboard_arrow_up",
    size: actionButtonSize,
    className: `${actionButton} mb-2`,
    onClick: e => onArrowClick(e, 'up'),
    "data-test": "DesignSystem-MetricInput--upIcon"
  }), /*#__PURE__*/React.createElement(Button, {
    type: "button",
    icon: "keyboard_arrow_down",
    size: actionButtonSize,
    className: actionButton,
    onClick: e => onArrowClick(e, 'down'),
    "data-test": "DesignSystem-MetricInput--downIcon"
  })));
});
MetricInput.displayName = 'MetricInput';

const isEditable = (mask, pos) => typeof mask[pos] === 'object';
const getDefaultValue = (mask, placeholderChar) => {
  let val = '';
  for (let i = 0; i < mask.length; i++) {
    val += isEditable(mask, i) ? placeholderChar : mask[i];
  }
  return val;
};

/**
 * It works as Uncontrolled Input
 *
 * **Updated value can be passed**
 */
const InputMask = /*#__PURE__*/React.forwardRef((props, forwardRef) => {
  const {
    mask: maskProp,
    value: valueProp,
    placeholderChar = '_',
    validators = [],
    clearOnEmptyBlur = true,
    defaultValue,
    mask,
    error,
    caption,
    required,
    onChange,
    onPaste,
    onBlur,
    onFocus,
    onClear,
    className,
    id,
    helpText,
    ...rest
  } = props;
  const isEditable = React.useCallback(pos => typeof mask[pos] === 'object', [mask]);
  const getNewCursorPosition = React.useCallback((type, position) => {
    if (type === 'right') {
      for (let i = position; i < mask.length; i++) {
        if (isEditable(i)) return i;
      }
      return mask.length;
    }
    if (type === 'left') {
      for (let i = position; i >= 0; i--) {
        if (isEditable(i - 1)) return i;
      }
      return 0;
    }
    return position;
  }, [mask, isEditable]);
  const getDefaultSelection = React.useCallback(() => {
    const pos = getNewCursorPosition('right', 0);
    return {
      start: pos,
      end: pos
    };
  }, [getNewCursorPosition]);
  const getPlaceholderValue = React.useCallback((start = 0, end = mask.length - 1) => getDefaultValue(mask, placeholderChar).slice(start, end + 1), [mask, placeholderChar]);
  const defaultPlaceholderValue = React.useMemo(() => getPlaceholderValue(), [getPlaceholderValue]);
  const defaultSelection = React.useMemo(() => getDefaultSelection(), [getDefaultSelection]);
  const ref = React.useRef(null);
  const deferId = React.useRef();
  const selectionPos = React.useRef(defaultSelection);
  const newSelectionPos = React.useRef(0);
  const [value, setValue] = React.useState(defaultValue || valueProp || '');
  React.useImperativeHandle(forwardRef, () => ref.current);
  React.useEffect(() => {
    setValue(valueProp || '');
  }, [valueProp]);
  React.useEffect(() => {
    setCursorPosition(newSelectionPos.current);
  }, [value]);
  const getSelectionLength = React.useCallback(val => Math.abs(val.end - val.start), []);
  const getCurrSelection = React.useCallback(() => ({
    start: ref.current?.selectionStart || 0,
    end: ref.current?.selectionEnd || 0
  }), [ref.current]);
  const setSelectionRange_compatible_types = ['text', 'password', 'tel', 'url'];
  const setSelectionPos = React.useCallback(pos => {
    if (ref.current) {
      const el = ref.current;
      const start = Math.min(pos.start, pos.end);
      const end = Math.max(pos.start, pos.end);
      if (setSelectionRange_compatible_types.includes(el.type)) {
        el.setSelectionRange(start, end);
      } else {
        const el_type = el.type;
        el.type = 'text';
        el.setSelectionRange(start, end);
        el.type = el_type;
      }
    }
  }, [ref.current]);
  const setCursorPosition = React.useCallback(val => {
    if (document && document.activeElement === ref.current) {
      setSelectionPos({
        start: val,
        end: val
      });
    }
  }, [setSelectionPos]);
  const insertAtIndex = React.useCallback((currValue, index, iterator = 0) => {
    let newValue = '';
    const newIndex = index + 1;
    let newIterator = iterator;
    if (index >= mask.length) {
      return newValue;
    }
    if (iterator >= currValue.length) {
      selectionPos.current = {
        start: index,
        end: index
      };
      return newValue;
    }
    const m = mask[index];
    if (isEditable(index)) {
      if (currValue[iterator].match(m)) {
        newValue += currValue[iterator];
      } else {
        newValue += placeholderChar;
      }
      newIterator++;
    } else {
      newValue += m;
    }
    newValue += insertAtIndex(currValue, newIndex, newIterator);
    return newValue;
  }, [mask, placeholderChar, isEditable]);
  const updateSelection = React.useCallback(() => {
    selectionPos.current = getCurrSelection();
    deferId.current = window.requestAnimationFrame(updateSelection);
  }, [selectionPos.current, getCurrSelection]);
  const matchSeparatorValue = currValue => {
    const separator = props.placeholder || 'dd/mm/yyyy';
    if (separator.substring(0, 4) === 'yyyy') {
      return currValue && currValue[4] === separator[4] && currValue[7] === separator[7];
    }
    return currValue && currValue[2] === separator[2] && currValue[5] === separator[5];
  };
  const isSameFormat = (currValue, inputLength) => {
    const value = currValue.substring(0, inputLength);
    if (inputLength === 23) {
      const date = value.split(' - ');
      const startVal = date[0];
      const endVal = date[1];
      return matchSeparatorValue(startVal) && matchSeparatorValue(endVal);
    }
    return matchSeparatorValue(value);
  };
  const onPasteHandler = e => {
    e.preventDefault();
    const pastedValue = e.clipboardData?.getData('Text');
    const sameFormat = isSameFormat(pastedValue, pastedValue.length);
    const isValidDate = isValid(validators, pastedValue);
    if (sameFormat && onPaste && isValidDate) {
      onPaste(e, pastedValue);
      setValue(pastedValue);
    }
  };
  const onChangeHandler = React.useCallback(e => {
    const inputVal = e.currentTarget?.value;
    const currSelection = getCurrSelection();
    const start = Math.min(selectionPos.current.start, currSelection.start);
    const end = currSelection.end;
    let cursorPosition = start;
    let enteredVal = '';
    let updatedVal = '';
    let removedLength = 0;
    let insertedStringLength = 0;
    enteredVal = inputVal.slice(start, end);
    updatedVal = insertAtIndex(enteredVal, start);
    let oldValue = value;
    if (oldValue.length === 0 && (id === 'parent-TimePicker' || id === 'parent-DatePicker')) {
      oldValue = defaultPlaceholderValue;
    }
    insertedStringLength = updatedVal.length;
    if (currSelection.end > selectionPos.current.end) {
      removedLength = insertedStringLength ? getSelectionLength(selectionPos.current) : 0;
    } else if (inputVal.length < oldValue.length) {
      removedLength = oldValue.length - inputVal.length;
    }
    const maskedVal = oldValue.split('');
    for (let i = 0; i < insertedStringLength; i++) {
      maskedVal[start + i] = updatedVal[i];
    }
    for (let i = 0; i < removedLength; i++) {
      const index = start + insertedStringLength + i;
      maskedVal[index] = getPlaceholderValue(index, index);
    }
    const enteredValue = maskedVal.slice(0, mask.length).join('');
    if (updatedVal !== placeholderChar && updatedVal !== '' && !updatedVal.includes(placeholderChar) && isValid(validators, enteredValue)) {
      cursorPosition += insertedStringLength;
    }
    const newCursorPosition = getNewCursorPosition(removedLength ? 'left' : 'right', cursorPosition);
    if (removedLength === 1 && !updatedVal.length && !isEditable(cursorPosition) && newCursorPosition > 0) {
      cursorPosition = newCursorPosition;
      cursorPosition--;
      maskedVal[cursorPosition] = placeholderChar;
    } else if (removedLength !== 1) {
      cursorPosition = newCursorPosition;
    }
    const newValue = maskedVal.slice(0, mask.length).join('');
    newSelectionPos.current = cursorPosition;
    if (newValue !== oldValue && isValid(validators, newValue)) {
      if (defaultPlaceholderValue === '__:__ _M') {
        setValue(newValue.toUpperCase());
        onChange?.(e, newValue.toUpperCase());
      } else {
        setValue(newValue);
        onChange?.(e, newValue);
      }
    } else {
      window.requestAnimationFrame(() => setCursorPosition(newSelectionPos.current));
    }
  }, [selectionPos.current, validators, getCurrSelection, insertAtIndex, getSelectionLength, getPlaceholderValue, getNewCursorPosition, isEditable, setCursorPosition, setValue, onChange]);
  const onBlurHandler = React.useCallback(e => {
    let inputVal = e.currentTarget.value;
    if (clearOnEmptyBlur) {
      if (inputVal === defaultPlaceholderValue) {
        setValue('');
        inputVal = '';
      }
    }
    onBlur?.(e, inputVal);
    if (deferId.current) window.cancelAnimationFrame(deferId.current);
  }, [clearOnEmptyBlur, deferId.current, getPlaceholderValue, setValue, onBlur]);
  const onClearHandler = React.useCallback(e => {
    newSelectionPos.current = defaultSelection.start;
    setValue(defaultPlaceholderValue);
    onClear?.(e);
  }, [setValue, getPlaceholderValue, setCursorPosition, getDefaultSelection, onClear]);
  const onFocusHandler = React.useCallback(e => {
    deferId.current = window.requestAnimationFrame(updateSelection);
    if (!value) {
      newSelectionPos.current = defaultSelection.start;
      setValue(getPlaceholderValue());
    }
    onFocus?.(e);
  }, [deferId.current, value, updateSelection, setValue, setSelectionPos, onFocus]);
  const classes = React.useMemo(() => classNames({
    'd-flex flex-column flex-grow-1': true
  }, className), [className]);
  const isValueEqualPlaceholder = value === defaultPlaceholderValue;
  return /*#__PURE__*/React.createElement("div", {
    className: classes,
    "data-test": "DesignSystem-InputMask--Wrapper"
  }, /*#__PURE__*/React.createElement(Input, _extends$2({}, rest, {
    value: value,
    error: error,
    required: required,
    onFocus: onFocusHandler,
    onChange: onChangeHandler
    /**
     * input right cross icon should be visible only
     * when user provides value
     */,
    onClear: !isValueEqualPlaceholder ? onClearHandler : undefined,
    onBlur: onBlurHandler,
    onPaste: onPasteHandler,
    autoComplete: 'off',
    ref: ref
  })), /*#__PURE__*/React.createElement(HelpText, {
    message: error ? caption : helpText,
    error: error
  }));
});
InputMask.displayName = 'InputMask';
// we are adding a new property which is not present in default interface
// we could have explicitly added the interface above with definition
// but then it would force us to marks utils as optional
// as we cannot add new properties by defining the InputMask
// that would cause user to use `!` everywhere or check for utils
InputMask.utils = {
  getDefaultValue
};
const X = InputMask;

var css_248z$U = "/* Label */\n.label-module-Label--OmlF-5-0-0-9 {\n  display: inline-flex;\n}\n\n.label-module-Label--withInput-RWqFC-5-0-0-9 {\n  margin-bottom: var(--spacing-10);\n}\n\n.label-module-Label--optional-25o6w-5-0-0-9 {\n  align-items: center;\n}\n\n.label-module-Label-text-SI451-5-0-0-9 {\n  line-height: var(--font-height-s);\n  font-weight: var(--font-weight-medium);\n  word-break: break-all;\n}\n\n.label-module-Label-optionalText-BxJ0x-5-0-0-9 {\n  line-height: var(--font-height-s);\n  margin-left: var(--spacing-10);\n}\n\n.label-module-Label--disabled-06XI--5-0-0-9 {\n  color: var(--text-disabled);\n}\n\n.label-module-Label-requiredIndicator-4Cxyi-5-0-0-9 {\n  height: var(--spacing-15);\n  width: var(--spacing-15);\n  border-radius: var(--border-radius-full);\n  background: var(--alert);\n  margin-left: var(--spacing-10);\n  margin-bottom: var(--spacing-15);\n  display: inline-flex;\n}\n";
var styles$S = {"Label":"label-module-Label--OmlF-5-0-0-9","Label--withInput":"label-module-Label--withInput-RWqFC-5-0-0-9","Label--optional":"label-module-Label--optional-25o6w-5-0-0-9","Label-text":"label-module-Label-text-SI451-5-0-0-9","Label-optionalText":"label-module-Label-optionalText-BxJ0x-5-0-0-9","Label--disabled":"label-module-Label--disabled-06XI--5-0-0-9","Label-requiredIndicator":"label-module-Label-requiredIndicator-4Cxyi-5-0-0-9"};
styleInject(css_248z$U);

/**
 * *NOTE: Extends props with HTMLProps<HTMLLabelElement>*
 */
const Label = props => {
  const {
    required,
    optional,
    withInput,
    disabled,
    children,
    className,
    info,
    ...rest
  } = props;
  const baseProps = extractBaseProps(props);
  const LabelClass = classNames({
    [styles$S.Label]: true,
    [styles$S['Label--withInput']]: withInput,
    [styles$S['Label--optional']]: optional
  }, className);
  const classes = classNames({
    [styles$S['Label-text']]: true,
    [styles$S['Label--disabled']]: disabled
  });
  const renderInfo = (isRequired = false, isOptional) => {
    if (isRequired) {
      return /*#__PURE__*/React.createElement("span", {
        className: styles$S['Label-requiredIndicator'],
        "data-test": "DesignSystem-Label--RequiredIndicator"
      });
    }
    if (isOptional) {
      return /*#__PURE__*/React.createElement(Text, {
        "data-test": "DesignSystem-Label--OptionalText",
        appearance: "subtle",
        className: styles$S['Label-optionalText']
      }, "(optional)");
    }
    return null;
  };
  const renderIndicator = info => {
    return /*#__PURE__*/React.createElement(Tooltip, {
      tooltip: info
    }, /*#__PURE__*/React.createElement(Icon, {
      "data-test": "DesignSystem-Label--Info",
      name: "info",
      size: 12,
      appearance: "subtle",
      className: "ml-3 cursor-pointer d-flex align-items-center"
    }));
  };
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Label"
  }, baseProps, {
    className: LabelClass
  }), /*#__PURE__*/React.createElement(Link$1, _extends$2({
    "data-test": "DesignSystem-Label--Text",
    className: classes,
    componentType: "label"
  }, rest), children, renderInfo(required, optional), info && renderIndicator(info)));
};
Label.displayName = 'Label';

var css_248z$T = "/* Caption */\n.caption-module-Caption-x0-4O-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n}\n\n.caption-module-Caption--withInput-USihh-5-0-0-9 {\n  margin-top: var(--spacing-10);\n}\n\n.caption-module-Caption-icon-BVGQm-5-0-0-9 {\n  display: flex;\n  align-content: center;\n  margin-right: var(--spacing-10);\n}\n\n.caption-module-Caption--hidden-C-EcV-5-0-0-9 {\n  display: none;\n}\n";
var styles$R = {"Caption":"caption-module-Caption-x0-4O-5-0-0-9","Caption--withInput":"caption-module-Caption--withInput-USihh-5-0-0-9","Caption-icon":"caption-module-Caption-icon-BVGQm-5-0-0-9","Caption--hidden":"caption-module-Caption--hidden-C-EcV-5-0-0-9"};
styleInject(css_248z$T);

const Caption = props => {
  const {
    error,
    hide,
    withInput,
    children,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$R.Caption]: true,
    [styles$R['Caption--hidden']]: hide,
    [styles$R['Caption--withInput']]: withInput
  }, className);
  const errorIconClass = classNames({
    [styles$R['Caption-icon']]: true
  });
  return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
    className: classes,
    "data-test": "DesignSystem-Caption"
  }), error && /*#__PURE__*/React.createElement("div", {
    className: errorIconClass
  }, /*#__PURE__*/React.createElement(Icon, {
    size: 14,
    name: 'error',
    appearance: 'alert'
  })), /*#__PURE__*/React.createElement(Text, {
    appearance: error ? 'destructive' : 'subtle',
    size: "small",
    weight: "medium"
  }, `${children}`));
};
Caption.displayName = 'Caption';

var css_248z$S = ".legend-module-Legend--0IVR-5-0-0-9 {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: -moz-fit-content;\n  width: fit-content;\n}\n\n.legend-module-Legend-icon-AAtts-5-0-0-9 {\n  border-radius: var(--border-radius-05);\n  margin-right: var(--spacing-20);\n}\n";
var legendStyles = {"Legend":"legend-module-Legend--0IVR-5-0-0-9","Legend-icon":"legend-module-Legend-icon-AAtts-5-0-0-9"};
styleInject(css_248z$S);

const Legend = props => {
  const {
    iconAppearance,
    iconSize,
    labelAppearance,
    children,
    labelWeight,
    onMouseEnter,
    onMouseLeave,
    onClick,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const legendClass = classNames({
    [legendStyles['Legend']]: true
  }, className);
  const styles = {
    background: `var(--${iconAppearance})`,
    height: `${iconSize}px`,
    width: `${iconSize}px`
  };

  // TODO(a11y): fix accessibility
  /* eslint-disable */
  return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
    className: legendClass,
    onClick: e => onClick && onClick(e),
    onMouseEnter: e => onMouseEnter && onMouseEnter(e),
    onMouseLeave: e => onMouseLeave && onMouseLeave(e)
  }), /*#__PURE__*/React.createElement("span", {
    className: legendStyles['Legend-icon'],
    style: styles
  }), /*#__PURE__*/React.createElement(Text, {
    appearance: labelAppearance,
    weight: labelWeight
  }, children));
};
Legend.displayName = 'Legend';
Legend.defaultProps = {
  iconAppearance: 'inverse',
  iconSize: 16
};

const Editable = props => {
  const {
    className,
    onChange,
    editing,
    children
  } = props;
  const baseProps = extractBaseProps(props);
  const EditableClass = classNames({
    ['Editable']: true
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Editable"
  }, baseProps, {
    className: EditableClass
  }), /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-EditableWrapper",
    onClick: () => onChange('edit'),
    onMouseEnter: () => !editing && onChange('hover'),
    onMouseLeave: () => !editing && onChange('default')
  }, children));
};
Editable.displayName = 'Editable';

var css_248z$R = ".editableDropdown-module-EditableDropdown-8s4sE-5-0-0-9 {\n  width: 100%;\n}\n\n.editableDropdown-module-EditableDropdown-default-YIYT0-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  height: var(--spacing-80);\n  padding-left: var(--spacing-30);\n}\n";
var styles$Q = {"EditableDropdown":"editableDropdown-module-EditableDropdown-8s4sE-5-0-0-9","EditableDropdown-default":"editableDropdown-module-EditableDropdown-default-YIYT0-5-0-0-9"};
styleInject(css_248z$R);

const EditableDropdown = props => {
  const {
    placeholder,
    dropdownOptions,
    className,
    customTriggerRenderer
  } = props;
  const {
    onChange: onDropdownChange,
    onClose: onDropdownClose,
    ...rest
  } = dropdownOptions;
  const [label, setLabel] = React.useState(placeholder);
  const [editing, setEditing] = React.useState(false);
  const [showComponent, setShowComponent] = React.useState(false);
  const CompClass = classNames({
    [styles$Q['EditableDropdown']]: true
  }, className);
  const DefaultCompClass = classNames({
    [styles$Q['EditableDropdown-default']]: true,
    ['d-none']: showComponent
  });
  const EditableDropdownClass = classNames({
    ['d-none']: !showComponent
  });
  const baseProps = extractBaseProps(props);
  const getLabel = updatedLabel => {
    setLabel(updatedLabel);
  };
  const onChangeHandler = eventType => {
    switch (eventType) {
      case 'edit':
        setEditing(true);
        setShowComponent(true);
        break;
      case 'hover':
        setShowComponent(true);
        break;
      case 'default':
        setShowComponent(false);
    }
  };
  const onChange = value => {
    setEditing(false);
    setShowComponent(false);
    if (onDropdownChange) onDropdownChange(value);
  };
  const onClose = selected => {
    setEditing(false);
    setShowComponent(false);
    if (onDropdownClose) onDropdownClose(selected);
  };
  const renderComponent = componentLabel => {
    if (customTriggerRenderer) return customTriggerRenderer(componentLabel);
    return componentLabel;
  };
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-EditableDropdown"
  }, baseProps, {
    className: CompClass
  }), /*#__PURE__*/React.createElement(Editable, {
    onChange: onChangeHandler,
    editing: editing
  }, /*#__PURE__*/React.createElement(Dropdown, _extends$2({
    placeholder: placeholder,
    onChange: onChange,
    getLabel: getLabel,
    onClose: onClose,
    className: EditableDropdownClass,
    "data-test": "DesignSystem-EditableDropdown--Dropdown"
  }, rest)), /*#__PURE__*/React.createElement("div", {
    className: DefaultCompClass,
    "data-test": "DesignSystem-EditableDropdown--Default"
  }, renderComponent(label || placeholder))));
};
EditableDropdown.defaultProps = {
  placeholder: '',
  dropdownOptions: {}
};

var css_248z$Q = ".link-module-Link-MwjNx-5-0-0-9 {\n  text-decoration: none;\n  font-weight: var(--font-weight-medium);\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n  box-sizing: border-box;\n}\n\n.link-module-Link-MwjNx-5-0-0-9:focus-visible {\n  outline: none;\n}\n\n.link-module-Link--regular-hKQMh-5-0-0-9 {\n  font-size: var(--font-size);\n  height: var(--font-height);\n}\n\n.link-module-Link--tiny-5Wp1N-5-0-0-9 {\n  font-size: var(--font-size-s);\n  height: var(--font-height-s);\n  line-height: var(--font-height-s);\n}\n\n.link-module-Link--default-dCI0C-5-0-0-9 {\n  color: var(--text-link);\n}\n\n.link-module-Link--subtle-RjZLu-5-0-0-9 {\n  color: var(--inverse-lighter);\n}\n\n.link-module-Link--default-dCI0C-5-0-0-9:hover {\n  border-bottom: var(--border-width-2-5) solid var(--primary-dark);\n  color: var(--primary-dark);\n}\n\n.link-module-Link--subtle-RjZLu-5-0-0-9:hover {\n  border-bottom: var(--border-width-2-5) solid var(--inverse-light);\n  color: var(--inverse-light);\n}\n\n.link-module-Link--default-dCI0C-5-0-0-9:active {\n  color: var(--primary-darker);\n  border: none;\n}\n\n.link-module-Link--subtle-RjZLu-5-0-0-9:active {\n  color: var(--inverse);\n  border: none;\n}\n\n.link-module-Link--default-dCI0C-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n  border-radius: var(--border-radius-10);\n}\n\n.link-module-Link--subtle-RjZLu-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n  border-radius: var(--border-radius-10);\n}\n\n.link-module-Link--default-disabled-4AGTL-5-0-0-9 {\n  color: var(--primary-lighter);\n  pointer-events: none;\n}\n\n.link-module-Link--subtle-disabled-jeH3g-5-0-0-9 {\n  color: var(--inverse-lightest);\n  pointer-events: none;\n}\n";
var styles$P = {"Link":"link-module-Link-MwjNx-5-0-0-9","Link--regular":"link-module-Link--regular-hKQMh-5-0-0-9","Link--tiny":"link-module-Link--tiny-5Wp1N-5-0-0-9","Link--default":"link-module-Link--default-dCI0C-5-0-0-9","Link--subtle":"link-module-Link--subtle-RjZLu-5-0-0-9","Link--default-disabled":"link-module-Link--default-disabled-4AGTL-5-0-0-9","Link--subtle-disabled":"link-module-Link--subtle-disabled-jeH3g-5-0-0-9"};
styleInject(css_248z$Q);

/**
 *
 * The choice to use the appearance `subtle` property for the **Link** component, while using the `subtle` boolean prop for the **LinkButton** component, is based on the different roles of typography and action components.
 * - The **Link** component is primarily a typography element. Typography components use the "appearance" property to define their visual style, ensuring consistency and predictability when styling text-based elements.
 * - In contrast, the **LinkButton** component is an action component. Action components use "boolean props" to indicate variations in their behavior and appearance. Therefore, the **LinkButton** uses the `subtle` boolean prop to signify a specific visual style that aligns with other button components.
 */

const Link = props => {
  const {
    children,
    className,
    appearance,
    size,
    disabled,
    ...rest
  } = props;
  const classes = classNames({
    [styles$P.Link]: true,
    [styles$P[`Link--${size}`]]: size,
    [styles$P[`Link--${appearance}`]]: appearance,
    [styles$P[`Link--${appearance}-disabled`]]: disabled
  }, className);
  return /*#__PURE__*/React.createElement(Link$1, _extends$2({
    "data-test": "DesignSystem-Link",
    className: classes,
    componentType: "a",
    tabIndex: disabled ? -1 : 0
  }, rest), children);
};
Link.displayName = 'Link';
Link.defaultProps = {
  appearance: 'default',
  size: 'regular',
  disabled: false
};

var css_248z$P = ".message-module-Message-5m7p--5-0-0-9 {\n  display: flex;\n  flex-direction: row;\n  overflow: hidden;\n  padding: var(--spacing-30) var(--spacing-60) var(--spacing-30) var(--spacing-40);\n  border: var(--border-width-2-5) solid;\n  width: 100%;\n  border-radius: var(--border-radius-10);\n  box-sizing: border-box;\n}\n\n.message-module-Message--alert-VltpF-5-0-0-9 {\n  border-color: var(--alert);\n  background-color: rgba(217, 55, 55, 0.04);\n}\n\n.message-module-Message--success-8AZFe-5-0-0-9 {\n  border-color: var(--success);\n  background-color: rgba(46, 168, 67, 0.04);\n}\n\n.message-module-Message--info-N9C6k-5-0-0-9 {\n  border-color: var(--primary);\n  background-color: rgba(0, 112, 221, 0.04);\n}\n\n.message-module-Message--warning-sPwHB-5-0-0-9 {\n  border-color: var(--accent1);\n  background-color: rgba(240, 125, 0, 0.04);\n}\n\n.message-module-Message-icon-3vT3l-5-0-0-9 {\n  margin-right: var(--spacing-40);\n  padding-top: var(--spacing-05);\n}\n\n.message-module-Message-icon--withTitle-l6DPU-5-0-0-9 {\n  padding-top: var(--spacing-10);\n}\n\n.message-module-Message-icon--warning-IglaC-5-0-0-9 {\n  color: var(--accent1);\n}\n\n.message-module-Message-heading-vZR5c-5-0-0-9 {\n  margin-bottom: var(--spacing-10);\n}\n\n.message-module-Message-heading--alert--cn2r-5-0-0-9,\n.message-module-Message-text--alert-a8T-5-5-0-0-9 {\n  color: var(--alert-darker) !important;\n}\n\n.message-module-Message-heading--info--Uzim-5-0-0-9,\n.message-module-Message-text--info-94pB0-5-0-0-9 {\n  color: var(--primary-darker) !important;\n}\n\n.message-module-Message-heading--success-qk8Ep-5-0-0-9,\n.message-module-Message-text--success-hlaXA-5-0-0-9 {\n  color: var(--success-darker) !important;\n}\n\n.message-module-Message-heading--warning-OWfuJ-5-0-0-9,\n.message-module-Message-text--warning-tPSB8-5-0-0-9 {\n  color: var(--accent1-darker) !important;\n}\n\n.message-module-Message-actions-5bFUf-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  margin-top: var(--spacing-30);\n}\n";
var styles$O = {"Message":"message-module-Message-5m7p--5-0-0-9","Message--alert":"message-module-Message--alert-VltpF-5-0-0-9","Message--success":"message-module-Message--success-8AZFe-5-0-0-9","Message--info":"message-module-Message--info-N9C6k-5-0-0-9","Message--warning":"message-module-Message--warning-sPwHB-5-0-0-9","Message-icon":"message-module-Message-icon-3vT3l-5-0-0-9","Message-icon--withTitle":"message-module-Message-icon--withTitle-l6DPU-5-0-0-9","Message-icon--warning":"message-module-Message-icon--warning-IglaC-5-0-0-9","Message-heading":"message-module-Message-heading-vZR5c-5-0-0-9","Message-heading--alert":"message-module-Message-heading--alert--cn2r-5-0-0-9","Message-text--alert":"message-module-Message-text--alert-a8T-5-5-0-0-9","Message-heading--info":"message-module-Message-heading--info--Uzim-5-0-0-9","Message-text--info":"message-module-Message-text--info-94pB0-5-0-0-9","Message-heading--success":"message-module-Message-heading--success-qk8Ep-5-0-0-9","Message-text--success":"message-module-Message-text--success-hlaXA-5-0-0-9","Message-heading--warning":"message-module-Message-heading--warning-OWfuJ-5-0-0-9","Message-text--warning":"message-module-Message-text--warning-tPSB8-5-0-0-9","Message-actions":"message-module-Message-actions-5bFUf-5-0-0-9"};
styleInject(css_248z$P);

const IconMapping$2 = {
  success: 'check_circle',
  info: 'info',
  warning: 'warning',
  alert: 'error'
};
const Message = props => {
  const {
    actions,
    title,
    className
  } = props;
  let {
    appearance
  } = props;
  appearance = appearance === 'default' ? 'info' : appearance;
  const baseProps = extractBaseProps(props);
  const MessageClass = classNames({
    [styles$O['Message']]: true,
    [styles$O[`Message--${appearance}`]]: appearance
  }, className);
  const IconClass = classNames({
    [styles$O['Message-icon']]: true,
    [styles$O[`Message-icon--${appearance}`]]: appearance,
    [styles$O['Message-icon--withTitle']]: title
  });
  const TitleClass = classNames({
    [styles$O['Message-heading']]: true,
    [styles$O[`Message-heading--${appearance}`]]: appearance
  });
  const DescriptionClass = classNames({
    [styles$O['Message-text']]: true,
    [styles$O[`Message-text--${appearance}`]]: appearance
  });
  const renderDescription = (description, children) => {
    if (description || typeof children === 'string') {
      return /*#__PURE__*/React.createElement(Text, {
        "data-test": "DesignSystem-Message--Description",
        className: DescriptionClass
      }, description || (typeof children === 'string' ? children : ''));
    }
    if (children) {
      return /*#__PURE__*/React.createElement("div", {
        "data-test": "DesignSystem-Message--Description",
        className: styles$O['Message-description']
      }, children);
    }
    return null;
  };
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Message"
  }, baseProps, {
    className: MessageClass
  }), /*#__PURE__*/React.createElement(Icon, {
    "data-test": "DesignSystem-Message--Icon",
    name: IconMapping$2[appearance],
    appearance: appearance,
    className: IconClass
  }), /*#__PURE__*/React.createElement("div", null, title && /*#__PURE__*/React.createElement(Heading, {
    "data-test": "DesignSystem-Message--Title",
    size: "s",
    className: TitleClass
  }, title), renderDescription(props.description, props.children), actions && /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-Message--actions",
    className: styles$O['Message-actions']
  }, actions)));
};
Message.displayName = 'Message';
Message.defaultProps = {
  appearance: 'info',
  description: ''
};

var css_248z$O = ".metaList-module-Meta-dNPqh-5-0-0-9 {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: -moz-fit-content;\n  width: fit-content;\n  font-size: var(--font-size);\n}\n\n.metaList-module-MetaList-seperator-mjgNU-5-0-0-9 {\n  margin-left: var(--spacing-20);\n}\n.metaList-module-MetaList-seperator--left-eKtN8-5-0-0-9 {\n  margin-right: var(--spacing-10);\n}\n.metaList-module-Meta-icon-JwRHR-5-0-0-9 {\n  padding-right: var(--spacing-10);\n  display: flex;\n  align-items: center;\n}\n.metaList-module-MetaList-rB1dP-5-0-0-9 {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: -moz-fit-content;\n  width: fit-content;\n  font-size: var(--font-size);\n}\n.metaList-module-MetaList-item-S2e6p-5-0-0-9 {\n  margin: 0 var(--spacing-10);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: -moz-fit-content;\n  width: fit-content;\n  font-size: var(--font-size);\n}\n\n.metaList-module-MetaList-item-S2e6p-5-0-0-9:first-child {\n  margin-left: 0;\n}\n\n.metaList-module-MetaList-item-S2e6p-5-0-0-9:last-child {\n  margin-right: 0;\n}\n";
var styles$N = {"Meta":"metaList-module-Meta-dNPqh-5-0-0-9","MetaList-seperator":"metaList-module-MetaList-seperator-mjgNU-5-0-0-9","MetaList-seperator--left":"metaList-module-MetaList-seperator--left-eKtN8-5-0-0-9","Meta-icon":"metaList-module-Meta-icon-JwRHR-5-0-0-9","MetaList":"metaList-module-MetaList-rB1dP-5-0-0-9","MetaList-item":"metaList-module-MetaList-item-S2e6p-5-0-0-9"};
styleInject(css_248z$O);

const Meta = props => {
  const {
    label,
    icon,
    size,
    iconType
  } = props;
  return /*#__PURE__*/React.createElement("span", {
    "data-test": "DesignSystem-MetaList--Meta",
    className: styles$N['Meta']
  }, icon && /*#__PURE__*/React.createElement(Icon, {
    "data-test": "DesignSystem-MetaList--MetaIcon",
    name: icon,
    appearance: "subtle",
    className: styles$N['Meta-icon'],
    type: iconType,
    size: size === 'regular' ? 16 : 12
  }), /*#__PURE__*/React.createElement(Text, {
    size: size,
    "data-test": "DesignSystem-MetaList--MetaLabel",
    appearance: "subtle"
  }, label));
};
Meta.displayName = 'Meta';

const MetaList = props => {
  const {
    list,
    seperator,
    className,
    size
  } = props;
  const baseProps = extractBaseProps(props);
  const MetaClass = classNames({
    [styles$N['MetaList']]: true
  }, className);
  const SeperatorClass = classNames({
    [styles$N['MetaList-seperator']]: true
  });
  const LeftSeperatorClass = classNames({
    [styles$N['MetaList-seperator']]: true,
    [styles$N['MetaList-seperator--left']]: true
  });
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-MetaList"
  }, baseProps, {
    className: MetaClass
  }), seperator && /*#__PURE__*/React.createElement(Icon, {
    "data-test": "DesignSystem-MetaList--Seperator",
    name: "fiber_manual_record",
    size: 8,
    className: LeftSeperatorClass,
    appearance: "disabled"
  }), list.map((item, ind) => {
    const {
      label = '',
      icon,
      iconType
    } = item;
    const rightSeperator = ind !== list.length - 1;
    return /*#__PURE__*/React.createElement("span", {
      key: ind,
      className: styles$N['MetaList-item']
    }, /*#__PURE__*/React.createElement(Meta, {
      size: size,
      label: label,
      icon: icon,
      iconType: iconType
    }), rightSeperator && /*#__PURE__*/React.createElement(Icon, {
      "data-test": "DesignSystem-MetaList--rightSeperator",
      name: "fiber_manual_record",
      size: 8,
      className: SeperatorClass,
      appearance: "disabled"
    }));
  }));
};
MetaList.displayName = 'MetaList';
MetaList.defaultProps = {
  seperatorAppearance: 'disabled',
  iconAppearance: 'subtle',
  labelAppearance: 'subtle',
  size: 'regular'
};

/**
 * Key codes are deprecated, soon major browser support will end.
 */

const ARROW_LEFT = 37;
const ARROW_RIGHT = 39;

const formatPercentage = ratio => {
  return `${(ratio * 100).toFixed(2)}%`;
};
const countDecimalPlaces = value => {
  if (!isFinite(value)) return 0;
  if (Math.floor(value) !== value) {
    const valueArray = value.toString().split('.');
    return valueArray[1].length || 0;
  }
  return 0;
};
const approxEqual = (a, b) => {
  const tolerance = 0.00001;
  return Math.abs(a - b) <= tolerance;
};
const clamp = (value, min, max) => {
  if (value == null) {
    return value;
  }
  return Math.min(Math.max(value, min), max);
};
const arraysEqual = (oldValues, newValues) => {
  if (oldValues.length !== oldValues.length) return;
  return newValues.every((value, index) => value === oldValues[index]);
};
function argMin(values, argFn) {
  if (values.length === 0) {
    return undefined;
  }
  let minValue = values[0];
  let minArg = argFn(minValue);
  for (let index = 1; index < values.length; index++) {
    const value = values[index];
    const arg = argFn(value);
    if (arg < minArg) {
      minValue = value;
      minArg = arg;
    }
  }
  return minValue;
}
function fillValues(values, startIndex, endIndex, fillValue) {
  const inc = startIndex < endIndex ? 1 : -1;
  for (let index = startIndex; index !== endIndex + inc; index += inc) {
    values[index] = fillValue;
  }
}
function isElementOfType(element) {
  return element != null && element.type != null;
}

var css_248z$N = ".slider-module-Slider-6TikH-5-0-0-9 {\n  width: 100%;\n}\n\n.slider-module-Slider-wrapper-WM2J6-5-0-0-9 {\n  position: relative;\n  outline: none;\n  cursor: pointer;\n}\n\n.slider-module-Slider-wrapper--disabled-NHJzG-5-0-0-9 {\n  cursor: not-allowed;\n}\n\n.slider-module-Slider-track-d76a8-5-0-0-9 {\n  border-radius: var(--border-radius-10);\n  height: var(--spacing-40);\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n}\n\n.slider-module-Slider-progress-371yB-5-0-0-9 {\n  background: var(--secondary-lighter);\n  height: var(--spacing-05);\n  box-sizing: border-box;\n  border-radius: var(--border-radius-05);\n}\n\n.slider-module-Slider-progress--inRange-GkXBe-5-0-0-9 {\n  background: var(--primary);\n}\n\n.slider-module-Slider-progress--inRangeDisabled-zUebN-5-0-0-9 {\n  border: var(--border);\n}\n\n.slider-module-Slider-label-hbyPe-5-0-0-9 {\n  margin-top: var(--spacing-10);\n  transform: translate(-50%, 0px);\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  position: absolute;\n  -webkit-user-select: none;\n          user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n}\n\n.slider-module-Slider-ticks-J8lu0-5-0-0-9 {\n  width: var(--spacing-05);\n  height: var(--spacing-10);\n  border-radius: var(--border-radius-2-5);\n  background-color: var(--secondary-dark);\n}\n\n.slider-module-Slider-tooltip--visible-O3adL-5-0-0-9 {\n  visibility: visible;\n}\n\n.slider-module-Slider-tooltip--hidden--RxsH-5-0-0-9 {\n  visibility: hidden;\n}\n\n.slider-module-Slider-tooltip-GGohr-5-0-0-9 {\n  position: absolute;\n  color: var(--white);\n  outline: none;\n  bottom: calc(100% + 4px);\n  transform: translateX(calc(-50% + 8px));\n}\n\n.slider-module-Slider-handle-WSP0Z-5-0-0-9 {\n  height: var(--spacing-40);\n  width: var(--spacing-40);\n  position: absolute;\n  left: 0;\n  top: 0;\n  border-radius: var(--border-radius-full);\n  background-color: var(--white);\n  border: var(--border-width-05) solid var(--primary);\n  box-shadow: var(--shadow-s);\n  cursor: pointer;\n  box-sizing: border-box;\n  outline: none;\n  display: flex;\n  transition: border var(--duration--fast-01) var(--standard-productive-curve),\n    background-color var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.slider-module-Slider-handle-WSP0Z-5-0-0-9:hover {\n  background-color: var(--primary-lightest);\n}\n\n.slider-module-Slider-handle-WSP0Z-5-0-0-9:active {\n  background-color: var(--primary);\n}\n\n.slider-module-Slider-handle-WSP0Z-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n  outline: none;\n}\n\n.slider-module-Slider-handle--disabled-SdL-F-5-0-0-9 {\n  pointer-events: none;\n  background-color: var(--secondary-lighter);\n  box-shadow: none;\n}\n\n.slider-module-Slider-handle--disabled-SdL-F-5-0-0-9:focus {\n  box-shadow: none;\n}\n";
var styles$M = {"Slider":"slider-module-Slider-6TikH-5-0-0-9","Slider-wrapper":"slider-module-Slider-wrapper-WM2J6-5-0-0-9","Slider-wrapper--disabled":"slider-module-Slider-wrapper--disabled-NHJzG-5-0-0-9","Slider-track":"slider-module-Slider-track-d76a8-5-0-0-9","Slider-progress":"slider-module-Slider-progress-371yB-5-0-0-9","Slider-progress--inRange":"slider-module-Slider-progress--inRange-GkXBe-5-0-0-9","Slider-progress--inRangeDisabled":"slider-module-Slider-progress--inRangeDisabled-zUebN-5-0-0-9","Slider-label":"slider-module-Slider-label-hbyPe-5-0-0-9","Slider-ticks":"slider-module-Slider-ticks-J8lu0-5-0-0-9","Slider-tooltip":"slider-module-Slider-tooltip-GGohr-5-0-0-9","Slider-handle":"slider-module-Slider-handle-WSP0Z-5-0-0-9","Slider-handle--disabled":"slider-module-Slider-handle--disabled-SdL-F-5-0-0-9"};
styleInject(css_248z$N);

var css_248z$M = ".tooltip-module-Tooltip-BzFZs-5-0-0-9 {\n  max-width: var(--spacing-640);\n  padding: var(--spacing-10) var(--spacing-20);\n  border-radius: var(--border-radius-10);\n  z-index: 500;\n  background: var(--inverse);\n  overflow: hidden;\n  box-sizing: border-box;\n  transition: opacity 120ms;\n  transition-timing-function: cubic-bezier(0, 0, 0.38, 0.9);\n}\n\n.tooltip-module-Tooltip-text-tDwJG-5-0-0-9 {\n  word-break: break-word;\n  -webkit-hyphens: auto;\n          hyphens: auto;\n}\n\n@keyframes tooltip-module-tooltip-open-top-VGviE-5-0-0-9 {\n  from {\n    top: 0px;\n    opacity: 0;\n  }\n  to {\n    top: -4px;\n    opacity: 1;\n  }\n}\n@keyframes tooltip-module-tooltip-close-top-xSYx8-5-0-0-9 {\n  from {\n    top: -4px;\n    opacity: 1;\n  }\n  to {\n    top: 0px;\n    opacity: 0;\n  }\n}\n\n.tooltip-module-Tooltip-animation-open-top-D0Bht-5-0-0-9 {\n  animation: tooltip-module-tooltip-open-top-VGviE-5-0-0-9 120ms cubic-bezier(0, 0, 0.3, 1);\n  animation-fill-mode: forwards;\n}\n.tooltip-module-Tooltip-animation-close-top-p--Cg-5-0-0-9 {\n  animation: tooltip-module-tooltip-close-top-xSYx8-5-0-0-9 80ms cubic-bezier(0.4, 0.14, 1, 1);\n}\n@keyframes tooltip-module-tooltip-open-bottom-aJGl9-5-0-0-9 {\n  from {\n    top: -4px;\n    opacity: 0;\n  }\n  to {\n    top: 0px;\n    opacity: 1;\n  }\n}\n@keyframes tooltip-module-tooltip-close-bottom-eYZve-5-0-0-9 {\n  from {\n    top: 0px;\n    opacity: 1;\n  }\n  to {\n    top: -4px;\n    opacity: 0;\n  }\n}\n\n.tooltip-module-Tooltip-animation-open-bottom-WKD5b-5-0-0-9 {\n  animation: tooltip-module-tooltip-open-bottom-aJGl9-5-0-0-9 120ms cubic-bezier(0, 0, 0.3, 1);\n  animation-fill-mode: forwards;\n}\n.tooltip-module-Tooltip-animation-close-bottom-0Nh14-5-0-0-9 {\n  animation: tooltip-module-tooltip-close-bottom-eYZve-5-0-0-9 80ms cubic-bezier(0.4, 0.14, 1, 1);\n}\n\n@keyframes tooltip-module-tooltip-open-left-s3-1K-5-0-0-9 {\n  from {\n    left: 1px;\n    opacity: 0;\n  }\n  to {\n    left: -3px;\n    opacity: 1;\n  }\n}\n@keyframes tooltip-module-tooltip-close-left-yNuIX-5-0-0-9 {\n  from {\n    left: -3px;\n    opacity: 1;\n  }\n  to {\n    left: 1px;\n    opacity: 0;\n  }\n}\n\n.tooltip-module-Tooltip-animation-open-left-cZNy6-5-0-0-9 {\n  animation: tooltip-module-tooltip-open-left-s3-1K-5-0-0-9 120ms cubic-bezier(0, 0, 0.3, 1);\n  animation-fill-mode: forwards;\n}\n.tooltip-module-Tooltip-animation-close-left-vH8jz-5-0-0-9 {\n  animation: tooltip-module-tooltip-close-left-yNuIX-5-0-0-9 80ms cubic-bezier(0.4, 0.14, 1, 1);\n}\n\n@keyframes tooltip-module-tooltip-open-right-Ia-cr-5-0-0-9 {\n  from {\n    left: -3px;\n    opacity: 0;\n  }\n  to {\n    left: 1px;\n    opacity: 1;\n  }\n}\n@keyframes tooltip-module-tooltip-close-right-yOe2m-5-0-0-9 {\n  from {\n    left: 1px;\n    opacity: 1;\n  }\n  to {\n    left: -3px;\n    opacity: 0;\n  }\n}\n\n.tooltip-module-Tooltip-animation-open-right-PzfHz-5-0-0-9 {\n  animation: tooltip-module-tooltip-open-right-Ia-cr-5-0-0-9 120ms cubic-bezier(0, 0, 0.3, 1);\n  animation-fill-mode: forwards;\n}\n.tooltip-module-Tooltip-animation-close-right-KMa4x-5-0-0-9 {\n  animation: tooltip-module-tooltip-close-right-yOe2m-5-0-0-9 80ms cubic-bezier(0.4, 0.14, 1, 1);\n}\n\n.tooltip-module-Tooltip-container-iDy8C-5-0-0-9 {\n  transition-delay: 400ms;\n  animation-delay: 400ms;\n}\n";
var styles$L = {"Tooltip":"tooltip-module-Tooltip-BzFZs-5-0-0-9","Tooltip-text":"tooltip-module-Tooltip-text-tDwJG-5-0-0-9","Tooltip-animation-open-top":"tooltip-module-Tooltip-animation-open-top-D0Bht-5-0-0-9","tooltip-open-top":"tooltip-module-tooltip-open-top-VGviE-5-0-0-9","Tooltip-animation-close-top":"tooltip-module-Tooltip-animation-close-top-p--Cg-5-0-0-9","tooltip-close-top":"tooltip-module-tooltip-close-top-xSYx8-5-0-0-9","Tooltip-animation-open-bottom":"tooltip-module-Tooltip-animation-open-bottom-WKD5b-5-0-0-9","tooltip-open-bottom":"tooltip-module-tooltip-open-bottom-aJGl9-5-0-0-9","Tooltip-animation-close-bottom":"tooltip-module-Tooltip-animation-close-bottom-0Nh14-5-0-0-9","tooltip-close-bottom":"tooltip-module-tooltip-close-bottom-eYZve-5-0-0-9","Tooltip-animation-open-left":"tooltip-module-Tooltip-animation-open-left-cZNy6-5-0-0-9","tooltip-open-left":"tooltip-module-tooltip-open-left-s3-1K-5-0-0-9","Tooltip-animation-close-left":"tooltip-module-Tooltip-animation-close-left-vH8jz-5-0-0-9","tooltip-close-left":"tooltip-module-tooltip-close-left-yNuIX-5-0-0-9","Tooltip-animation-open-right":"tooltip-module-Tooltip-animation-open-right-PzfHz-5-0-0-9","tooltip-open-right":"tooltip-module-tooltip-open-right-Ia-cr-5-0-0-9","Tooltip-animation-close-right":"tooltip-module-Tooltip-animation-close-right-KMa4x-5-0-0-9","tooltip-close-right":"tooltip-module-tooltip-close-right-yOe2m-5-0-0-9","Tooltip-container":"tooltip-module-Tooltip-container-iDy8C-5-0-0-9"};
styleInject(css_248z$M);

class Handle extends React.Component {
  constructor(...args) {
    super(...args);
    _defineProperty$1(this, "state", {
      isHandleMoving: false,
      isHandleHovered: false
    });
    _defineProperty$1(this, "handleElement", null);
    _defineProperty$1(this, "refHandlers", {
      handle: el => this.handleElement = el
    });
    _defineProperty$1(this, "mouseEventClientOffset", event => {
      return event.clientX;
    });
    _defineProperty$1(this, "clientToValue", clientPixel => {
      const {
        stepSize,
        tickSize,
        value
      } = this.props;
      if (this.handleElement == null) {
        return value;
      }
      const clientPixelNormalized = clientPixel;
      const {
        handleMidpoint,
        handleOffset
      } = this.getHandleMidpointAndOffset(this.handleElement);
      const handleCenterPixel = handleMidpoint + handleOffset;
      const pixelDelta = clientPixelNormalized - handleCenterPixel;
      if (isNaN(pixelDelta)) {
        return value;
      }
      return value + Math.round(pixelDelta / (tickSize * stepSize)) * stepSize;
    });
    _defineProperty$1(this, "changeValue", (newValue, callback = this.props.onChange) => {
      const updatedValue = clamp(newValue, this.props.min, this.props.max);
      if (!isNaN(updatedValue) && this.props.value !== updatedValue) {
        if (callback) callback(updatedValue);
      }
      return updatedValue;
    });
    _defineProperty$1(this, "endHandleMovement", event => {
      const clientPixel = this.mouseEventClientOffset(event);
      const {
        onRelease
      } = this.props;
      this.removeDocumentEventListeners();
      this.setState({
        isHandleMoving: false
      });
      const finalValue = this.changeValue(this.clientToValue(clientPixel));
      if (onRelease) onRelease(finalValue);
    });
    _defineProperty$1(this, "continueHandleMovement", event => {
      const clientPixel = this.mouseEventClientOffset(event);
      if (this.state.isHandleMoving && !this.props.disabled) {
        const value = this.clientToValue(clientPixel);
        this.changeValue(value);
      }
    });
    _defineProperty$1(this, "beginHandleMovement", event => {
      if (this.props.disabled) return;
      document.addEventListener('mousemove', this.continueHandleMovement);
      document.addEventListener('mouseup', this.endHandleMovement);
      this.setState({
        isHandleMoving: true
      });
      const value = this.clientToValue(event.clientX);
      this.changeValue(value);
    });
    _defineProperty$1(this, "handleKeyDown", event => {
      if (this.props.disabled) return;
      const {
        stepSize,
        value
      } = this.props;
      const {
        keyCode
      } = event;

      // TODO(a11y): add ARROW_DOWN & ARROW_UP too
      if (keyCode === ARROW_LEFT) {
        this.changeValue(value - stepSize);
        event.preventDefault();
      } else if (keyCode === ARROW_RIGHT) {
        this.changeValue(value + stepSize);
        event.preventDefault();
      }
    });
    _defineProperty$1(this, "handleKeyUp", event => {
      if (this.props.disabled) return;
      if ([ARROW_LEFT, ARROW_RIGHT].indexOf(event.keyCode) >= 0) {
        const {
          onRelease
        } = this.props;
        if (onRelease) onRelease(this.props.value);
      }
    });
    _defineProperty$1(this, "getHandleMidpointAndOffset", (handleElement, useOppositeDimension = false) => {
      if (handleElement == null) {
        return {
          handleMidpoint: 0,
          handleOffset: 0
        };
      }
      const handleRect = handleElement.getBoundingClientRect();
      const sizeKey = useOppositeDimension ? 'height' : 'width';
      const handleOffset = handleRect.left;
      return {
        handleOffset,
        handleMidpoint: handleRect[sizeKey] / 2
      };
    });
    _defineProperty$1(this, "handleMouseOver", () => {
      this.setState({
        isHandleHovered: true
      });
    });
    _defineProperty$1(this, "handleMouseLeave", () => {
      this.setState({
        isHandleHovered: false
      });
    });
    _defineProperty$1(this, "removeDocumentEventListeners", () => {
      document.removeEventListener('mousemove', this.continueHandleMovement);
      document.removeEventListener('mouseup', this.endHandleMovement);
    });
  }
  componentWillUnmount() {
    this.removeDocumentEventListeners();
  }
  componentDidUpdate(_prevProps, prevState) {
    if (prevState.isHandleMoving !== this.state.isHandleMoving) {
      if (this.handleElement) this.handleElement.focus();
    }
  }
  render() {
    const {
      min,
      tickSizeRatio,
      value,
      disabled,
      label,
      isCurrentLabelHovered
    } = this.props;
    const {
      isHandleMoving,
      isHandleHovered
    } = this.state;
    const showTootlip = isHandleMoving || isHandleHovered || isCurrentLabelHovered;
    const {
      handleMidpoint
    } = this.getHandleMidpointAndOffset(this.handleElement, true);
    const offsetRatio = (value - min) * tickSizeRatio;
    const offsetCalc = `calc(${formatPercentage(offsetRatio)} - ${handleMidpoint}px)`;
    const style = {
      left: offsetCalc
    };
    const className = classNames({
      [styles$M['Slider-handle']]: true,
      [styles$M['Slider-handle--disabled']]: disabled,
      [styles$M['Slider-handle--active']]: isHandleMoving,
      ['border-0']: disabled
    });
    const TooltipClass = classNames({
      [styles$M['Slider-tooltip']]: true,
      [styles$L['Tooltip']]: true,
      ['d-none']: !showTootlip
    });
    return (
      /*#__PURE__*/
      // TODO(a11y): fix accessibility
      /* eslint-disable */
      React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
        className: className,
        onMouseOver: this.handleMouseOver,
        onMouseLeave: this.handleMouseLeave,
        onMouseDown: this.beginHandleMovement,
        onKeyDown: this.handleKeyDown,
        onKeyUp: this.handleKeyUp,
        ref: this.refHandlers.handle,
        style: style,
        tabIndex: 0,
        "data-test": "DesignSystem-MultiSlider-Handle"
      }), /*#__PURE__*/React.createElement("div", {
        className: TooltipClass,
        style: style
      }, label))
    );
  }
}

const MultiSliderHandle = () => null;
class MultiSlider extends React.Component {
  constructor(_props) {
    super(_props);
    _defineProperty$1(this, "handleElements", []);
    _defineProperty$1(this, "trackElement", null);
    _defineProperty$1(this, "getLabelPrecision", ({
      labelPrecision,
      stepSize
    }) => {
      return labelPrecision == null ? countDecimalPlaces(stepSize) : labelPrecision;
    });
    _defineProperty$1(this, "getOffsetRatio", value => {
      return clamp((value - this.props.min) * this.state.tickSizeRatio, 0, 1);
    });
    _defineProperty$1(this, "addHandleRef", ref => {
      if (ref != null) {
        this.handleElements.push(ref);
      }
    });
    _defineProperty$1(this, "getHandleValues", props => {
      const maybeHandles = React.Children.map(props.children, child => isElementOfType(child) ? child.props : null);
      let handles = maybeHandles != null ? maybeHandles : [];
      handles = handles.filter(handle => handle !== null);
      handles.sort((left, right) => left.value - right.value);
      return handles;
    });
    _defineProperty$1(this, "updateTickSize", () => {
      if (this.trackElement != null) {
        const trackSize = this.trackElement.clientWidth;
        const tickSizeRatio = 1 / (this.props.max - this.props.min);
        const tickSize = trackSize * tickSizeRatio;
        this.setState({
          tickSize,
          tickSizeRatio
        });
      }
    });
    _defineProperty$1(this, "getTrackFill", (start, end) => {
      if (start.fillAfter !== undefined) {
        return start.fillAfter;
      }
      if (end !== undefined && end.fillBefore !== undefined) {
        return end.fillBefore;
      }
      return false;
    });
    _defineProperty$1(this, "maybeHandleTrackClick", event => {
      const target = event.target;
      const canHandleTrackEvent = !this.props.disabled && target.closest('.Slider-handle') == null;
      if (canHandleTrackEvent) {
        const foundHandle = this.nearestHandleForValue(this.handleElements, handle => handle.mouseEventClientOffset(event));
        if (foundHandle) {
          foundHandle.beginHandleMovement(event);
        }
      }
    });
    _defineProperty$1(this, "getLockedHandleIndex", (startIndex, endIndex) => {
      const inc = startIndex < endIndex ? 1 : -1;
      for (let index = startIndex + inc; index !== endIndex + inc; index += inc) {
        return index;
      }
      return -1;
    });
    _defineProperty$1(this, "getNewHandleValues", (newValue, oldIndex) => {
      const handleProps = this.getHandleValues(this.props);
      const oldValues = handleProps.map(handle => handle.value);
      const newValues = oldValues.slice();
      newValues[oldIndex] = newValue;
      if (newValues.length > 1) newValues.sort((left, right) => left - right);
      const newIndex = newValues.indexOf(newValue);
      const lockIndex = this.getLockedHandleIndex(oldIndex, newIndex);
      if (lockIndex === -1) {
        fillValues(newValues, oldIndex, newIndex, newValue);
      } else {
        const lockValue = oldValues[lockIndex];
        fillValues(oldValues, oldIndex, lockIndex, lockValue);
        return oldValues;
      }
      return newValues;
    });
    _defineProperty$1(this, "onReleaseHandler", (newValue, index) => {
      const {
        onRangeRelease
      } = this.props;
      const handleProps = this.getHandleValues(this.props);
      const newValues = this.getNewHandleValues(newValue, index);

      // Range Slider callback
      if (onRangeRelease) {
        const range = newValues;
        onRangeRelease(range);
      }

      // Slider callback
      handleProps.forEach((handle, i) => {
        if (handle.onRelease) handle.onRelease(newValues[i]);
      });
    });
    _defineProperty$1(this, "onChangeHandler", (newValue, index) => {
      const {
        onRangeChange
      } = this.props;
      const handleProps = this.getHandleValues(this.props);
      const oldValues = handleProps.map(handle => handle.value);
      const newValues = this.getNewHandleValues(newValue, index);
      if (!arraysEqual(newValues, oldValues)) {
        // Range Slider Callback
        if (onRangeChange) {
          const range = newValues;
          onRangeChange(range);
        }

        // Slider callback
        handleProps.forEach((handle, i) => {
          if (handle.onChange) handle.onChange(newValues[i]);
        });
      }
    });
    _defineProperty$1(this, "formatLabel", value => {
      const {
        labelRenderer
      } = this.props;
      const labelValue = value.toFixed(this.state.labelPrecision);
      if (typeof labelRenderer === 'function') {
        return labelRenderer(Number(labelValue));
      }
      return labelValue;
    });
    _defineProperty$1(this, "renderHandles", () => {
      const {
        disabled,
        max,
        min,
        stepSize
      } = this.props;
      const handleProps = this.getHandleValues(this.props);
      if (handleProps.length === 0) {
        return null;
      }
      return handleProps.map(({
        value
      }, index) => {
        const isCurrentLabelHovered = this.state.hoveredLabelValue === Number(value.toFixed(this.state.labelPrecision));
        return /*#__PURE__*/React.createElement(Handle, {
          disabled: disabled,
          key: `${index}-${handleProps.length}`,
          max: max,
          min: min,
          onRelease: newValue => this.onReleaseHandler(newValue, index),
          onChange: newValue => this.onChangeHandler(newValue, index),
          label: this.formatLabel(value),
          ref: this.addHandleRef,
          stepSize: stepSize,
          tickSize: this.state.tickSize,
          tickSizeRatio: this.state.tickSizeRatio,
          value: value,
          isCurrentLabelHovered: isCurrentLabelHovered
        });
      });
    });
    _defineProperty$1(this, "renderLabels", () => {
      const {
        labelStepSize,
        max,
        min,
        labelRenderer,
        disabled
      } = this.props;
      const labels = [];
      const stepSizeRatio = this.state.tickSizeRatio * labelStepSize;
      const handles = this.getHandleValues(this.props);
      const activeLabels = handles.map(handle => handle.value.toFixed(this.state.labelPrecision));
      for (let i = min, offsetRatio = 0; i < max || approxEqual(i, max); i += labelStepSize, offsetRatio += stepSizeRatio) {
        const offsetPercentage = formatPercentage(offsetRatio);
        const style = {
          left: offsetPercentage
        };
        const active = !disabled && activeLabels.indexOf(i.toFixed(this.state.labelPrecision)) !== -1;
        const onClickHandler = event => {
          if (!this.props.disabled) {
            const foundHandle = this.nearestHandleForValue(this.handleElements, handle => handle.mouseEventClientOffset(event));
            if (foundHandle) {
              foundHandle.changeValue(i);
            }
          }
        };
        const SliderTicksClass = classNames({
          [styles$M['Slider-ticks']]: true,
          ['bg-dark']: active
        });

        // TODO(a11y): fix accessibility
        /* eslint-disable */
        labels.push(/*#__PURE__*/React.createElement("div", {
          onClick: onClickHandler,
          className: styles$M['Slider-label'],
          key: i,
          style: style,
          onMouseOver: () => this.handleLabelMouseOver(i),
          onMouseLeave: this.handleLabelMouseLeave,
          "data-test": "DesignSystem-MultiSlider-Label"
        }, /*#__PURE__*/React.createElement("span", {
          className: SliderTicksClass
        }), labelRenderer !== false && /*#__PURE__*/React.createElement(Text, {
          size: "small",
          appearance: active ? 'default' : 'disabled'
        }, this.formatLabel(i))));
      }
      return labels;
    });
    _defineProperty$1(this, "renderTrackFill", (index, start, end) => {
      const [startRatio, endRatio] = [this.getOffsetRatio(start.value), this.getOffsetRatio(end.value)].sort((left, right) => left - right);
      const startOffset = Number((startRatio * 100).toFixed(2));
      const endOffset = Number(((1 - endRatio) * 100).toFixed(2));
      const width = `${100 - endOffset - startOffset}%`;
      const orientationStyle = {
        width
      };
      const style = {
        ...orientationStyle
      };
      const fillTrack = this.getTrackFill(start, end);
      const classes = classNames({
        [styles$M['Slider-progress']]: true,
        [styles$M['Slider-progress--disabled']]: this.props.disabled,
        [styles$M['Slider-progress--inRange']]: fillTrack,
        [styles$M['Slider-progress--inRangeDisabled']]: fillTrack && this.props.disabled
      });
      return /*#__PURE__*/React.createElement("div", {
        key: `track-${index}`,
        className: classes,
        style: style
      });
    });
    _defineProperty$1(this, "renderTracks", () => {
      const trackStops = this.getHandleValues(this.props);
      trackStops.push({
        value: this.props.max
      });
      let previous = {
        value: this.props.min || 0
      };
      const handles = [];
      trackStops.forEach((track, index) => {
        const current = track;
        handles.push(this.renderTrackFill(index, previous, current));
        previous = current;
      });
      return handles;
    });
    _defineProperty$1(this, "handleLabelMouseOver", value => {
      this.setState({
        hoveredLabelValue: value
      });
    });
    _defineProperty$1(this, "handleLabelMouseLeave", () => {
      this.setState({
        hoveredLabelValue: undefined
      });
    });
    this.state = {
      labelPrecision: this.getLabelPrecision(this.props),
      tickSize: 0,
      tickSizeRatio: 0
    };
  }
  getDerivedStateFromProps(props) {
    return {
      labelPrecision: this.getLabelPrecision(props)
    };
  }
  getSnapshotBeforeUpdate(prevProps) {
    const prevHandleProps = this.getHandleValues(prevProps);
    const newHandleProps = this.getHandleValues(this.props);
    if (newHandleProps.length !== prevHandleProps.length) {
      this.handleElements = [];
    }
    return null;
  }
  componentDidMount() {
    this.updateTickSize();
  }
  nearestHandleForValue(handles, getOffset) {
    return argMin(handles, handle => {
      const offset = getOffset(handle);
      const offsetValue = handle.clientToValue(offset);
      const handleValue = handle.props.value;
      return Math.abs(offsetValue - handleValue);
    });
  }
  render() {
    const {
      label,
      className
    } = this.props;
    const baseProps = extractBaseProps(this.props);
    const SliderClass = classNames({
      [styles$M['Slider']]: true
    }, className);
    const WrapperClass = classNames({
      [styles$M['Slider-wrapper']]: true,
      [styles$M['Slider-wrapper--disabled']]: this.props.disabled
    });
    return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
      className: SliderClass,
      "data-test": "DesignSystem-MultiSlider"
    }), label && /*#__PURE__*/React.createElement(Label, {
      withInput: true
    }, label), /*#__PURE__*/React.createElement("div", {
      className: WrapperClass
    }, /*#__PURE__*/React.createElement("div", {
      className: styles$M['Slider-track'],
      ref: ref => this.trackElement = ref,
      onMouseDown: this.maybeHandleTrackClick,
      "data-test": "DesignSystem-MultiSlider-Slider-Track"
    }, this.renderTracks()), /*#__PURE__*/React.createElement("div", {
      className: styles$M['Slider-axis']
    }, this.renderLabels()), this.renderHandles()));
  }
}
_defineProperty$1(MultiSlider, "defaultProps", {
  labelStepSize: 1,
  max: 10,
  min: 0,
  stepSize: 1,
  labelRenderer: true
});
_defineProperty$1(MultiSlider, "Handle", MultiSliderHandle);

const OutsideClick = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    children,
    className,
    onOutsideClick,
    ...rest
  } = props;
  const innerRef = React.useRef(null);
  React.useImperativeHandle(ref, () => innerRef.current, [innerRef]);
  React.useEffect(() => {
    document.addEventListener('click', handleOutsideClick, true);
    return () => {
      document.removeEventListener('click', handleOutsideClick);
    };
  }, []);
  const handleOutsideClick = React.useCallback(event => {
    const element = innerRef;
    if (!event.target || !element.current) {
      return;
    }
    if (!element.current.contains(event.target)) {
      onOutsideClick(event);
    }
  }, []);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    ref: innerRef
  }, rest, {
    className: className
  }), children);
});
OutsideClick.displayName = 'OutsideClick';

const Paragraph = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    appearance,
    children,
    className,
    color,
    ...rest
  } = props;
  const classes = classNames({
    [textStyles.Text]: true,
    [textStyles[`Text--${appearance}`]]: !color && appearance,
    [`color-${color}`]: color
  }, className);
  return /*#__PURE__*/React.createElement(Link$1, _extends$2({
    ref: ref,
    "data-test": "DesignSystem-Paragraph"
  }, rest, {
    className: classes,
    componentType: "p"
  }), children);
});
Paragraph.displayName = 'Paragraph';
Paragraph.defaultProps = {
  appearance: 'default'
};

var css_248z$L = ".progressBar-module-ProgressBar-I9SrG-5-0-0-9 {\n  width: 100%;\n  border-radius: var(--border-radius-10);\n  background: var(--secondary-lighter);\n}\n\n.progressBar-module-ProgressBar-indicator-Wk5Cj-5-0-0-9 {\n  background-color: var(--primary);\n  border-radius: var(--border-radius-10);\n  transition: var(--duration--slow-01) var(--standard-expressive-curve);\n  height: 100%;\n}\n\n.progressBar-module-ProgressBar-indicator--small-3qwXo-5-0-0-9 {\n  height: var(--spacing-10);\n}\n\n.progressBar-module-ProgressBar-indicator--regular-XWwir-5-0-0-9 {\n  height: var(--spacing-20);\n}\n\n.progressBar-module-ProgressBar-indicator--indeterminate-ReTta-5-0-0-9 {\n  background-color: var(--primary);\n  border-radius: var(--border-radius-10);\n  position: absolute;\n  bottom: 0;\n  top: 0;\n  width: 32%;\n  animation: progressBar-module-indeterminate-progress-bar-WrhBP-5-0-0-9 1.4s infinite linear;\n}\n\n@keyframes progressBar-module-indeterminate-progress-bar-WrhBP-5-0-0-9 {\n  from {\n    left: -32%;\n  }\n  to {\n    left: 100%;\n  }\n}\n";
var styles$K = {"ProgressBar":"progressBar-module-ProgressBar-I9SrG-5-0-0-9","ProgressBar-indicator":"progressBar-module-ProgressBar-indicator-Wk5Cj-5-0-0-9","ProgressBar-indicator--small":"progressBar-module-ProgressBar-indicator--small-3qwXo-5-0-0-9","ProgressBar-indicator--regular":"progressBar-module-ProgressBar-indicator--regular-XWwir-5-0-0-9","ProgressBar-indicator--indeterminate":"progressBar-module-ProgressBar-indicator--indeterminate-ReTta-5-0-0-9"};
styleInject(css_248z$L);

const ProgressBar = props => {
  const {
    max,
    value,
    className,
    size,
    state
  } = props;
  const baseProps = extractBaseProps(props);
  const style = state !== 'indeterminate' ? {
    width: value && value > 0 ? `${Math.min(value, max) * 100 / max}%` : '0'
  } : {};
  const ProgressBarClass = classNames({
    [styles$K.ProgressBar]: true,
    [styles$K['ProgressBar-indicator--small']]: size === 'small',
    [styles$K['ProgressBar-indicator--regular']]: size === 'regular',
    ['position-relative overflow-hidden']: state === 'indeterminate'
  }, className);
  const ProgressIndicatorClass = classNames({
    [styles$K['ProgressBar-indicator']]: true,
    [styles$K['ProgressBar-indicator--indeterminate']]: state === 'indeterminate'
  });
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-ProgressBar"
  }, baseProps, {
    className: ProgressBarClass
  }), /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-ProgressBar-Indicator",
    className: ProgressIndicatorClass,
    style: style
  }));
};
ProgressBar.displayName = 'ProgressBar';
ProgressBar.defaultProps = {
  max: 100,
  size: 'regular',
  state: 'default'
};

var css_248z$K = "/* Radio */\n\n.radio-module-Radio-sJTSN-5-0-0-9 {\n  display: flex;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n  padding-top: var(--spacing-05);\n  padding-bottom: var(--spacing-05);\n  width: -moz-fit-content;\n  width: fit-content;\n}\n\n.radio-module-Radio-outerWrapper-y7yec-5-0-0-9 {\n  position: relative;\n  flex-shrink: 0;\n  margin-top: var(--spacing-05);\n}\n\n.radio-module-Radio-defaultWrapper-42-VN-5-0-0-9 {\n  border: var(--border);\n}\n\n.radio-module-Radio-errorWrapper-EIko4-5-0-0-9 {\n  border: var(--border);\n  border-color: var(--alert);\n}\n\n.radio-module-Radio-outerWrapper--regular-GAbrZ-5-0-0-9 {\n  height: var(--spacing-40);\n  width: var(--spacing-40);\n}\n\n.radio-module-Radio-outerWrapper--tiny-ICX4H-5-0-0-9 {\n  height: var(--spacing-30);\n  width: var(--spacing-30);\n}\n\n.radio-module-Radio-input-tMZXc-5-0-0-9 {\n  opacity: 0;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  z-index: 2;\n  margin: 0;\n  cursor: pointer;\n}\n\n.radio-module-Radio-labelWrapper-aPfU--5-0-0-9 {\n  padding-left: var(--spacing-20);\n  display: flex;\n  flex-direction: column;\n}\n\n.radio-module-Radio-Label-pyxfI-5-0-0-9 {\n  display: flex;\n  cursor: pointer;\n}\n\n.radio-module-Radio-wrapper-X9saa-5-0-0-9 {\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  border-radius: var(--border-radius-full);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  z-index: 1;\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.radio-module-Radio--disabled-Mbuyd-5-0-0-9 {\n  pointer-events: none;\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:hover .radio-module-Radio-wrapper-X9saa-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--secondary-dark);\n  background-color: var(--secondary-lighter);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:active .radio-module-Radio-wrapper-X9saa-5-0-0-9 {\n  background-color: var(--secondary-light);\n  border: var(--border-width-2-5) solid var(--inverse-lightest);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:hover .radio-module-Radio-errorWrapper-EIko4-5-0-0-9 {\n  border: var(--border);\n  background-color: var(--secondary-lighter);\n  border-color: var(--alert-dark);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:active .radio-module-Radio-errorWrapper-EIko4-5-0-0-9 {\n  border: var(--border);\n  background-color: var(--secondary-light);\n  border-color: var(--alert-darker);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:focus-within .radio-module-Radio-wrapper-X9saa-5-0-0-9 {\n  outline: 0;\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n  border-radius: var(--border-radius-full);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:focus-within .radio-module-Radio-errorWrapper-EIko4-5-0-0-9 {\n  outline: 0;\n  box-shadow: var(--shadow-spread) var(--alert-shadow);\n  border-radius: var(--border-radius-full);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:focus-within .radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-wrapper-X9saa-5-0-0-9 {\n  outline: 0;\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:focus-within .radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-errorWrapper-EIko4-5-0-0-9 {\n  outline: 0;\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n}\n\n.radio-module-Radio--disabled-Mbuyd-5-0-0-9 .radio-module-Radio-wrapper-X9saa-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--secondary-light);\n  background-color: var(--secondary-lightest);\n}\n\n.radio-module-Radio--disabled-Mbuyd-5-0-0-9 .radio-module-Radio-errorWrapper-EIko4-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--alert-lighter);\n  background-color: var(--secondary-lightest);\n}\n\n.radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-wrapper-X9saa-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--primary);\n}\n\n.radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-errorWrapper-EIko4-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--alert);\n}\n\n.radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-wrapper-X9saa-5-0-0-9:after {\n  display: block;\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.radio-module-Radio-wrapper-X9saa-5-0-0-9:after {\n  content: '';\n  display: none;\n  border-radius: var(--border-radius-full);\n  background: var(--primary);\n}\n\n.radio-module-Radio-wrapper--regular-bCOY2-5-0-0-9:after {\n  width: var(--spacing-20);\n  height: var(--spacing-20);\n}\n\n.radio-module-Radio-wrapper--tiny-V-uaD-5-0-0-9:after {\n  width: var(--spacing-10);\n  height: var(--spacing-10);\n  border: var(--border-width-2-5) solid var(--primary);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:hover .radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-wrapper-X9saa-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--primary-dark);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:hover .radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-wrapper-X9saa-5-0-0-9:after {\n  background: var(--primary-dark);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:hover .radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-wrapper--tiny-V-uaD-5-0-0-9:after {\n  border: var(--border-width-2-5) solid var(--primary-dark);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:active .radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-wrapper-X9saa-5-0-0-9 {\n  background-color: var(--secondary-light);\n  border: var(--border-width-2-5) solid var(--primary-darker);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:hover .radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-errorWrapper-EIko4-5-0-0-9 {\n  background-color: var(--secondary-lighter);\n  border: var(--border-width-2-5) solid var(--alert-dark);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:active .radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-errorWrapper-EIko4-5-0-0-9 {\n  background-color: var(--secondary-light);\n  border: var(--border-width-2-5) solid var(--alert-darker);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:active .radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-wrapper-X9saa-5-0-0-9:after {\n  background: var(--primary-darker);\n}\n\n.radio-module-Radio-sJTSN-5-0-0-9:active .radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-wrapper--tiny-V-uaD-5-0-0-9:after {\n  border: var(--border-width-2-5) solid var(--primary-darker);\n}\n\n.radio-module-Radio--disabled-Mbuyd-5-0-0-9 .radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-wrapper-X9saa-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--primary-lighter);\n  background-color: var(--secondary-lightest);\n}\n\n.radio-module-Radio--disabled-Mbuyd-5-0-0-9 .radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-errorWrapper-EIko4-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--alert-lighter);\n  background-color: var(--secondary-lightest);\n}\n\n.radio-module-Radio--disabled-Mbuyd-5-0-0-9 .radio-module-Radio-input-tMZXc-5-0-0-9:checked ~ .radio-module-Radio-wrapper-X9saa-5-0-0-9:after {\n  background: var(--primary-lighter);\n}\n\n.radio-module-Radio--disabled-Mbuyd-5-0-0-9 .radio-module-Radio-input-tMZXc-5-0-0-9 ~ .radio-module-Radio-wrapper-X9saa-5-0-0-9:focus {\n  box-shadow: none;\n}\n\n.radio-module-Radio--disabled-Mbuyd-5-0-0-9 .radio-module-Radio-input-tMZXc-5-0-0-9 ~ .radio-module-Radio-errorWrapper-EIko4-5-0-0-9:focus {\n  box-shadow: none;\n}\n";
var styles$J = {"Radio":"radio-module-Radio-sJTSN-5-0-0-9","Radio-outerWrapper":"radio-module-Radio-outerWrapper-y7yec-5-0-0-9","Radio-defaultWrapper":"radio-module-Radio-defaultWrapper-42-VN-5-0-0-9","Radio-errorWrapper":"radio-module-Radio-errorWrapper-EIko4-5-0-0-9","Radio-outerWrapper--regular":"radio-module-Radio-outerWrapper--regular-GAbrZ-5-0-0-9","Radio-outerWrapper--tiny":"radio-module-Radio-outerWrapper--tiny-ICX4H-5-0-0-9","Radio-input":"radio-module-Radio-input-tMZXc-5-0-0-9","Radio-labelWrapper":"radio-module-Radio-labelWrapper-aPfU--5-0-0-9","Radio-Label":"radio-module-Radio-Label-pyxfI-5-0-0-9","Radio-wrapper":"radio-module-Radio-wrapper-X9saa-5-0-0-9","Radio--disabled":"radio-module-Radio--disabled-Mbuyd-5-0-0-9","Radio-wrapper--regular":"radio-module-Radio-wrapper--regular-bCOY2-5-0-0-9","Radio-wrapper--tiny":"radio-module-Radio-wrapper--tiny-V-uaD-5-0-0-9"};
styleInject(css_248z$K);

const Radio = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {
  const {
    size = 'regular',
    label,
    disabled,
    onChange,
    name,
    value,
    checked,
    defaultChecked,
    className,
    helpText,
    error,
    ...rest
  } = props;
  const ref = React.useRef(null);
  React.useImperativeHandle(forwardedRef, () => {
    return ref.current;
  });
  const RadioClass = classNames({
    [styles$J['Radio']]: true,
    [styles$J['Radio--disabled']]: disabled
  }, className);
  const RadioWrapper = classNames({
    [styles$J['Radio-wrapper']]: true,
    [styles$J[`Radio-defaultWrapper`]]: !error,
    [styles$J[`Radio-errorWrapper`]]: error,
    [styles$J[`Radio-wrapper--${size}`]]: size
  });
  const RadioOuterWrapper = classNames({
    [styles$J['Radio-outerWrapper']]: true,
    [styles$J[`Radio-outerWrapper--${size}`]]: size
  });
  const RadioLabelClass = classNames({
    [styles$J['Radio-Label']]: true
  });
  const id = `${name}-${label}-${uidGenerator()}`;
  return /*#__PURE__*/React.createElement("div", {
    className: RadioClass,
    "data-test": "DesignSystem-Radio"
  }, /*#__PURE__*/React.createElement("div", {
    className: RadioOuterWrapper,
    "data-test": "DesignSystem-Radio-OuterWrapper"
  }, /*#__PURE__*/React.createElement("input", _extends$2({
    tabIndex: 0,
    type: "radio",
    disabled: disabled,
    checked: checked,
    defaultChecked: defaultChecked,
    ref: ref,
    name: name,
    value: value,
    onChange: onChange,
    className: styles$J['Radio-input'],
    id: id,
    "data-test": "DesignSystem-Radio-Input"
  }, rest)), /*#__PURE__*/React.createElement("span", {
    "data-test": "DesignSystem-Radio-wrapper",
    className: RadioWrapper
  })), /*#__PURE__*/React.createElement("div", {
    className: styles$J['Radio-labelWrapper']
  }, label && /*#__PURE__*/React.createElement("label", {
    className: RadioLabelClass,
    htmlFor: id,
    "data-test": "DesignSystem-Radio-Label"
  }, /*#__PURE__*/React.createElement(Text, {
    size: size === 'tiny' ? 'small' : 'regular',
    appearance: disabled ? 'disabled' : 'default'
  }, label)), helpText && /*#__PURE__*/React.createElement(Text, {
    "data-test": "DesignSystem-Radio-HelpText",
    size: "small",
    appearance: disabled ? 'disabled' : 'subtle'
  }, helpText.trim())));
});
Radio.displayName = 'Radio';

const Row = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    className,
    children,
    ...rest
  } = props;
  const classes = classNames({
    [rowStyles.Row]: true
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Row",
    ref: ref
  }, rest, {
    className: classes
  }), children);
});
Row.displayName = 'Row';

var css_248z$J = ".statusHint-module-StatusHint-20-9Y-5-0-0-9 {\n  display: flex;\n  flex-direction: row;\n  width: -moz-fit-content;\n  width: fit-content;\n}\n\n.statusHint-module-StatusHint-icon-XMbB3-5-0-0-9 {\n  flex-shrink: 0;\n  border-radius: var(--border-radius-full);\n  height: var(--spacing-20);\n  width: var(--spacing-20);\n  margin-right: var(--spacing-20);\n  margin-top: var(--spacing-15);\n}\n\n.statusHint-module-StatusHint--alert-6GWUf-5-0-0-9 {\n  background: var(--alert);\n}\n\n.statusHint-module-StatusHint--success-vLRLm-5-0-0-9 {\n  background: var(--success);\n}\n\n.statusHint-module-StatusHint--warning-Go4Xc-5-0-0-9 {\n  background: var(--warning);\n}\n\n.statusHint-module-StatusHint--info--Qb0E-5-0-0-9 {\n  background: var(--primary);\n}\n\n.statusHint-module-StatusHint--default-XXxYB-5-0-0-9 {\n  background: var(--secondary-light);\n}\n";
var styles$I = {"StatusHint":"statusHint-module-StatusHint-20-9Y-5-0-0-9","StatusHint-icon":"statusHint-module-StatusHint-icon-XMbB3-5-0-0-9","StatusHint--alert":"statusHint-module-StatusHint--alert-6GWUf-5-0-0-9","StatusHint--success":"statusHint-module-StatusHint--success-vLRLm-5-0-0-9","StatusHint--warning":"statusHint-module-StatusHint--warning-Go4Xc-5-0-0-9","StatusHint--info":"statusHint-module-StatusHint--info--Qb0E-5-0-0-9","StatusHint--default":"statusHint-module-StatusHint--default-XXxYB-5-0-0-9"};
styleInject(css_248z$J);

const StatusHint = props => {
  const {
    appearance,
    children,
    onMouseEnter,
    onMouseLeave,
    onClick,
    truncateLabel,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const StatusHintClass = classNames({
    [styles$I.StatusHint]: true,
    [styles$14.StatusHint]: true
  }, className);
  const StatusHintIconClass = classNames({
    [styles$I['StatusHint-icon']]: true,
    [styles$I[`StatusHint--${appearance}`]]: appearance
  });
  const StatusHintTextClass = classNames({
    ['ellipsis--noWrap']: truncateLabel
  });
  return (
    /*#__PURE__*/
    // TODO(a11y): fix accessibility
    /* eslint-disable */
    React.createElement("div", _extends$2({
      "data-test": "DesignSystem-StatusHint"
    }, baseProps, {
      className: StatusHintClass,
      onClick: e => onClick && onClick(e),
      onMouseEnter: e => onMouseEnter && onMouseEnter(e),
      onMouseLeave: e => onMouseLeave && onMouseLeave(e)
    }), /*#__PURE__*/React.createElement("span", {
      "data-test": "DesignSystem-StatusHint--Icon",
      className: StatusHintIconClass
    }), /*#__PURE__*/React.createElement(Text, {
      "data-test": "DesignSystem-StatusHint--Text",
      weight: 'medium',
      className: StatusHintTextClass
    }, children))
  );
};
StatusHint.displayName = 'StatusHint';
StatusHint.defaultProps = {
  appearance: 'default'
};

var css_248z$I = ".pills-module-Pills--00hR-5-0-0-9 {\n  /* 160px */\n  max-width: calc(var(--spacing-40) * 10);\n  /* truncate */\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: var(--font-size-s);\n  line-height: var(--font-height-s);\n  text-transform: uppercase;\n  padding-right: var(--spacing-15);\n  padding-left: var(--spacing-15);\n  padding-top: var(--spacing-05);\n  padding-bottom: var(--spacing-05);\n  border-radius: var(--border-radius-full);\n  display: inline-block;\n  box-sizing: border-box;\n  font-weight: var(--font-weight-bold);\n  cursor: default;\n}\n";
var styles$H = {"Pills":"pills-module-Pills--00hR-5-0-0-9"};
styleInject(css_248z$I);

const Pills = props => {
  const {
    appearance,
    children,
    subtle,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$H.Pills]: true,
    [badgeStyles[`Badge--${appearance}`]]: appearance && !subtle,
    [badgeStyles[`Badge--subtle-${appearance}`]]: subtle
  }, className);
  return /*#__PURE__*/React.createElement("span", _extends$2({
    "data-test": "DesignSystem-Pills"
  }, baseProps, {
    className: classes
  }), children);
};
Pills.displayName = 'Pills';
Pills.defaultProps = {
  appearance: 'secondary'
};

var css_248z$H = "@keyframes spinner-module-rotate--J0VK-5-0-0-9 {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes spinner-module-spin-EtIAo-5-0-0-9 {\n  0% {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n  }\n  50% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -35px;\n  }\n  100% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -124px;\n  }\n}\n\n.spinner-module-Spinner-Gnrbl-5-0-0-9 {\n  animation: spinner-module-rotate--J0VK-5-0-0-9 2s linear infinite;\n}\n\n.spinner-module-Spinner--xsmall-fTG9G-5-0-0-9 {\n  height: var(--spacing-30);\n  width: var(--spacing-30);\n}\n\n.spinner-module-Spinner--small-H43c1-5-0-0-9 {\n  height: var(--spacing-40);\n  width: var(--spacing-40);\n}\n\n.spinner-module-Spinner--medium-FJ68A-5-0-0-9 {\n  height: var(--spacing-80);\n  width: var(--spacing-80);\n}\n\n.spinner-module-Spinner--large-mEm-A-5-0-0-9 {\n  height: var(--spacing-120);\n  width: var(--spacing-120);\n}\n\n.spinner-module-Circle--gSx3-5-0-0-9 {\n  stroke-linecap: round;\n  stroke-dasharray: 1 200;\n  stroke-dashoffset: 0;\n  animation: spinner-module-spin-EtIAo-5-0-0-9 1.5s ease-in-out infinite;\n}\n\n.spinner-module-Circle--primary-REY8w-5-0-0-9 {\n  stroke: var(--primary);\n}\n\n.spinner-module-Circle--secondary-KzVQ8-5-0-0-9 {\n  stroke: var(--secondary-dark);\n}\n\n.spinner-module-Circle--white-xc8CI-5-0-0-9 {\n  stroke: var(--white);\n}\n";
var styles$G = {"Spinner":"spinner-module-Spinner-Gnrbl-5-0-0-9","rotate":"spinner-module-rotate--J0VK-5-0-0-9","Spinner--xsmall":"spinner-module-Spinner--xsmall-fTG9G-5-0-0-9","Spinner--small":"spinner-module-Spinner--small-H43c1-5-0-0-9","Spinner--medium":"spinner-module-Spinner--medium-FJ68A-5-0-0-9","Spinner--large":"spinner-module-Spinner--large-mEm-A-5-0-0-9","Circle":"spinner-module-Circle--gSx3-5-0-0-9","spin":"spinner-module-spin-EtIAo-5-0-0-9","Circle--primary":"spinner-module-Circle--primary-REY8w-5-0-0-9","Circle--secondary":"spinner-module-Circle--secondary-KzVQ8-5-0-0-9","Circle--white":"spinner-module-Circle--white-xc8CI-5-0-0-9"};
styleInject(css_248z$H);

const Spinner = props => {
  const {
    appearance,
    size,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const wrapperClasses = classNames({
    [styles$G.Spinner]: true,
    [styles$G[`Spinner--${size}`]]: size
  }, className);
  const circleClasses = classNames({
    [styles$G.Circle]: true,
    [styles$G[`Circle--${appearance}`]]: appearance
  });
  const svgProps = {
    viewBox: '0 0 50 50'
  };
  const strokeWidthMapping = {
    xsmall: 8,
    small: 6,
    medium: 4,
    large: 4
  };
  const circleProps = {
    cx: 25,
    cy: 25,
    r: 20,
    fill: 'none',
    strokeMiterlimit: '10',
    strokeWidth: strokeWidthMapping[size]
  };
  return /*#__PURE__*/React.createElement("svg", _extends$2({}, baseProps, {
    className: wrapperClasses
  }, svgProps), /*#__PURE__*/React.createElement("circle", _extends$2({
    className: circleClasses
  }, circleProps)));
};
Spinner.displayName = 'Spinner';
Spinner.defaultProps = {
  appearance: 'primary',
  size: 'medium'
};

const Slider = props => {
  const {
    value: valueProp,
    defaultValue,
    onRelease,
    onChange,
    ...rest
  } = props;
  const [value, setValue] = React.useState(valueProp === undefined ? defaultValue : valueProp);
  React.useEffect(() => {
    if (valueProp !== undefined) {
      setValue(valueProp);
    }
  }, [valueProp]);
  const onChangeHandler = newValue => {
    if (valueProp === undefined) {
      setValue(newValue);
    }
    if (onChange) onChange(newValue);
  };
  return /*#__PURE__*/React.createElement(MultiSlider, rest, /*#__PURE__*/React.createElement(MultiSlider.Handle, {
    value: value,
    onChange: onChangeHandler,
    onRelease: onRelease,
    fillBefore: true
  }));
};
Slider.displayName = 'Slider';
Slider.defaultProps = {
  ...MultiSlider.defaultProps,
  defaultValue: 0
};

var RangeIndex = /*#__PURE__*/function (RangeIndex) {
  RangeIndex[RangeIndex["START"] = 0] = "START";
  RangeIndex[RangeIndex["END"] = 1] = "END";
  return RangeIndex;
}(RangeIndex || {});
const RangeSlider = props => {
  const {
    value: valueProp,
    defaultValue,
    onChange,
    onRelease,
    ...rest
  } = props;
  const [value, setValue] = React.useState(valueProp === undefined ? defaultValue : valueProp);
  React.useEffect(() => {
    if (valueProp !== undefined) {
      setValue(valueProp);
    }
  }, [valueProp]);
  const onChangeHandler = range => {
    if (valueProp === undefined) {
      setValue(range);
    }
    if (onChange) onChange(range);
  };
  return /*#__PURE__*/React.createElement(MultiSlider, _extends$2({
    onRangeChange: onChangeHandler,
    onRangeRelease: onRelease
  }, rest), /*#__PURE__*/React.createElement(MultiSlider.Handle, {
    value: value[RangeIndex.START],
    fillAfter: true
  }), /*#__PURE__*/React.createElement(MultiSlider.Handle, {
    value: value[RangeIndex.END]
  }));
};
RangeSlider.displayName = 'RangeSlider';
RangeSlider.defaultProps = {
  ...MultiSlider.defaultProps,
  defaultValue: [0, 10]
};

var css_248z$G = "/* Subheading */\n.subheading-module-Subheading-qdIJH-5-0-0-9 {\n  margin: 0;\n  font-weight: var(--font-weight-bolder);\n  font-size: var(--spacing-30);\n  line-height: var(--font-height-m);\n  letter-spacing: var(--letter-spacing);\n  text-transform: uppercase;\n}\n\n.subheading-module-Subheading--default-wlFtB-5-0-0-9 {\n  color: var(--text);\n}\n\n.subheading-module-Subheading--subtle--rivS-5-0-0-9 {\n  color: var(--text-subtle);\n}\n\n.subheading-module-Subheading--disabled-LAyqD-5-0-0-9 {\n  color: var(--text-disabled);\n}\n\n.subheading-module-Subheading--white-Y8Awi-5-0-0-9 {\n  color: var(--text-white);\n}\n";
var styles$F = {"Subheading":"subheading-module-Subheading-qdIJH-5-0-0-9","Subheading--default":"subheading-module-Subheading--default-wlFtB-5-0-0-9","Subheading--subtle":"subheading-module-Subheading--subtle--rivS-5-0-0-9","Subheading--disabled":"subheading-module-Subheading--disabled-LAyqD-5-0-0-9","Subheading--white":"subheading-module-Subheading--white-Y8Awi-5-0-0-9"};
styleInject(css_248z$G);

const Subheading = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    appearance,
    children,
    className,
    color,
    ...rest
  } = props;
  const classes = classNames({
    [styles$F.Subheading]: true,
    [styles$F[`Subheading--${appearance}`]]: !color && appearance,
    [`color-${color}`]: color
  }, className);
  return /*#__PURE__*/React.createElement(Link$1, _extends$2({
    ref: ref,
    "data-test": "DesignSystem-Subheading"
  }, rest, {
    className: classes,
    componentType: 'h4'
  }), children);
});
Subheading.displayName = 'Subheading';
Subheading.defaultProps = {
  appearance: 'default'
};

var css_248z$F = ".switch-module-Switch-QepNe-5-0-0-9 {\n  display: inline-flex;\n  position: relative;\n}\n\n.switch-module-Switch--tiny-r1E6o-5-0-0-9 {\n  height: var(--spacing-40);\n  width: var(--spacing-80);\n}\n\n.switch-module-Switch--regular-ciyyD-5-0-0-9 {\n  height: var(--spacing-60);\n  width: var(--spacing-120);\n}\n\n.switch-module-Switch--large-kX3JT-5-0-0-9 {\n  height: var(--spacing-60);\n  width: var(--spacing-120);\n}\n\n.switch-module-Switch-input-5oT7E-5-0-0-9 {\n  position: absolute;\n  cursor: pointer;\n  z-index: 10;\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n}\n\n.switch-module-Switch-wrapper-btwpQ-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  line-height: 100%;\n  padding: var(--spacing-05);\n  top: 0;\n  left: 0;\n  width: 100%;\n  background-color: var(--secondary-light);\n  transition: background 120ms ease;\n  padding-right: var(--spacing-15);\n}\n\n.switch-module-Switch-input-5oT7E-5-0-0-9:focus ~ .switch-module-Switch-wrapper-btwpQ-5-0-0-9 {\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n  background-color: var(--secondary-light);\n}\n\n.switch-module-Switch-input-5oT7E-5-0-0-9:focus ~ .switch-module-Switch-wrapper--checked-1oCxY-5-0-0-9 {\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n  background-color: var(--primary);\n}\n\n.switch-module-Switch-input-5oT7E-5-0-0-9:hover ~ .switch-module-Switch-wrapper-btwpQ-5-0-0-9 {\n  background-color: var(--secondary);\n}\n\n.switch-module-Switch-input-5oT7E-5-0-0-9:hover ~ .switch-module-Switch-wrapper--checked-1oCxY-5-0-0-9 {\n  background-color: var(--primary-dark);\n}\n\n.switch-module-Switch-input-5oT7E-5-0-0-9:active ~ .switch-module-Switch-wrapper-btwpQ-5-0-0-9 {\n  background-color: var(--secondary-dark);\n}\n\n.switch-module-Switch-input-5oT7E-5-0-0-9:active ~ .switch-module-Switch-wrapper--checked-1oCxY-5-0-0-9 {\n  background-color: var(--primary-darker);\n}\n\n.switch-module-Switch-wrapper--tiny--PBMV-5-0-0-9 {\n  border-radius: var(--border-radius-full);\n}\n\n.switch-module-Switch-wrapper--regular-6j-AT-5-0-0-9 {\n  border-radius: var(--border-radius-full);\n}\n\n.switch-module-Switch-wrapper--large-A8WkP-5-0-0-9 {\n  border-radius: var(--border-radius-full);\n}\n\n.switch-module-Switch-wrapper-btwpQ-5-0-0-9:before {\n  content: '';\n  height: 100%;\n  width: 50%;\n  background-color: var(--shadow-0);\n  box-shadow: var(--shadow-m);\n  border-radius: var(--border-radius-full);\n  box-sizing: border-box;\n  transition-duration: 80ms;\n}\n\n.switch-module-Switch-wrapper--checked-1oCxY-5-0-0-9 {\n  background-color: var(--primary);\n  transition: background 120ms ease;\n  padding-left: var(--spacing-15);\n  padding-right: 2px !important;\n}\n\n.switch-module-Switch-wrapper--checked-1oCxY-5-0-0-9:before {\n  transform: translateX(100%);\n  transition-duration: 80ms;\n}\n\n.switch-module-Switch--disabled-xXiea-5-0-0-9 {\n  pointer-events: none;\n}\n\n.switch-module-Switch-wrapper--disabled-HghBP-5-0-0-9 {\n  background-color: var(--secondary-lighter);\n}\n\n.switch-module-Switch-wrapper--checkedDisabled-9Xe28-5-0-0-9 {\n  background-color: var(--primary-lighter);\n}\n";
var styles$E = {"Switch":"switch-module-Switch-QepNe-5-0-0-9","Switch--tiny":"switch-module-Switch--tiny-r1E6o-5-0-0-9","Switch--regular":"switch-module-Switch--regular-ciyyD-5-0-0-9","Switch--large":"switch-module-Switch--large-kX3JT-5-0-0-9","Switch-input":"switch-module-Switch-input-5oT7E-5-0-0-9","Switch-wrapper":"switch-module-Switch-wrapper-btwpQ-5-0-0-9","Switch-wrapper--checked":"switch-module-Switch-wrapper--checked-1oCxY-5-0-0-9","Switch-wrapper--tiny":"switch-module-Switch-wrapper--tiny--PBMV-5-0-0-9","Switch-wrapper--regular":"switch-module-Switch-wrapper--regular-6j-AT-5-0-0-9","Switch-wrapper--large":"switch-module-Switch-wrapper--large-A8WkP-5-0-0-9","Switch--disabled":"switch-module-Switch--disabled-xXiea-5-0-0-9","Switch-wrapper--disabled":"switch-module-Switch-wrapper--disabled-HghBP-5-0-0-9","Switch-wrapper--checkedDisabled":"switch-module-Switch-wrapper--checkedDisabled-9Xe28-5-0-0-9"};
styleInject(css_248z$F);

/**
 * ######Switch has two types:
 *  - [Controlled Switch](https://reactjs.org/docs/forms.html#controlled-components)
 *  - [Uncontrolled Switch](https://reactjs.org/docs/uncontrolled-components.html)
 */
const Switch = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    size = 'regular',
    defaultChecked,
    disabled,
    onChange,
    name,
    value,
    className,
    appearance,
    checked: checkedProp,
    ...rest
  } = props;
  const [checked, setChecked] = React.useState(checkedProp === undefined ? defaultChecked : checkedProp);
  React.useEffect(() => {
    if (checkedProp !== undefined) setChecked(checkedProp);
  }, [checkedProp]);
  const SwitchClass = classNames({
    [styles$E.Switch]: true,
    [styles$E['Switch--disabled']]: disabled,
    [styles$E[`Switch--${size}`]]: size
  }, className);
  const SwitchWrapper = classNames({
    [styles$E['Switch-wrapper']]: true,
    [styles$E['Switch-wrapper--disabled']]: disabled,
    [styles$E[`Switch-wrapper--${size}`]]: size,
    [styles$E['Switch-wrapper--checked']]: checked,
    [styles$E['Switch-wrapper--checkedDisabled']]: checked && disabled
  });
  const onChangeHandler = event => {
    if (event.type == 'change' || isSpaceKey(event)) {
      if (checkedProp === undefined) setChecked(!checked);
      if (onChange) onChange(event, !checked);
    }
  };
  return /*#__PURE__*/React.createElement("div", {
    className: SwitchClass
  }, /*#__PURE__*/React.createElement("input", _extends$2({}, rest, {
    type: "checkbox",
    defaultChecked: defaultChecked,
    disabled: disabled,
    onChange: onChangeHandler,
    checked: checked,
    ref: ref,
    name: name,
    value: value,
    className: styles$E['Switch-input'],
    onKeyUp: onChangeHandler
  })), /*#__PURE__*/React.createElement("span", {
    className: SwitchWrapper
  }));
});
Switch.displayName = 'Switch';

var css_248z$E = "/* Textarea */\n\n.textarea-module-Textarea-Es1Ps-5-0-0-9 {\n  min-height: var(--spacing-80);\n  width: 100%;\n  display: block;\n  font-family: var(--font-family);\n  font-weight: var(--font-weight-normal);\n  line-height: var(--font-height);\n  font-size: var(--font-size);\n  box-sizing: border-box;\n  border-radius: var(--border-radius-10);\n  border: var(--border);\n  color: var(--inverse);\n  padding: var(--spacing-20) var(--spacing-30);\n  resize: none;\n  cursor: auto; /* this ensures text cursor over text, and pointer cursor over scroll*/\n}\n\n.textarea-module-Textarea-Es1Ps-5-0-0-9::-moz-placeholder {\n  color: var(--inverse-lighter);\n}\n\n.textarea-module-Textarea-Es1Ps-5-0-0-9::placeholder {\n  color: var(--inverse-lighter);\n}\n\n.textarea-module-Textarea-Es1Ps-5-0-0-9::-ms-clear {\n  display: none;\n}\n\n.textarea-module-Textarea-Es1Ps-5-0-0-9:focus-within {\n  outline: none;\n  border: var(--border-width-2-5) solid var(--primary);\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n}\n\n.textarea-module-Textarea-Es1Ps-5-0-0-9:disabled {\n  color: var(--inverse-lightest);\n  background: var(--secondary-lightest);\n  border-color: var(--secondary-light);\n}\n\n.textarea-module-Textarea--readOnly-mTqc8-5-0-0-9 {\n  pointer-events: none;\n  background: var(--secondary-lightest);\n  border-color: var(--secondary);\n}\n\n.textarea-module-Textarea--error-gqkse-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--alert);\n}\n\n.textarea-module-Textarea--error-gqkse-5-0-0-9:focus-within {\n  border: var(--border-width-2-5) solid var(--alert);\n  box-shadow: var(--shadow-spread) var(--alert-shadow);\n}\n\n.textarea-module-Textarea--resize-6QHWa-5-0-0-9 {\n  resize: both;\n}\n";
var styles$D = {"Textarea":"textarea-module-Textarea-Es1Ps-5-0-0-9","Textarea--readOnly":"textarea-module-Textarea--readOnly-mTqc8-5-0-0-9","Textarea--error":"textarea-module-Textarea--error-gqkse-5-0-0-9","Textarea--resize":"textarea-module-Textarea--resize-6QHWa-5-0-0-9"};
styleInject(css_248z$E);

const Textarea = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    rows = 3,
    resize = true,
    disabled,
    name,
    placeholder,
    value,
    defaultValue,
    required,
    error,
    onChange,
    onClick,
    onBlur,
    onFocus,
    className,
    readOnly,
    ...rest
  } = props;
  const classes = classNames({
    [styles$D.Textarea]: true,
    [styles$D['Textarea--resize']]: resize,
    [styles$D['Textarea--error']]: error,
    [styles$D['Textarea--readOnly']]: readOnly
  }, className);
  return /*#__PURE__*/React.createElement("textarea", _extends$2({
    "data-test": "DesignSystem-Textarea"
  }, rest, {
    ref: ref,
    name: name,
    rows: rows,
    placeholder: placeholder,
    className: classes,
    value: value,
    defaultValue: defaultValue,
    required: required,
    disabled: disabled,
    onChange: onChange,
    onBlur: onBlur,
    onClick: onClick,
    onFocus: onFocus
  }));
});
Textarea.displayName = 'Textarea';

var css_248z$D = "/* toast */\n\n.toast-module-Toast-OpDhM-5-0-0-9 {\n  display: flex;\n  flex-direction: row;\n  box-sizing: border-box;\n  word-break: break-word;\n  width: 360px;\n  border-radius: var(--border-radius-10);\n  padding-left: var(--spacing-40);\n  padding-right: var(--spacing-30);\n  padding-top: var(--spacing-30);\n  padding-bottom: var(--spacing-30);\n}\n\n.toast-module-Toast--withMessage-T8xPr-5-0-0-9 {\n  padding-bottom: var(--spacing-40);\n}\n\n.toast-module-Toast--info-dEexw-5-0-0-9 {\n  background-color: var(--primary);\n}\n\n.toast-module-Toast--alert-gxrp--5-0-0-9 {\n  background-color: var(--alert);\n}\n\n.toast-module-Toast--success-gju3F-5-0-0-9 {\n  background-color: var(--success);\n}\n\n.toast-module-Toast--warning-ELr9r-5-0-0-9 {\n  background-color: var(--warning);\n}\n\n.toast-module-Toast--warning-ELr9r-5-0-0-9 {\n  color: var(--text);\n}\n\n.toast-module-Toast-icon-RrG2q-5-0-0-9 {\n  line-height: var(--font-height-m);\n}\n\n.toast-module-Toast-icon--left-dAfZv-5-0-0-9 {\n  margin-right: var(--spacing-40);\n}\n\n.toast-module-Toast-icon--right--8Qmt-5-0-0-9 {\n  cursor: pointer;\n  margin-left: var(--spacing-30);\n  border-radius: var(--border-radius-full);\n  display: flex;\n  align-items: center;\n  padding-right: var(--spacing-10);\n  padding-left: var(--spacing-10);\n  height: var(--spacing-60);\n  box-sizing: initial;\n}\n\n.toast-module-Toast-icon--info-zE2SA-5-0-0-9,\n.toast-module-Toast-icon--success-SOr0z-5-0-0-9,\n.toast-module-Toast-icon--alert-TS0aE-5-0-0-9,\n.toast-module-Toast-icon--default-HsZ-7-5-0-0-9 {\n  color: var(--text-white);\n}\n\n.toast-module-Toast-icon--warning-47OGV-5-0-0-9 {\n  color: var(--warning-darker);\n}\n\n.toast-module-Toast-close-icon--warning-nuh9s-5-0-0-9:focus,\n.toast-module-Toast-close-icon--warning-nuh9s-5-0-0-9:focus-visible {\n  outline: none;\n  box-shadow: var(--shadow-spread) rgba(183, 135, 7, 0.16);\n}\n\n.toast-module-Toast-close-icon--warning-nuh9s-5-0-0-9:hover,\n.toast-module-Toast-close-icon--warning-nuh9s-5-0-0-9:active {\n  background: var(--warning-dark);\n}\n\n.toast-module-Toast-close-icon--success-fXEEm-5-0-0-9:focus,\n.toast-module-Toast-close-icon--success-fXEEm-5-0-0-9:focus-visible {\n  outline: none;\n  box-shadow: var(--shadow-spread) rgba(34, 121, 52, 0.16);\n}\n\n.toast-module-Toast-close-icon--success-fXEEm-5-0-0-9:hover,\n.toast-module-Toast-close-icon--success-fXEEm-5-0-0-9:active {\n  background: var(--success-dark);\n}\n\n.toast-module-Toast-close-icon--info-0vDSQ-5-0-0-9:focus,\n.toast-module-Toast-close-icon--info-0vDSQ-5-0-0-9:focus-visible {\n  outline: none;\n  box-shadow: var(--shadow-spread) rgba(0, 80, 159, 0.16);\n}\n\n.toast-module-Toast-close-icon--info-0vDSQ-5-0-0-9:hover,\n.toast-module-Toast-close-icon--info-0vDSQ-5-0-0-9:active {\n  background: var(--primary-dark);\n}\n\n.toast-module-Toast-close-icon--alert-cq8I3-5-0-0-9:focus,\n.toast-module-Toast-close-icon--alert-cq8I3-5-0-0-9:focus-visible {\n  outline: none;\n  box-shadow: var(--shadow-spread) rgba(156, 40, 40, 0.16);\n}\n\n.toast-module-Toast-close-icon--alert-cq8I3-5-0-0-9:hover,\n.toast-module-Toast-close-icon--alert-cq8I3-5-0-0-9:active {\n  background: var(--alert-dark);\n}\n\n.toast-module-Toast-body--5KGi-5-0-0-9 {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n}\n\n.toast-module-Toast-title-4cVcs-5-0-0-9 {\n  display: flex;\n}\n\n.toast-module-Toast-heading-BOc6U-5-0-0-9 {\n  flex-grow: 1;\n}\n\n.toast-module-Toast-text-pwhPD-5-0-0-9 {\n  padding-top: var(--spacing-20);\n}\n\n.toast-module-Toast-text--warning-J4ygg-5-0-0-9,\n.toast-module-Toast-heading--warning-sybsC-5-0-0-9 {\n  color: var(--warning-darker) !important;\n}\n\n.toast-module-Toast-actions-3qfv--5-0-0-9 {\n  display: flex;\n  padding-top: var(--spacing-30);\n}\n\n.toast-module-Toast-actionButton-lfdEz-5-0-0-9 {\n  color: var(--text-white);\n  border-radius: var(--border-radius-10);\n  margin-right: var(--spacing-20);\n}\n\n.toast-module-Toast-actionButton-lfdEz-5-0-0-9:last-child {\n  margin-right: 0;\n}\n\n.toast-module-Toast-actionButton--default-UVS4L-5-0-0-9 {\n  background: var(--inverse-light);\n}\n\n.toast-module-Toast-actionButton--default-UVS4L-5-0-0-9:hover,\n.toast-module-Toast-actionButton--default-UVS4L-5-0-0-9:active {\n  background: var(--inverse);\n}\n\n.toast-module-Toast-actionButton--default-UVS4L-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) rgba(112, 112, 112, 0.16);\n}\n\n.toast-module-Toast-actionButton--info-MLC4o-5-0-0-9 {\n  background: var(--primary-dark);\n}\n\n.toast-module-Toast-actionButton--info-MLC4o-5-0-0-9:hover,\n.toast-module-Toast-actionButton--info-MLC4o-5-0-0-9:active {\n  background: var(--primary-darker);\n}\n\n.toast-module-Toast-actionButton--info-MLC4o-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) rgba(0, 80, 159, 0.16);\n}\n\n.toast-module-Toast-actionButton--success-vppAH-5-0-0-9 {\n  background: var(--success-dark);\n}\n\n.toast-module-Toast-actionButton--success-vppAH-5-0-0-9:hover,\n.toast-module-Toast-actionButton--success-vppAH-5-0-0-9:active {\n  background: var(--success-darker);\n}\n\n.toast-module-Toast-actionButton--success-vppAH-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) rgba(34, 121, 52, 0.16);\n}\n\n.toast-module-Toast-actionButton--alert-VMKO0-5-0-0-9 {\n  background: var(--alert-dark);\n}\n\n.toast-module-Toast-actionButton--alert-VMKO0-5-0-0-9:hover,\n.toast-module-Toast-actionButton--alert-VMKO0-5-0-0-9:active {\n  background: var(--alert-darker);\n}\n\n.toast-module-Toast-actionButton--alert-VMKO0-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) var(--alert-shadow);\n}\n\n.toast-module-Toast-actionButton--warning-GNDkx-5-0-0-9 {\n  background: var(--warning-dark);\n}\n\n.toast-module-Toast-actionButton--warning-GNDkx-5-0-0-9:hover,\n.toast-module-Toast-actionButton--warning-GNDkx-5-0-0-9:active {\n  background: var(--warning-darker);\n}\n\n.toast-module-Toast-actionButton--warning-GNDkx-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) var(--warning-shadow);\n}\n";
var styles$C = {"Toast":"toast-module-Toast-OpDhM-5-0-0-9","Toast--withMessage":"toast-module-Toast--withMessage-T8xPr-5-0-0-9","Toast--info":"toast-module-Toast--info-dEexw-5-0-0-9","Toast--alert":"toast-module-Toast--alert-gxrp--5-0-0-9","Toast--success":"toast-module-Toast--success-gju3F-5-0-0-9","Toast--warning":"toast-module-Toast--warning-ELr9r-5-0-0-9","Toast-icon":"toast-module-Toast-icon-RrG2q-5-0-0-9","Toast-icon--left":"toast-module-Toast-icon--left-dAfZv-5-0-0-9","Toast-icon--right":"toast-module-Toast-icon--right--8Qmt-5-0-0-9","Toast-icon--info":"toast-module-Toast-icon--info-zE2SA-5-0-0-9","Toast-icon--success":"toast-module-Toast-icon--success-SOr0z-5-0-0-9","Toast-icon--alert":"toast-module-Toast-icon--alert-TS0aE-5-0-0-9","Toast-icon--default":"toast-module-Toast-icon--default-HsZ-7-5-0-0-9","Toast-icon--warning":"toast-module-Toast-icon--warning-47OGV-5-0-0-9","Toast-close-icon--warning":"toast-module-Toast-close-icon--warning-nuh9s-5-0-0-9","Toast-close-icon--success":"toast-module-Toast-close-icon--success-fXEEm-5-0-0-9","Toast-close-icon--info":"toast-module-Toast-close-icon--info-0vDSQ-5-0-0-9","Toast-close-icon--alert":"toast-module-Toast-close-icon--alert-cq8I3-5-0-0-9","Toast-body":"toast-module-Toast-body--5KGi-5-0-0-9","Toast-title":"toast-module-Toast-title-4cVcs-5-0-0-9","Toast-heading":"toast-module-Toast-heading-BOc6U-5-0-0-9","Toast-text":"toast-module-Toast-text-pwhPD-5-0-0-9","Toast-text--warning":"toast-module-Toast-text--warning-J4ygg-5-0-0-9","Toast-heading--warning":"toast-module-Toast-heading--warning-sybsC-5-0-0-9","Toast-actions":"toast-module-Toast-actions-3qfv--5-0-0-9","Toast-actionButton":"toast-module-Toast-actionButton-lfdEz-5-0-0-9","Toast-actionButton--default":"toast-module-Toast-actionButton--default-UVS4L-5-0-0-9","Toast-actionButton--info":"toast-module-Toast-actionButton--info-MLC4o-5-0-0-9","Toast-actionButton--success":"toast-module-Toast-actionButton--success-vppAH-5-0-0-9","Toast-actionButton--alert":"toast-module-Toast-actionButton--alert-VMKO0-5-0-0-9","Toast-actionButton--warning":"toast-module-Toast-actionButton--warning-GNDkx-5-0-0-9"};
styleInject(css_248z$D);

const ActionButton = props => {
  const {
    appearance,
    label,
    onClick
  } = props;
  const buttonClass = classNames({
    [buttonStyles['Button']]: true,
    [buttonStyles['Button--tiny']]: true,
    [styles$C['Toast-actionButton']]: true,
    [styles$C[`Toast-actionButton--${appearance}`]]: appearance
  });
  const onClickHandler = e => {
    e.preventDefault();
    if (onClick) onClick(e);
  };
  return /*#__PURE__*/React.createElement("button", {
    className: buttonClass,
    onClick: onClickHandler
  }, /*#__PURE__*/React.createElement(Text, {
    appearance: "white"
  }, label));
};
ActionButton.displayName = 'ActionButton';
ActionButton.defaultProps = {
  appearance: 'default'
};

const Toast = props => {
  const {
    title,
    message,
    actions,
    onClose,
    className
  } = props;
  let {
    appearance
  } = props;
  appearance = appearance === 'default' ? 'info' : appearance;
  const baseProps = extractBaseProps(props);
  const wrapperClass = classNames({
    [styles$C.Toast]: true,
    [styles$C['Toast--withMessage']]: message,
    [styles$C[`Toast--${appearance}`]]: appearance
  }, className);
  const IconMapping = {
    info: 'info',
    success: 'check_circle',
    alert: 'error',
    warning: 'warning'
  };
  const icon = IconMapping[appearance];
  const titleClass = classNames({
    [styles$C['Toast-title']]: true,
    [styles$C['Toast-title--withMessage']]: message
  });
  const iconClass = align => classNames({
    [styles$C['Toast-icon']]: true,
    [styles$C[`Toast-icon--${align}`]]: align,
    [styles$C[`Toast-icon--${appearance}`]]: appearance,
    [styles$C[`Toast-close-icon--${appearance}`]]: appearance && align === 'right'
  });
  const textClass = classNames({
    [styles$C['Toast-text']]: true,
    [styles$C[`Toast-text--${appearance}`]]: appearance
  });
  const headingClass = classNames({
    [styles$C['Toast-heading']]: true,
    [styles$C[`Toast-heading--${appearance}`]]: appearance
  });
  const onCloseHandler = () => {
    if (onClose) onClose();
  };
  return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
    className: wrapperClass
  }), icon && /*#__PURE__*/React.createElement(Icon, {
    name: icon,
    className: iconClass('left')
  }), /*#__PURE__*/React.createElement("div", {
    className: styles$C['Toast-body']
  }, /*#__PURE__*/React.createElement("div", {
    className: titleClass
  }, /*#__PURE__*/React.createElement(Heading, {
    size: "s",
    className: headingClass,
    appearance: appearance !== 'warning' ? 'white' : 'default'
  }, title), /*#__PURE__*/React.createElement(Icon, {
    name: 'close',
    className: iconClass('right'),
    onClick: onCloseHandler,
    appearance: appearance !== 'warning' ? 'white' : 'default'
  })), message && /*#__PURE__*/React.createElement(Text, {
    appearance: appearance !== 'warning' ? 'white' : 'default',
    className: textClass
  }, message), !!actions?.length && /*#__PURE__*/React.createElement("div", {
    className: styles$C['Toast-actions']
  }, actions.slice(0, 2).map((action, index) => /*#__PURE__*/React.createElement(ActionButton, {
    key: index,
    label: action.label,
    appearance: appearance,
    onClick: action.onClick
  })))));
};
Toast.displayName = 'Toast';
Toast.defaultProps = {
  appearance: 'info'
};

function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (-1 !== e.indexOf(n)) continue;
    t[n] = r[n];
  }
  return t;
}

function _extends$1() {
  return _extends$1 = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends$1.apply(null, arguments);
}

function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {
    return t.__proto__ = e, t;
  }, _setPrototypeOf(t, e);
}

function _inheritsLoose(t, o) {
  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);
}

function _assertThisInitialized(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}

function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}

function toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r);
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}

function toPropertyKey(t) {
  var i = toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}

function _defineProperty(e, r, t) {
  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[r] = t, e;
}

var toStr$3 = Object.prototype.toString;

var isArguments$2 = function isArguments(value) {
	var str = toStr$3.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr$3.call(value.callee) === '[object Function]';
	}
	return isArgs;
};

var implementation$9;
var hasRequiredImplementation;

function requireImplementation () {
	if (hasRequiredImplementation) return implementation$9;
	hasRequiredImplementation = 1;

	var keysShim;
	if (!Object.keys) {
		// modified from https://github.com/es-shims/es5-shim
		var has = Object.prototype.hasOwnProperty;
		var toStr = Object.prototype.toString;
		var isArgs = isArguments$2; // eslint-disable-line global-require
		var isEnumerable = Object.prototype.propertyIsEnumerable;
		var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
		var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
		var dontEnums = [
			'toString',
			'toLocaleString',
			'valueOf',
			'hasOwnProperty',
			'isPrototypeOf',
			'propertyIsEnumerable',
			'constructor'
		];
		var equalsConstructorPrototype = function (o) {
			var ctor = o.constructor;
			return ctor && ctor.prototype === o;
		};
		var excludedKeys = {
			$applicationCache: true,
			$console: true,
			$external: true,
			$frame: true,
			$frameElement: true,
			$frames: true,
			$innerHeight: true,
			$innerWidth: true,
			$onmozfullscreenchange: true,
			$onmozfullscreenerror: true,
			$outerHeight: true,
			$outerWidth: true,
			$pageXOffset: true,
			$pageYOffset: true,
			$parent: true,
			$scrollLeft: true,
			$scrollTop: true,
			$scrollX: true,
			$scrollY: true,
			$self: true,
			$webkitIndexedDB: true,
			$webkitStorageInfo: true,
			$window: true
		};
		var hasAutomationEqualityBug = (function () {
			/* global window */
			if (typeof window === 'undefined') { return false; }
			for (var k in window) {
				try {
					if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
						try {
							equalsConstructorPrototype(window[k]);
						} catch (e) {
							return true;
						}
					}
				} catch (e) {
					return true;
				}
			}
			return false;
		}());
		var equalsConstructorPrototypeIfNotBuggy = function (o) {
			/* global window */
			if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
				return equalsConstructorPrototype(o);
			}
			try {
				return equalsConstructorPrototype(o);
			} catch (e) {
				return false;
			}
		};

		keysShim = function keys(object) {
			var isObject = object !== null && typeof object === 'object';
			var isFunction = toStr.call(object) === '[object Function]';
			var isArguments = isArgs(object);
			var isString = isObject && toStr.call(object) === '[object String]';
			var theKeys = [];

			if (!isObject && !isFunction && !isArguments) {
				throw new TypeError('Object.keys called on a non-object');
			}

			var skipProto = hasProtoEnumBug && isFunction;
			if (isString && object.length > 0 && !has.call(object, 0)) {
				for (var i = 0; i < object.length; ++i) {
					theKeys.push(String(i));
				}
			}

			if (isArguments && object.length > 0) {
				for (var j = 0; j < object.length; ++j) {
					theKeys.push(String(j));
				}
			} else {
				for (var name in object) {
					if (!(skipProto && name === 'prototype') && has.call(object, name)) {
						theKeys.push(String(name));
					}
				}
			}

			if (hasDontEnumBug) {
				var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

				for (var k = 0; k < dontEnums.length; ++k) {
					if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
						theKeys.push(dontEnums[k]);
					}
				}
			}
			return theKeys;
		};
	}
	implementation$9 = keysShim;
	return implementation$9;
}

var slice = Array.prototype.slice;
var isArgs = isArguments$2;

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : requireImplementation();

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

var objectKeys$1 = keysShim;

/** @type {import('./shams')} */
/* eslint complexity: [2, 18], max-statements: [2, 33] */
var shams$1 = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	/** @type {{ [k in symbol]?: unknown }} */
	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		// eslint-disable-next-line no-extra-parens
		var descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

var hasSymbols$3 = shams$1;

/** @type {import('.')} */
var shams = function hasToStringTagShams() {
	return hasSymbols$3() && !!Symbol.toStringTag;
};

/** @type {import('.')} */
var esObjectAtoms = Object;

/** @type {import('.')} */
var esErrors = Error;

/** @type {import('./eval')} */
var _eval = EvalError;

/** @type {import('./range')} */
var range = RangeError;

/** @type {import('./ref')} */
var ref = ReferenceError;

/** @type {import('./syntax')} */
var syntax = SyntaxError;

/** @type {import('./type')} */
var type = TypeError;

/** @type {import('./uri')} */
var uri = URIError;

/** @type {import('./abs')} */
var abs$1 = Math.abs;

/** @type {import('./floor')} */
var floor$1 = Math.floor;

/** @type {import('./max')} */
var max$2 = Math.max;

/** @type {import('./min')} */
var min$1 = Math.min;

/** @type {import('./pow')} */
var pow$1 = Math.pow;

/** @type {import('./round')} */
var round$1 = Math.round;

/** @type {import('./isNaN')} */
var _isNaN = Number.isNaN || function isNaN(a) {
	return a !== a;
};

var $isNaN = _isNaN;

/** @type {import('./sign')} */
var sign$1 = function sign(number) {
	if ($isNaN(number) || number === 0) {
		return number;
	}
	return number < 0 ? -1 : 1;
};

/** @type {import('./gOPD')} */
var gOPD$5 = Object.getOwnPropertyDescriptor;

/** @type {import('.')} */
var $gOPD$2 = gOPD$5;

if ($gOPD$2) {
	try {
		$gOPD$2([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		$gOPD$2 = null;
	}
}

var gopd$1 = $gOPD$2;

/** @type {import('.')} */
var $defineProperty$3 = Object.defineProperty || false;
if ($defineProperty$3) {
	try {
		$defineProperty$3({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty$3 = false;
	}
}

var esDefineProperty = $defineProperty$3;

var hasSymbols$2;
var hasRequiredHasSymbols;

function requireHasSymbols () {
	if (hasRequiredHasSymbols) return hasSymbols$2;
	hasRequiredHasSymbols = 1;

	var origSymbol = typeof Symbol !== 'undefined' && Symbol;
	var hasSymbolSham = shams$1;

	/** @type {import('.')} */
	hasSymbols$2 = function hasNativeSymbols() {
		if (typeof origSymbol !== 'function') { return false; }
		if (typeof Symbol !== 'function') { return false; }
		if (typeof origSymbol('foo') !== 'symbol') { return false; }
		if (typeof Symbol('bar') !== 'symbol') { return false; }

		return hasSymbolSham();
	};
	return hasSymbols$2;
}

/** @type {import('./Reflect.getPrototypeOf')} */
var Reflect_getPrototypeOf = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;

var $Object$3 = esObjectAtoms;

/** @type {import('./Object.getPrototypeOf')} */
var Object_getPrototypeOf = $Object$3.getPrototypeOf || null;

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var toStr$2 = Object.prototype.toString;
var max$1 = Math.max;
var funcType = '[object Function]';

var concatty = function concatty(a, b) {
    var arr = [];

    for (var i = 0; i < a.length; i += 1) {
        arr[i] = a[i];
    }
    for (var j = 0; j < b.length; j += 1) {
        arr[j + a.length] = b[j];
    }

    return arr;
};

var slicy = function slicy(arrLike, offset) {
    var arr = [];
    for (var i = offset, j = 0; i < arrLike.length; i += 1, j += 1) {
        arr[j] = arrLike[i];
    }
    return arr;
};

var joiny = function (arr, joiner) {
    var str = '';
    for (var i = 0; i < arr.length; i += 1) {
        str += arr[i];
        if (i + 1 < arr.length) {
            str += joiner;
        }
    }
    return str;
};

var implementation$8 = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr$2.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slicy(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                concatty(args, arguments)
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        }
        return target.apply(
            that,
            concatty(args, arguments)
        );

    };

    var boundLength = max$1(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs[i] = '$' + i;
    }

    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};

var implementation$7 = implementation$8;

var functionBind = Function.prototype.bind || implementation$7;

/** @type {import('./functionCall')} */
var functionCall = Function.prototype.call;

/** @type {import('./functionApply')} */
var functionApply = Function.prototype.apply;

/** @type {import('./reflectApply')} */
var reflectApply = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;

var bind$4 = functionBind;

var $apply$2 = functionApply;
var $call$2 = functionCall;
var $reflectApply = reflectApply;

/** @type {import('./actualApply')} */
var actualApply$1 = $reflectApply || bind$4.call($call$2, $apply$2);

var bind$3 = functionBind;
var $TypeError$6 = type;

var $call$1 = functionCall;
var $actualApply = actualApply$1;

/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */
var callBindApplyHelpers = function callBindBasic(args) {
	if (args.length < 1 || typeof args[0] !== 'function') {
		throw new $TypeError$6('a function is required');
	}
	return $actualApply(bind$3, $call$1, args);
};

var callBind$3 = callBindApplyHelpers;
var gOPD$4 = gopd$1;

var hasProtoAccessor;
try {
	// eslint-disable-next-line no-extra-parens, no-proto
	hasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;
} catch (e) {
	if (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {
		throw e;
	}
}

// eslint-disable-next-line no-extra-parens
var desc = !!hasProtoAccessor && gOPD$4 && gOPD$4(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));

var $Object$2 = Object;
var $getPrototypeOf = $Object$2.getPrototypeOf;

/** @type {import('./get')} */
var get = desc && typeof desc.get === 'function'
	? callBind$3([desc.get])
	: typeof $getPrototypeOf === 'function'
		? /** @type {import('./get')} */ function getDunder(value) {
			// eslint-disable-next-line eqeqeq
			return $getPrototypeOf(value == null ? value : $Object$2(value));
		}
		: false;

var reflectGetProto = Reflect_getPrototypeOf;
var originalGetProto = Object_getPrototypeOf;

var getDunderProto = get;

/** @type {import('.')} */
var getProto$2 = reflectGetProto
	? function getProto(O) {
		// @ts-expect-error TS can't narrow inside a closure, for some reason
		return reflectGetProto(O);
	}
	: originalGetProto
		? function getProto(O) {
			if (!O || (typeof O !== 'object' && typeof O !== 'function')) {
				throw new TypeError('getProto: not an object');
			}
			// @ts-expect-error TS can't narrow inside a closure, for some reason
			return originalGetProto(O);
		}
		: getDunderProto
			? function getProto(O) {
				// @ts-expect-error TS can't narrow inside a closure, for some reason
				return getDunderProto(O);
			}
			: null;

var call = Function.prototype.call;
var $hasOwn = Object.prototype.hasOwnProperty;
var bind$2 = functionBind;

/** @type {import('.')} */
var hasown = bind$2.call(call, $hasOwn);

var undefined$1;

var $Object$1 = esObjectAtoms;

var $Error = esErrors;
var $EvalError = _eval;
var $RangeError = range;
var $ReferenceError = ref;
var $SyntaxError$1 = syntax;
var $TypeError$5 = type;
var $URIError = uri;

var abs = abs$1;
var floor = floor$1;
var max = max$2;
var min = min$1;
var pow = pow$1;
var round = round$1;
var sign = sign$1;

var $Function = Function;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD$1 = gopd$1;
var $defineProperty$2 = esDefineProperty;

var throwTypeError = function () {
	throw new $TypeError$5();
};
var ThrowTypeError = $gOPD$1
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD$1(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols$1 = requireHasSymbols()();

var getProto$1 = getProto$2;
var $ObjectGPO = Object_getPrototypeOf;
var $ReflectGPO = Reflect_getPrototypeOf;

var $apply$1 = functionApply;
var $call = functionCall;

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' || !getProto$1 ? undefined$1 : getProto$1(Uint8Array);

var INTRINSICS = {
	__proto__: null,
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined$1 : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined$1 : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols$1 && getProto$1 ? getProto$1([][Symbol.iterator]()) : undefined$1,
	'%AsyncFromSyncIteratorPrototype%': undefined$1,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined$1 : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined$1 : BigInt,
	'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined$1 : BigInt64Array,
	'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined$1 : BigUint64Array,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined$1 : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': $Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': $EvalError,
	'%Float16Array%': typeof Float16Array === 'undefined' ? undefined$1 : Float16Array,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined$1 : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined$1 : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined$1 : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined$1 : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined$1 : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined$1 : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols$1 && getProto$1 ? getProto$1(getProto$1([][Symbol.iterator]())) : undefined$1,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined$1,
	'%Map%': typeof Map === 'undefined' ? undefined$1 : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols$1 || !getProto$1 ? undefined$1 : getProto$1(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': $Object$1,
	'%Object.getOwnPropertyDescriptor%': $gOPD$1,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined$1 : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined$1 : Proxy,
	'%RangeError%': $RangeError,
	'%ReferenceError%': $ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined$1 : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined$1 : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols$1 || !getProto$1 ? undefined$1 : getProto$1(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined$1 : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols$1 && getProto$1 ? getProto$1(''[Symbol.iterator]()) : undefined$1,
	'%Symbol%': hasSymbols$1 ? Symbol : undefined$1,
	'%SyntaxError%': $SyntaxError$1,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError$5,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined$1 : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined$1 : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined$1 : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined$1 : Uint32Array,
	'%URIError%': $URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined$1 : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined$1 : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined$1 : WeakSet,

	'%Function.prototype.call%': $call,
	'%Function.prototype.apply%': $apply$1,
	'%Object.defineProperty%': $defineProperty$2,
	'%Object.getPrototypeOf%': $ObjectGPO,
	'%Math.abs%': abs,
	'%Math.floor%': floor,
	'%Math.max%': max,
	'%Math.min%': min,
	'%Math.pow%': pow,
	'%Math.round%': round,
	'%Math.sign%': sign,
	'%Reflect.getPrototypeOf%': $ReflectGPO
};

if (getProto$1) {
	try {
		null.error; // eslint-disable-line no-unused-expressions
	} catch (e) {
		// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229
		var errorProto = getProto$1(getProto$1(e));
		INTRINSICS['%Error.prototype%'] = errorProto;
	}
}

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen && getProto$1) {
			value = getProto$1(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	__proto__: null,
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind$1 = functionBind;
var hasOwn$1 = hasown;
var $concat = bind$1.call($call, Array.prototype.concat);
var $spliceApply = bind$1.call($apply$1, Array.prototype.splice);
var $replace = bind$1.call($call, String.prototype.replace);
var $strSlice = bind$1.call($call, String.prototype.slice);
var $exec$1 = bind$1.call($call, RegExp.prototype.exec);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError$1('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError$1('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn$1(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn$1(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError$5('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError$1('intrinsic ' + name + ' does not exist!');
};

var getIntrinsic = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError$5('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError$5('"allowMissing" argument must be a boolean');
	}

	if ($exec$1(/^%?[^%]*%?$/, name) === null) {
		throw new $SyntaxError$1('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
	}
	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError$1('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn$1(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError$5('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined$1;
			}
			if ($gOPD$1 && (i + 1) >= parts.length) {
				var desc = $gOPD$1(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn$1(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};

var GetIntrinsic$1 = getIntrinsic;

var callBindBasic = callBindApplyHelpers;

/** @type {(thisArg: string, searchString: string, position?: number) => number} */
var $indexOf = callBindBasic([GetIntrinsic$1('%String.prototype.indexOf%')]);

/** @type {import('.')} */
var callBound$3 = function callBoundIntrinsic(name, allowMissing) {
	/* eslint no-extra-parens: 0 */

	var intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */ (GetIntrinsic$1(name, !!allowMissing));
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBindBasic(/** @type {const} */ ([intrinsic]));
	}
	return intrinsic;
};

var hasToStringTag$2 = shams();
var callBound$2 = callBound$3;

var $toString$1 = callBound$2('Object.prototype.toString');

/** @type {import('.')} */
var isStandardArguments = function isArguments(value) {
	if (
		hasToStringTag$2
		&& value
		&& typeof value === 'object'
		&& Symbol.toStringTag in value
	) {
		return false;
	}
	return $toString$1(value) === '[object Arguments]';
};

/** @type {import('.')} */
var isLegacyArguments = function isArguments(value) {
	if (isStandardArguments(value)) {
		return true;
	}
	return value !== null
		&& typeof value === 'object'
		&& 'length' in value
		&& typeof value.length === 'number'
		&& value.length >= 0
		&& $toString$1(value) !== '[object Array]'
		&& 'callee' in value
		&& $toString$1(value.callee) === '[object Function]';
};

var supportsStandardArguments = (function () {
	return isStandardArguments(arguments);
}());

// @ts-expect-error TODO make this not error
isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests

/** @type {import('.')} */
var isArguments$1 = supportsStandardArguments ? isStandardArguments : isLegacyArguments;

var $defineProperty$1 = esDefineProperty;

var $SyntaxError = syntax;
var $TypeError$4 = type;

var gopd = gopd$1;

/** @type {import('.')} */
var defineDataProperty$1 = function defineDataProperty(
	obj,
	property,
	value
) {
	if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {
		throw new $TypeError$4('`obj` must be an object or a function`');
	}
	if (typeof property !== 'string' && typeof property !== 'symbol') {
		throw new $TypeError$4('`property` must be a string or a symbol`');
	}
	if (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {
		throw new $TypeError$4('`nonEnumerable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {
		throw new $TypeError$4('`nonWritable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {
		throw new $TypeError$4('`nonConfigurable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 6 && typeof arguments[6] !== 'boolean') {
		throw new $TypeError$4('`loose`, if provided, must be a boolean');
	}

	var nonEnumerable = arguments.length > 3 ? arguments[3] : null;
	var nonWritable = arguments.length > 4 ? arguments[4] : null;
	var nonConfigurable = arguments.length > 5 ? arguments[5] : null;
	var loose = arguments.length > 6 ? arguments[6] : false;

	/* @type {false | TypedPropertyDescriptor<unknown>} */
	var desc = !!gopd && gopd(obj, property);

	if ($defineProperty$1) {
		$defineProperty$1(obj, property, {
			configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,
			enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,
			value: value,
			writable: nonWritable === null && desc ? desc.writable : !nonWritable
		});
	} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {
		// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable
		obj[property] = value; // eslint-disable-line no-param-reassign
	} else {
		throw new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');
	}
};

var $defineProperty = esDefineProperty;

var hasPropertyDescriptors = function hasPropertyDescriptors() {
	return !!$defineProperty;
};

hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
	// node v0.6 has a bug where array lengths can be Set but not Defined
	if (!$defineProperty) {
		return null;
	}
	try {
		return $defineProperty([], 'length', { value: 1 }).length !== 1;
	} catch (e) {
		// In Firefox 4-22, defining length on an array throws an exception.
		return true;
	}
};

var hasPropertyDescriptors_1 = hasPropertyDescriptors;

var keys = objectKeys$1;
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr$1 = Object.prototype.toString;
var concat = Array.prototype.concat;
var defineDataProperty = defineDataProperty$1;

var isFunction$1 = function (fn) {
	return typeof fn === 'function' && toStr$1.call(fn) === '[object Function]';
};

var supportsDescriptors$2 = hasPropertyDescriptors_1();

var defineProperty$2 = function (object, name, value, predicate) {
	if (name in object) {
		if (predicate === true) {
			if (object[name] === value) {
				return;
			}
		} else if (!isFunction$1(predicate) || !predicate()) {
			return;
		}
	}

	if (supportsDescriptors$2) {
		defineDataProperty(object, name, value, true);
	} else {
		defineDataProperty(object, name, value);
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty$2(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors$2;

var defineProperties_1 = defineProperties;

var callBind$2 = {exports: {}};

var GetIntrinsic = getIntrinsic;
var define$4 = defineDataProperty$1;
var hasDescriptors$1 = hasPropertyDescriptors_1();
var gOPD$3 = gopd$1;

var $TypeError$3 = type;
var $floor = GetIntrinsic('%Math.floor%');

/** @type {import('.')} */
var setFunctionLength = function setFunctionLength(fn, length) {
	if (typeof fn !== 'function') {
		throw new $TypeError$3('`fn` is not a function');
	}
	if (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {
		throw new $TypeError$3('`length` must be a positive 32-bit integer');
	}

	var loose = arguments.length > 2 && !!arguments[2];

	var functionLengthIsConfigurable = true;
	var functionLengthIsWritable = true;
	if ('length' in fn && gOPD$3) {
		var desc = gOPD$3(fn, 'length');
		if (desc && !desc.configurable) {
			functionLengthIsConfigurable = false;
		}
		if (desc && !desc.writable) {
			functionLengthIsWritable = false;
		}
	}

	if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {
		if (hasDescriptors$1) {
			define$4(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);
		} else {
			define$4(/** @type {Parameters<define>[0]} */ (fn), 'length', length);
		}
	}
	return fn;
};

var bind = functionBind;
var $apply = functionApply;
var actualApply = actualApply$1;

/** @type {import('./applyBind')} */
var applyBind = function applyBind() {
	return actualApply(bind, $apply, arguments);
};

(function (module) {

	var setFunctionLength$1 = setFunctionLength;

	var $defineProperty = esDefineProperty;

	var callBindBasic = callBindApplyHelpers;
	var applyBind$1 = applyBind;

	module.exports = function callBind(originalFunction) {
		var func = callBindBasic(arguments);
		var adjustedLength = originalFunction.length - (arguments.length - 1);
		return setFunctionLength$1(
			func,
			1 + (adjustedLength > 0 ? adjustedLength : 0),
			true
		);
	};

	if ($defineProperty) {
		$defineProperty(module.exports, 'apply', { value: applyBind$1 });
	} else {
		module.exports.apply = applyBind$1;
	} 
} (callBind$2));

var callBindExports = callBind$2.exports;

var numberIsNaN = function (value) {
	return value !== value;
};

var implementation$6 = function is(a, b) {
	if (a === 0 && b === 0) {
		return 1 / a === 1 / b;
	}
	if (a === b) {
		return true;
	}
	if (numberIsNaN(a) && numberIsNaN(b)) {
		return true;
	}
	return false;
};

var implementation$5 = implementation$6;

var polyfill$2 = function getPolyfill() {
	return typeof Object.is === 'function' ? Object.is : implementation$5;
};

var getPolyfill$3 = polyfill$2;
var define$3 = defineProperties_1;

var shim$3 = function shimObjectIs() {
	var polyfill = getPolyfill$3();
	define$3(Object, { is: polyfill }, {
		is: function testObjectIs() {
			return Object.is !== polyfill;
		}
	});
	return polyfill;
};

var define$2 = defineProperties_1;
var callBind$1 = callBindExports;

var implementation$4 = implementation$6;
var getPolyfill$2 = polyfill$2;
var shim$2 = shim$3;

var polyfill$1 = callBind$1(getPolyfill$2(), Object);

define$2(polyfill$1, {
	getPolyfill: getPolyfill$2,
	implementation: implementation$4,
	shim: shim$2
});

var objectIs = polyfill$1;

var callBound$1 = callBound$3;
var hasToStringTag$1 = shams();
var hasOwn = hasown;
var gOPD$2 = gopd$1;

/** @type {import('.')} */
var fn;

if (hasToStringTag$1) {
	/** @type {(receiver: ThisParameterType<typeof RegExp.prototype.exec>, ...args: Parameters<typeof RegExp.prototype.exec>) => ReturnType<typeof RegExp.prototype.exec>} */
	var $exec = callBound$1('RegExp.prototype.exec');
	/** @type {object} */
	var isRegexMarker = {};

	var throwRegexMarker = function () {
		throw isRegexMarker;
	};
	/** @type {{ toString(): never, valueOf(): never, [Symbol.toPrimitive]?(): never }} */
	var badStringifier = {
		toString: throwRegexMarker,
		valueOf: throwRegexMarker
	};

	if (typeof Symbol.toPrimitive === 'symbol') {
		badStringifier[Symbol.toPrimitive] = throwRegexMarker;
	}

	/** @type {import('.')} */
	// @ts-expect-error TS can't figure out that the $exec call always throws
	// eslint-disable-next-line consistent-return
	fn = function isRegex(value) {
		if (!value || typeof value !== 'object') {
			return false;
		}

		// eslint-disable-next-line no-extra-parens
		var descriptor = /** @type {NonNullable<typeof gOPD>} */ (gOPD$2)(/** @type {{ lastIndex?: unknown }} */ (value), 'lastIndex');
		var hasLastIndexDataProperty = descriptor && hasOwn(descriptor, 'value');
		if (!hasLastIndexDataProperty) {
			return false;
		}

		try {
			// eslint-disable-next-line no-extra-parens
			$exec(value, /** @type {string} */ (/** @type {unknown} */ (badStringifier)));
		} catch (e) {
			return e === isRegexMarker;
		}
	};
} else {
	/** @type {(receiver: ThisParameterType<typeof Object.prototype.toString>, ...args: Parameters<typeof Object.prototype.toString>) => ReturnType<typeof Object.prototype.toString>} */
	var $toString = callBound$1('Object.prototype.toString');
	/** @const @type {'[object RegExp]'} */
	var regexClass = '[object RegExp]';

	/** @type {import('.')} */
	fn = function isRegex(value) {
		// In older browsers, typeof regex incorrectly returns 'function'
		if (!value || (typeof value !== 'object' && typeof value !== 'function')) {
			return false;
		}

		return $toString(value) === regexClass;
	};
}

var isRegex$1 = fn;

var functionsHaveNames = function functionsHaveNames() {
	return typeof function f() {}.name === 'string';
};

var gOPD$1 = Object.getOwnPropertyDescriptor;
if (gOPD$1) {
	try {
		gOPD$1([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		gOPD$1 = null;
	}
}

functionsHaveNames.functionsHaveConfigurableNames = function functionsHaveConfigurableNames() {
	if (!functionsHaveNames() || !gOPD$1) {
		return false;
	}
	var desc = gOPD$1(function () {}, 'name');
	return !!desc && !!desc.configurable;
};

var $bind = Function.prototype.bind;

functionsHaveNames.boundFunctionsHaveNames = function boundFunctionsHaveNames() {
	return functionsHaveNames() && typeof $bind === 'function' && function f() {}.bind().name !== '';
};

var functionsHaveNames_1 = functionsHaveNames;

var define$1 = defineDataProperty$1;
var hasDescriptors = hasPropertyDescriptors_1();
var functionsHaveConfigurableNames = functionsHaveNames_1.functionsHaveConfigurableNames();

var $TypeError$2 = type;

/** @type {import('.')} */
var setFunctionName$1 = function setFunctionName(fn, name) {
	if (typeof fn !== 'function') {
		throw new $TypeError$2('`fn` is not a function');
	}
	var loose = arguments.length > 2 && !!arguments[2];
	if (!loose || functionsHaveConfigurableNames) {
		if (hasDescriptors) {
			define$1(/** @type {Parameters<define>[0]} */ (fn), 'name', name, true, true);
		} else {
			define$1(/** @type {Parameters<define>[0]} */ (fn), 'name', name);
		}
	}
	return fn;
};

var setFunctionName = setFunctionName$1;
var $TypeError$1 = type;

var $Object = Object;

var implementation$3 = setFunctionName(function flags() {
	if (this == null || this !== $Object(this)) {
		throw new $TypeError$1('RegExp.prototype.flags getter called on non-object');
	}
	var result = '';
	if (this.hasIndices) {
		result += 'd';
	}
	if (this.global) {
		result += 'g';
	}
	if (this.ignoreCase) {
		result += 'i';
	}
	if (this.multiline) {
		result += 'm';
	}
	if (this.dotAll) {
		result += 's';
	}
	if (this.unicode) {
		result += 'u';
	}
	if (this.unicodeSets) {
		result += 'v';
	}
	if (this.sticky) {
		result += 'y';
	}
	return result;
}, 'get flags', true);

var implementation$2 = implementation$3;

var supportsDescriptors$1 = defineProperties_1.supportsDescriptors;
var $gOPD = Object.getOwnPropertyDescriptor;

var polyfill = function getPolyfill() {
	if (supportsDescriptors$1 && (/a/mig).flags === 'gim') {
		var descriptor = $gOPD(RegExp.prototype, 'flags');
		if (
			descriptor
			&& typeof descriptor.get === 'function'
			&& 'dotAll' in RegExp.prototype
			&& 'hasIndices' in RegExp.prototype
		) {
			/* eslint getter-return: 0 */
			var calls = '';
			var o = {};
			Object.defineProperty(o, 'hasIndices', {
				get: function () {
					calls += 'd';
				}
			});
			Object.defineProperty(o, 'sticky', {
				get: function () {
					calls += 'y';
				}
			});

			descriptor.get.call(o);

			if (calls === 'dy') {
				return descriptor.get;
			}
		}
	}
	return implementation$2;
};

var supportsDescriptors = defineProperties_1.supportsDescriptors;
var getPolyfill$1 = polyfill;
var gOPD = gopd$1;
var defineProperty$1 = Object.defineProperty;
var $TypeError = esErrors;
var getProto = getProto$2;
var regex = /a/;

var shim$1 = function shimFlags() {
	if (!supportsDescriptors || !getProto) {
		throw new $TypeError('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
	}
	var polyfill = getPolyfill$1();
	var proto = getProto(regex);
	var descriptor = gOPD(proto, 'flags');
	if (!descriptor || descriptor.get !== polyfill) {
		defineProperty$1(proto, 'flags', {
			configurable: true,
			enumerable: false,
			get: polyfill
		});
	}
	return polyfill;
};

var define = defineProperties_1;
var callBind = callBindExports;

var implementation$1 = implementation$3;
var getPolyfill = polyfill;
var shim = shim$1;

var flagsBound = callBind(getPolyfill());

define(flagsBound, {
	getPolyfill: getPolyfill,
	implementation: implementation$1,
	shim: shim
});

var regexp_prototype_flags = flagsBound;

var callBound = callBound$3;

var getDay = callBound('Date.prototype.getDay');
/** @type {import('.')} */
var tryDateObject = function tryDateGetDayCall(value) {
	try {
		getDay(value);
		return true;
	} catch (e) {
		return false;
	}
};

/** @type {(value: unknown) => string} */
var toStr = callBound('Object.prototype.toString');
var dateClass = '[object Date]';
var hasToStringTag = shams();

/** @type {import('.')} */
var isDateObject = function isDateObject(value) {
	if (typeof value !== 'object' || value === null) {
		return false;
	}
	return hasToStringTag ? tryDateObject(value) : toStr(value) === dateClass;
};

var objectKeys = objectKeys$1;
var isArguments = isArguments$1;
var is = objectIs;
var isRegex = isRegex$1;
var flags = regexp_prototype_flags;
var isDate = isDateObject;

var getTime = Date.prototype.getTime;

function deepEqual(actual, expected, options) {
  var opts = options || {};

  // 7.1. All identical values are equivalent, as determined by ===.
  if (opts.strict ? is(actual, expected) : actual === expected) {
    return true;
  }

  // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.
  if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {
    return opts.strict ? is(actual, expected) : actual == expected;
  }

  /*
   * 7.4. For all other Object pairs, including Array objects, equivalence is
   * determined by having the same number of owned properties (as verified
   * with Object.prototype.hasOwnProperty.call), the same set of keys
   * (although not necessarily the same order), equivalent values for every
   * corresponding key, and an identical 'prototype' property. Note: this
   * accounts for both named and indexed properties on Arrays.
   */
  // eslint-disable-next-line no-use-before-define
  return objEquiv(actual, expected, opts);
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer(x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') {
    return false;
  }
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') {
    return false;
  }
  return true;
}

function objEquiv(a, b, opts) {
  /* eslint max-statements: [2, 50] */
  var i, key;
  if (typeof a !== typeof b) { return false; }
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) { return false; }

  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) { return false; }

  if (isArguments(a) !== isArguments(b)) { return false; }

  var aIsRegex = isRegex(a);
  var bIsRegex = isRegex(b);
  if (aIsRegex !== bIsRegex) { return false; }
  if (aIsRegex || bIsRegex) {
    return a.source === b.source && flags(a) === flags(b);
  }

  if (isDate(a) && isDate(b)) {
    return getTime.call(a) === getTime.call(b);
  }

  var aIsBuffer = isBuffer(a);
  var bIsBuffer = isBuffer(b);
  if (aIsBuffer !== bIsBuffer) { return false; }
  if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here
    if (a.length !== b.length) { return false; }
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) { return false; }
    }
    return true;
  }

  if (typeof a !== typeof b) { return false; }

  try {
    var ka = objectKeys(a);
    var kb = objectKeys(b);
  } catch (e) { // happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates hasOwnProperty)
  if (ka.length !== kb.length) { return false; }

  // the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  // ~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i]) { return false; }
  }
  // equivalent values for every corresponding key, and ~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) { return false; }
  }

  return true;
}

var deepEqual_1 = deepEqual;

var deepEqual$1 = /*@__PURE__*/getDefaultExportFromCjs(deepEqual_1);

/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';

var timeoutDuration = function () {
  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
      return 1;
    }
  }
  return 0;
}();

function microtaskDebounce(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }
    called = true;
    window.Promise.resolve().then(function () {
      called = false;
      fn();
    });
  };
}

function taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}

var supportsMicroTasks = isBrowser && window.Promise;

/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/
var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */
function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}

/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */
function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  }
  // NOTE: 1 DOM access here
  var window = element.ownerDocument.defaultView;
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
}

/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */
function getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }
  return element.parentNode || element.host;
}

/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */
function getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element) {
    return document.body;
  }

  switch (element.nodeName) {
    case 'HTML':
    case 'BODY':
      return element.ownerDocument.body;
    case '#document':
      return element.body;
  }

  // Firefox want us to check `-x` and `-y` variations as well

  var _getStyleComputedProp = getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return getScrollParent(getParentNode(element));
}

/**
 * Returns the reference node of the reference object, or the reference object itself.
 * @method
 * @memberof Popper.Utils
 * @param {Element|Object} reference - the reference element (the popper will be relative to this)
 * @returns {Element} parent
 */
function getReferenceNode(reference) {
  return reference && reference.referenceNode ? reference.referenceNode : reference;
}

var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);

/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */
function isIE(version) {
  if (version === 11) {
    return isIE11;
  }
  if (version === 10) {
    return isIE10;
  }
  return isIE11 || isIE10;
}

/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */
function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }

  var noOffsetParent = isIE(10) ? document.body : null;

  // NOTE: 1 DOM access here
  var offsetParent = element.offsetParent || null;
  // Skip hidden elements which don't have an offsetParent
  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }

  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  }

  // .offsetParent will return the closest TH, TD or TABLE in case
  // no offsetParent is present, I hate this job...
  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }
  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}

/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */
function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }

  return node;
}

/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */
function findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  }

  // Here we make sure to give as "start" the element that comes first in the DOM
  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1;

  // Get common ancestor container
  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer;

  // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return getOffsetParent(commonAncestorContainer);
  }

  // one of the nodes is inside shadowDOM, find which one
  var element1root = getRoot(element1);
  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}

/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */
function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}

/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */
function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var scrollTop = getScroll(element, 'top');
  var scrollLeft = getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}

/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */

function getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);
}

function getSize(axis, body, html, computedStyle) {
  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}

function getWindowSizes(document) {
  var body = document.body;
  var html = document.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);

  return {
    height: getSize('Height', body, html, computedStyle),
    width: getSize('Width', body, html, computedStyle)
  };
}

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();





var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */
function getClientRect(offsets) {
  return _extends({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}

/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */
function getBoundingClientRect(element) {
  var rect = {};

  // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11
  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {}

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  };

  // subtract scrollbar size from sizes
  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.width;
  var height = sizes.height || element.clientHeight || result.height;

  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height;

  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons
  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');

    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return getClientRect(result);
}

function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var isIE10 = isIE(10);
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);

  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth);

  // In cases where the parent is fixed, we must ignore negative scroll in offset calc
  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }
  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0;

  // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.
  if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop);
    var marginLeft = parseFloat(styles.marginLeft);

    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;

    // Attach marginTop and marginLeft because in some circumstances we may need them
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
  }

  return offsets;
}

function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);

  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;

  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };

  return getClientRect(offset);
}

/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */
function isFixed(element) {
  var nodeName = element.nodeName;
  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }
  if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }
  var parentNode = getParentNode(element);
  if (!parentNode) {
    return false;
  }
  return isFixed(parentNode);
}

/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */

function getFixedPositionOffsetParent(element) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }
  var el = element.parentElement;
  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
  }
  return el || document.documentElement;
}

/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */
function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  // NOTE: 1 DOM access here

  var boundaries = { top: 0, left: 0 };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));

  // Handle viewport case
  if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;
    if (boundariesElement === 'scrollParent') {
      boundariesNode = getScrollParent(getParentNode(reference));
      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);

    // In case of HTML, we need a different computation
    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  }

  // Add paddings
  padding = padding || 0;
  var isPaddingNumber = typeof padding === 'number';
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;

  return boundaries;
}

function getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;

  return width * height;
}

/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };

  var sortedAreas = Object.keys(rects).map(function (key) {
    return _extends({
      key: key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });

  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });

  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

  var variation = placement.split('-')[1];

  return computedPlacement + (variation ? '-' + variation : '');
}

/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */
function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}

/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */
function getOuterSizes(element) {
  var window = element.ownerDocument.defaultView;
  var styles = window.getComputedStyle(element);
  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}

/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */
function getOppositePlacement(placement) {
  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */
function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0];

  // Get popper node sizes
  var popperRect = getOuterSizes(popper);

  // Add position, width and height to our offsets object
  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  };

  // depending by the popper placement we have to compute its offsets slightly differently
  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';

  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}

/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function find(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  }

  // use `filter` to obtain the same behavior of `find`
  return arr.filter(check)[0];
}

/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function findIndex(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  }

  // use `find` + `indexOf` if `findIndex` isn't supported
  var match = find(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}

/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */
function runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));

  modifiersToRun.forEach(function (modifier) {
    if (modifier['function']) {
      // eslint-disable-line dot-notation
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }
    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
    if (modifier.enabled && isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);

      data = fn(data, modifier);
    }
  });

  return data;
}

/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */
function update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  };

  // compute reference element offsets
  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

  // store the computed placement inside `originalPlacement`
  data.originalPlacement = data.placement;

  data.positionFixed = this.options.positionFixed;

  // compute the popper offsets
  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);

  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';

  // run the modifiers
  data = runModifiers(this.modifiers, data);

  // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback
  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}

/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */
function isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}

/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */
function getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;
    if (typeof document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }
  return null;
}

/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */
function destroy() {
  this.state.isDestroyed = true;

  // touch DOM only if `applyStyle` modifier is enabled
  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners();

  // remove the popper if user explicitly asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it
  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }
  return this;
}

/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */
function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}

function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, { passive: true });

  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }
  scrollParents.push(target);
}

/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });

  // Scroll event listener on scroll parents
  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;

  return state;
}

/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */
function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}

/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function removeEventListeners(reference, state) {
  // Remove resize event listener on window
  getWindow(reference).removeEventListener('resize', state.updateBound);

  // Remove scroll event listener on scroll parents
  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  });

  // Reset state
  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}

/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */
function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}

/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */
function isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}

/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = '';
    // add unit if the value is numeric and is one of the following
    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = 'px';
    }
    element.style[prop] = styles[prop] + unit;
  });
}

/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];
    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */
function applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  setStyles(data.instance.popper, data.styles);

  // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element
  setAttributes(data.instance.popper, data.attributes);

  // if arrowElement is defined and arrowStyles has some properties
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}

/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */
function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

  popper.setAttribute('x-placement', placement);

  // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations
  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });

  return options;
}

/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */
function getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var round = Math.round,
      floor = Math.floor;

  var noRound = function noRound(v) {
    return v;
  };

  var referenceWidth = round(reference.width);
  var popperWidth = round(popper.width);

  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf('-') !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;

  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
  var verticalToInteger = !shouldRound ? noRound : round;

  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}

var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper;

  // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;
  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }
  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent);

  // Styles
  var styles = {
    position: popper.position
  };

  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);

  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right';

  // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed
  var prefixedProperty = getSupportedPropertyName('transform');

  // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.
  var left = void 0,
      top = void 0;
  if (sideA === 'bottom') {
    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
    // and not the bottom of the html element
    if (offsetParent.nodeName === 'HTML') {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }
  if (sideB === 'right') {
    if (offsetParent.nodeName === 'HTML') {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }
  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  }

  // Attributes
  var attributes = {
    'x-placement': data.placement
  };

  // Update `data` attributes, styles and arrowStyles
  data.attributes = _extends({}, attributes, data.attributes);
  data.styles = _extends({}, styles, data.styles);
  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);

  return data;
}

/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */
function isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = find(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });

  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';
    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }
  return isRequired;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function arrow(data, options) {
  var _data$offsets$arrow;

  // arrow depends on keepTogether in order to work
  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element;

  // if arrowElement is a string, suppose it's a CSS selector
  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement);

    // if arrowElement is not found, don't run the modifier
    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isVertical = ['left', 'right'].indexOf(placement) !== -1;

  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = getOuterSizes(arrowElement)[len];

  //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjunction
  //

  // top/left side
  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  }
  // bottom/right side
  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }
  data.offsets.popper = getClientRect(data.offsets.popper);

  // compute center of the popper
  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

  // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available
  var css = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);
  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;

  // prevent arrowElement from being placed not contiguously to its popper
  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);

  return data;
}

/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */
function getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }
  return variation;
}

/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */
var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

// Get rid of `auto` `auto-start` and `auto-end`
var validPlacements = placements.slice(3);

/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */
function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);

  var placement = data.placement.split('-')[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';

  var flipOrder = [];

  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;
    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;
    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;
    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = getOppositePlacement(placement);

    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference;

    // using floor because the reference offsets may contain decimals we are not going to consider here
    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

    // flip the variation if required
    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;

    // flips variation if reference element overflows boundaries
    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

    // flips variation if popper content overflows boundaries
    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);

    var flippedVariation = flippedVariationByRef || flippedVariationByContent;

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : '');

      // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future
      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

      data = runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}

/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */
function toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2];

  // If it's not a number it's an operator, I guess
  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;
    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;
      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;
    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}

/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */
function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0];

  // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one
  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

  // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  });

  // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space
  var divider = fragments.indexOf(find(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  }

  // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.
  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

  // Convert the values with units to absolute pixels to allow our computations
  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op
    // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, [])
    // Here we convert the string values into number values (in px)
    .map(function (str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  });

  // Loop trough the offsets arrays and execute the operations
  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */
function offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var basePlacement = placement.split('-')[0];

  var offsets = void 0;
  if (isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

  // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken
  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  }

  // NOTE: DOM access here
  // resets the popper's position so that the document size can be calculated excluding
  // the size of the popper element itself
  var transformProp = getSupportedPropertyName('transform');
  var popperStyles = data.instance.popper.style; // assignment to help minification
  var top = popperStyles.top,
      left = popperStyles.left,
      transform = popperStyles[transformProp];

  popperStyles.top = '';
  popperStyles.left = '';
  popperStyles[transformProp] = '';

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);

  // NOTE: DOM access here
  // restores the original style properties after the offsets have been computed
  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;

  options.boundaries = boundaries;

  var order = options.priority;
  var popper = data.offsets.popper;

  var check = {
    primary: function primary(placement) {
      var value = popper[placement];
      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }
      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];
      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }
      return defineProperty({}, mainSide, value);
    }
  };

  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = _extends({}, popper, check[side](placement));
  });

  data.offsets.popper = popper;

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1];

  // if shift shiftvariation is specified, run the modifier
  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;

    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';

    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };

    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);

  return data;
}

/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */
var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: offset,
    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: preventOverflow,
    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],
    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: arrow,
    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: flip,
    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
    behavior: 'flip',
    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
    boundariesElement: 'viewport',
    /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariations: false,
    /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariationsByContent: false
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,
    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,
    /** @prop {ModifierFn} */
    fn: inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: computeStyle,
    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: true,
    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',
    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: applyStyle,
    /** @prop {Function} */
    onLoad: applyStyleOnLoad,
    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: undefined
  }
};

/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */
var Defaults = {
  /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,

  /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
  modifiers: modifiers
};

/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */

// Utils
// Methods
var Popper$1 = function () {
  /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    classCallCheck(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    };

    // make update() debounced, so that it only runs at most once-per-tick
    this.update = debounce(this.update.bind(this));

    // with {} we create a new object with the options inside it
    this.options = _extends({}, Popper.Defaults, options);

    // init state
    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    };

    // get reference and popper elements (allow jQuery wrappers)
    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper;

    // Deep merge modifiers options
    this.options.modifiers = {};
    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    });

    // Refactoring modifiers' list (Object => Array)
    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return _extends({
        name: name
      }, _this.options.modifiers[name]);
    })
    // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    });

    // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    });

    // fire the first update to position the popper in the right place
    this.update();

    var eventsEnabled = this.options.eventsEnabled;
    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  }

  // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  createClass(Popper, [{
    key: 'update',
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }

    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */


    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();

/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */


Popper$1.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper$1.placements = placements;
Popper$1.Defaults = Defaults;

var lib = {exports: {}};

var implementation = {exports: {}};

var propTypes = {exports: {}};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret_1;
var hasRequiredReactPropTypesSecret;

function requireReactPropTypesSecret () {
	if (hasRequiredReactPropTypesSecret) return ReactPropTypesSecret_1;
	hasRequiredReactPropTypesSecret = 1;

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	ReactPropTypesSecret_1 = ReactPropTypesSecret;
	return ReactPropTypesSecret_1;
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var factoryWithThrowingShims;
var hasRequiredFactoryWithThrowingShims;

function requireFactoryWithThrowingShims () {
	if (hasRequiredFactoryWithThrowingShims) return factoryWithThrowingShims;
	hasRequiredFactoryWithThrowingShims = 1;

	var ReactPropTypesSecret = requireReactPropTypesSecret();

	function emptyFunction() {}
	function emptyFunctionWithReset() {}
	emptyFunctionWithReset.resetWarningCache = emptyFunction;

	factoryWithThrowingShims = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    var err = new Error(
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	    err.name = 'Invariant Violation';
	    throw err;
	  }	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  }	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bigint: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,

	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    elementType: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim,
	    exact: getShim,

	    checkPropTypes: emptyFunctionWithReset,
	    resetWarningCache: emptyFunction
	  };

	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};
	return factoryWithThrowingShims;
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

{
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  propTypes.exports = requireFactoryWithThrowingShims()();
}

var propTypesExports = propTypes.exports;

var key = '__global_unique_id__';

var gud = function() {
  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;
};

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var warning = function() {};

var warning_1 = warning;

var warning$1 = /*@__PURE__*/getDefaultExportFromCjs(warning_1);

(function (module, exports) {

	exports.__esModule = true;

	var _react = React__default;

	_interopRequireDefault(_react);

	var _propTypes = propTypesExports;

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _gud = gud;

	var _gud2 = _interopRequireDefault(_gud);

	var _warning = warning_1;

	_interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var MAX_SIGNED_31_BIT_INT = 1073741823;

	// Inlined Object.is polyfill.
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	function objectIs(x, y) {
	  if (x === y) {
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    return x !== x && y !== y;
	  }
	}

	function createEventEmitter(value) {
	  var handlers = [];
	  return {
	    on: function on(handler) {
	      handlers.push(handler);
	    },
	    off: function off(handler) {
	      handlers = handlers.filter(function (h) {
	        return h !== handler;
	      });
	    },
	    get: function get() {
	      return value;
	    },
	    set: function set(newValue, changedBits) {
	      value = newValue;
	      handlers.forEach(function (handler) {
	        return handler(value, changedBits);
	      });
	    }
	  };
	}

	function onlyChild(children) {
	  return Array.isArray(children) ? children[0] : children;
	}

	function createReactContext(defaultValue, calculateChangedBits) {
	  var _Provider$childContex, _Consumer$contextType;

	  var contextProp = '__create-react-context-' + (0, _gud2.default)() + '__';

	  var Provider = function (_Component) {
	    _inherits(Provider, _Component);

	    function Provider() {
	      var _temp, _this, _ret;

	      _classCallCheck(this, Provider);

	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);
	    }

	    Provider.prototype.getChildContext = function getChildContext() {
	      var _ref;

	      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
	    };

	    Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	      if (this.props.value !== nextProps.value) {
	        var oldValue = this.props.value;
	        var newValue = nextProps.value;
	        var changedBits = void 0;

	        if (objectIs(oldValue, newValue)) {
	          changedBits = 0; // No change
	        } else {
	          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;

	          changedBits |= 0;

	          if (changedBits !== 0) {
	            this.emitter.set(nextProps.value, changedBits);
	          }
	        }
	      }
	    };

	    Provider.prototype.render = function render() {
	      return this.props.children;
	    };

	    return Provider;
	  }(_react.Component);

	  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);

	  var Consumer = function (_Component2) {
	    _inherits(Consumer, _Component2);

	    function Consumer() {
	      var _temp2, _this2, _ret2;

	      _classCallCheck(this, Consumer);

	      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }

	      return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {
	        value: _this2.getValue()
	      }, _this2.onUpdate = function (newValue, changedBits) {
	        var observedBits = _this2.observedBits | 0;
	        if ((observedBits & changedBits) !== 0) {
	          _this2.setState({ value: _this2.getValue() });
	        }
	      }, _temp2), _possibleConstructorReturn(_this2, _ret2);
	    }

	    Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	      var observedBits = nextProps.observedBits;

	      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
	      : observedBits;
	    };

	    Consumer.prototype.componentDidMount = function componentDidMount() {
	      if (this.context[contextProp]) {
	        this.context[contextProp].on(this.onUpdate);
	      }
	      var observedBits = this.props.observedBits;

	      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
	      : observedBits;
	    };

	    Consumer.prototype.componentWillUnmount = function componentWillUnmount() {
	      if (this.context[contextProp]) {
	        this.context[contextProp].off(this.onUpdate);
	      }
	    };

	    Consumer.prototype.getValue = function getValue() {
	      if (this.context[contextProp]) {
	        return this.context[contextProp].get();
	      } else {
	        return defaultValue;
	      }
	    };

	    Consumer.prototype.render = function render() {
	      return onlyChild(this.props.children)(this.state.value);
	    };

	    return Consumer;
	  }(_react.Component);

	  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);


	  return {
	    Provider: Provider,
	    Consumer: Consumer
	  };
	}

	exports.default = createReactContext;
	module.exports = exports['default']; 
} (implementation, implementation.exports));

var implementationExports = implementation.exports;

(function (module, exports) {

	exports.__esModule = true;

	var _react = React__default;

	var _react2 = _interopRequireDefault(_react);

	var _implementation = implementationExports;

	var _implementation2 = _interopRequireDefault(_implementation);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _react2.default.createContext || _implementation2.default;
	module.exports = exports['default']; 
} (lib, lib.exports));

var libExports = lib.exports;
var createContext = /*@__PURE__*/getDefaultExportFromCjs(libExports);

var ManagerReferenceNodeContext = createContext();
var ManagerReferenceNodeSetterContext = createContext();

var Manager =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(Manager, _React$Component);

  function Manager() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "referenceNode", void 0);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "setReferenceNode", function (newReferenceNode) {
      if (newReferenceNode && _this.referenceNode !== newReferenceNode) {
        _this.referenceNode = newReferenceNode;

        _this.forceUpdate();
      }
    });

    return _this;
  }

  var _proto = Manager.prototype;

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.referenceNode = null;
  };

  _proto.render = function render() {
    return React.createElement(ManagerReferenceNodeContext.Provider, {
      value: this.referenceNode
    }, React.createElement(ManagerReferenceNodeSetterContext.Provider, {
      value: this.setReferenceNode
    }, this.props.children));
  };

  return Manager;
}(React.Component);

/**
 * Takes an argument and if it's an array, returns the first item in the array,
 * otherwise returns the argument. Used for Preact compatibility.
 */
var unwrapArray = function unwrapArray(arg) {
  return Array.isArray(arg) ? arg[0] : arg;
};
/**
 * Takes a maybe-undefined function and arbitrary args and invokes the function
 * only if it is defined.
 */

var safeInvoke = function safeInvoke(fn) {
  if (typeof fn === "function") {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return fn.apply(void 0, args);
  }
};
/**
 * Sets a ref using either a ref callback or a ref object
 */

var setRef = function setRef(ref, node) {
  // if its a function call it
  if (typeof ref === "function") {
    return safeInvoke(ref, node);
  } // otherwise we should treat it as a ref object
  else if (ref != null) {
      ref.current = node;
    }
};

var initialStyle = {
  position: 'absolute',
  top: 0,
  left: 0,
  opacity: 0,
  pointerEvents: 'none'
};
var initialArrowStyle = {};
var InnerPopper =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(InnerPopper, _React$Component);

  function InnerPopper() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      data: undefined,
      placement: undefined
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "popperInstance", void 0);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "popperNode", null);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "arrowNode", null);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "setPopperNode", function (popperNode) {
      if (!popperNode || _this.popperNode === popperNode) return;
      setRef(_this.props.innerRef, popperNode);
      _this.popperNode = popperNode;

      _this.updatePopperInstance();
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "setArrowNode", function (arrowNode) {
      _this.arrowNode = arrowNode;
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "updateStateModifier", {
      enabled: true,
      order: 900,
      fn: function fn(data) {
        var placement = data.placement;

        _this.setState({
          data: data,
          placement: placement
        });

        return data;
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getOptions", function () {
      return {
        placement: _this.props.placement,
        eventsEnabled: _this.props.eventsEnabled,
        positionFixed: _this.props.positionFixed,
        modifiers: _extends$1({}, _this.props.modifiers, {
          arrow: _extends$1({}, _this.props.modifiers && _this.props.modifiers.arrow, {
            enabled: !!_this.arrowNode,
            element: _this.arrowNode
          }),
          applyStyle: {
            enabled: false
          },
          updateStateModifier: _this.updateStateModifier
        })
      };
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getPopperStyle", function () {
      return !_this.popperNode || !_this.state.data ? initialStyle : _extends$1({
        position: _this.state.data.offsets.popper.position
      }, _this.state.data.styles);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getPopperPlacement", function () {
      return !_this.state.data ? undefined : _this.state.placement;
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getArrowStyle", function () {
      return !_this.arrowNode || !_this.state.data ? initialArrowStyle : _this.state.data.arrowStyles;
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getOutOfBoundariesState", function () {
      return _this.state.data ? _this.state.data.hide : undefined;
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "destroyPopperInstance", function () {
      if (!_this.popperInstance) return;

      _this.popperInstance.destroy();

      _this.popperInstance = null;
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "updatePopperInstance", function () {
      _this.destroyPopperInstance();

      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),
          popperNode = _assertThisInitialize.popperNode;

      var referenceElement = _this.props.referenceElement;
      if (!referenceElement || !popperNode) return;
      _this.popperInstance = new Popper$1(referenceElement, popperNode, _this.getOptions());
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "scheduleUpdate", function () {
      if (_this.popperInstance) {
        _this.popperInstance.scheduleUpdate();
      }
    });

    return _this;
  }

  var _proto = InnerPopper.prototype;

  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    // If the Popper.js options have changed, update the instance (destroy + create)
    if (this.props.placement !== prevProps.placement || this.props.referenceElement !== prevProps.referenceElement || this.props.positionFixed !== prevProps.positionFixed || !deepEqual$1(this.props.modifiers, prevProps.modifiers, {
      strict: true
    })) {

      this.updatePopperInstance();
    } else if (this.props.eventsEnabled !== prevProps.eventsEnabled && this.popperInstance) {
      this.props.eventsEnabled ? this.popperInstance.enableEventListeners() : this.popperInstance.disableEventListeners();
    } // A placement difference in state means popper determined a new placement
    // apart from the props value. By the time the popper element is rendered with
    // the new position Popper has already measured it, if the place change triggers
    // a size change it will result in a misaligned popper. So we schedule an update to be sure.


    if (prevState.placement !== this.state.placement) {
      this.scheduleUpdate();
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    setRef(this.props.innerRef, null);
    this.destroyPopperInstance();
  };

  _proto.render = function render() {
    return unwrapArray(this.props.children)({
      ref: this.setPopperNode,
      style: this.getPopperStyle(),
      placement: this.getPopperPlacement(),
      outOfBoundaries: this.getOutOfBoundariesState(),
      scheduleUpdate: this.scheduleUpdate,
      arrowProps: {
        ref: this.setArrowNode,
        style: this.getArrowStyle()
      }
    });
  };

  return InnerPopper;
}(React.Component);

_defineProperty(InnerPopper, "defaultProps", {
  placement: 'bottom',
  eventsEnabled: true,
  referenceElement: undefined,
  positionFixed: false
});

Popper$1.placements;
function Popper(_ref) {
  var referenceElement = _ref.referenceElement,
      props = _objectWithoutPropertiesLoose(_ref, ["referenceElement"]);

  return React.createElement(ManagerReferenceNodeContext.Consumer, null, function (referenceNode) {
    return React.createElement(InnerPopper, _extends$1({
      referenceElement: referenceElement !== undefined ? referenceElement : referenceNode
    }, props));
  });
}

var InnerReference =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(InnerReference, _React$Component);

  function InnerReference() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "refHandler", function (node) {
      setRef(_this.props.innerRef, node);
      safeInvoke(_this.props.setReferenceNode, node);
    });

    return _this;
  }

  var _proto = InnerReference.prototype;

  _proto.componentWillUnmount = function componentWillUnmount() {
    setRef(this.props.innerRef, null);
  };

  _proto.render = function render() {
    warning$1(Boolean(this.props.setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');
    return unwrapArray(this.props.children)({
      ref: this.refHandler
    });
  };

  return InnerReference;
}(React.Component);

function Reference(props) {
  return React.createElement(ManagerReferenceNodeSetterContext.Consumer, null, function (setReferenceNode) {
    return React.createElement(InnerReference, _extends$1({
      setReferenceNode: setReferenceNode
    }, props));
  });
}

class PopperWrapper extends React.Component {
  constructor(props) {
    super(props);
    _defineProperty$1(this, "triggerRef", void 0);
    _defineProperty$1(this, "popupRef", void 0);
    _defineProperty$1(this, "hoverableDelay", void 0);
    _defineProperty$1(this, "_timer", void 0);
    _defineProperty$1(this, "_throttleWait", void 0);
    _defineProperty$1(this, "offsetMapping", void 0);
    _defineProperty$1(this, "togglePopper", (type, newValue) => {
      const {
        open,
        onToggle
      } = this.props;
      onToggle(newValue === undefined ? !open : newValue, type);
    });
    _defineProperty$1(this, "doesEventContainsElement", (event, ref) => {
      const el = ref.current;
      return el && el.contains(event.target);
    });
    _defineProperty$1(this, "getUpdatedStyle", (oldStyle, placement, offset) => {
      const {
        style
      } = this.props;
      const newStyle = {
        ...style,
        ...oldStyle
      };
      const position = placement ? placement.split('-')[0] : placement;
      switch (position) {
        case 'top':
          newStyle.marginBottom = this.offsetMapping[offset];
          break;
        case 'bottom':
          newStyle.marginTop = this.offsetMapping[offset];
          break;
        case 'left':
          newStyle.marginRight = this.offsetMapping[offset];
          break;
        case 'right':
          newStyle.marginLeft = this.offsetMapping[offset];
          break;
      }
      if (this.props.triggerCoordinates) {
        newStyle.position = 'absolute';
        newStyle.transform = `translate(${this.props.triggerCoordinates.x}px, ${this.props.triggerCoordinates.y}px)`;
      }
      return newStyle;
    });
    _defineProperty$1(this, "onClickHandler", () => {
      const {
        openDelay
      } = this.props;

      // to add delay only while opening
      if (openDelay && !this.state.isOpen) {
        window.setTimeout(() => {
          this.togglePopper('onClick');
        }, openDelay);
      } else {
        this.togglePopper('onClick');
      }
    });
    this.state = {
      animationKeyframe: '',
      isOpen: this.props.open && !this.props.disabled || false,
      uniqueKey: ''
    };
    this.hoverableDelay = 100;
    this.offsetMapping = {
      small: '2px',
      medium: '4px',
      large: '8px'
    };
    this.triggerRef = /*#__PURE__*/React.createRef();
    this.popupRef = /*#__PURE__*/React.createRef();
    this.getPopperChildren = this.getPopperChildren.bind(this);
    this.mouseMoveHandler = this.mouseMoveHandler.bind(this);
    this.handleMouseEnter = this.handleMouseEnter.bind(this);
    this.handleMouseLeave = this.handleMouseLeave.bind(this);
    this.boundaryScrollHandler = this.boundaryScrollHandler.bind(this);
  }
  componentDidMount() {
    this.addBoundaryScrollHandler();
    const triggerElement = this.triggerRef.current;
    const zIndex = this.getZIndexForLayer(triggerElement);
    this.setState({
      zIndex: zIndex === undefined ? zIndex : zIndex + 1
    });
  }
  componentDidUpdate(prevProps) {
    if (!prevProps.boundaryElement && this.props.boundaryElement) {
      this.removeBoundaryScrollHandler();
      this.addBoundaryScrollHandler();
    }
    if (prevProps.open !== this.props.open) {
      this._throttleWait = false;
      this.setState({
        animationKeyframe: ''
      });
      if (this.props.open && !this.props.disabled) {
        const triggerElement = this.triggerRef.current;
        const zIndex = this.getZIndexForLayer(triggerElement);
        this.setState({
          zIndex: zIndex === undefined ? zIndex : zIndex + 1,
          isOpen: true
        });
      } else if (!this.props.open && this.props.animationClass) {
        this.setState({
          isOpen: false
        });
      }
    }
  }
  componentWillUnmount() {
    this.removeBoundaryScrollHandler();
  }
  boundaryScrollHandler() {
    const {
      open,
      on,
      closeOnScroll
    } = this.props;
    if (on === 'click' && closeOnScroll) {
      if (open) {
        if (!this._throttleWait) {
          this.togglePopper('onScroll', false);
          this._throttleWait = true;
        }
      }
    }
  }
  addBoundaryScrollHandler() {
    if (this.props.boundaryElement && this.props.boundaryElement.addEventListener) {
      this.props.boundaryElement.addEventListener('scroll', this.boundaryScrollHandler);
    }
  }
  removeBoundaryScrollHandler() {
    if (this.props.boundaryElement && this.props.boundaryElement.removeEventListener) {
      this.props.boundaryElement.removeEventListener('scroll', this.boundaryScrollHandler);
    }
  }
  mouseMoveHandler() {
    if (this._timer) clearTimeout(this._timer);
    this._timer = window.setTimeout(() => {
      const {
        onToggle
      } = this.props;
      onToggle(false, 'mouseLeave');
    }, this.hoverableDelay);
  }
  handleMouseEnter() {
    const {
      on,
      openDelay,
      onToggle
    } = this.props;
    if (on === 'hover') {
      if (this._timer) clearTimeout(this._timer);
      if (openDelay) {
        this._timer = window.setTimeout(() => {
          this.setState(() => {
            return {
              isOpen: true
            };
          });
          this.togglePopper('mouseEnter', true);
        }, openDelay);
      } else {
        onToggle(true, 'mouseEnter');
        this.setState(() => {
          return {
            isOpen: true
          };
        });
      }
    }
  }
  handleMouseLeave() {
    const {
      on
    } = this.props;
    if (on === 'hover') {
      const {
        hoverable,
        onToggle
      } = this.props;
      if (hoverable) {
        this.mouseMoveHandler();
      } else {
        onToggle(false, 'mouseLeave');
        this.setState({
          isOpen: false
        });
      }
    }
  }
  getZIndexForLayer(node) {
    if (node === null) {
      return;
    }
    const layerNode = node.closest('[data-layer]') || document.body;
    const zIndex = layerNode === document.body ? 'auto' : parseInt(window.getComputedStyle(layerNode).zIndex || '0', 10);
    return zIndex === 'auto' || isNaN(zIndex) ? 500 : zIndex;
  }
  getTriggerElement(ref) {
    const {
      trigger,
      on,
      triggerClass,
      disabled
    } = this.props;
    const options = on === 'hover' && !disabled ? {
      ref,
      onMouseEnter: this.handleMouseEnter,
      onMouseLeave: this.handleMouseLeave,
      onFocus: this.handleMouseEnter,
      onBlur: this.handleMouseLeave
    } : {
      ref,
      onClick: ev => {
        ev.stopPropagation();
        !disabled && this.onClickHandler();
      }
    };
    const classes = classNames('PopperWrapper-trigger', triggerClass);
    const shouldPopoverClose = clicked => {
      const popover = this.popupRef.current;
      const container = document.body;
      const popoverIndex = popover && parseInt(window.getComputedStyle(popover).zIndex);
      let clickInsideLayer = false;
      let shouldClose = false;
      const openedLayers = container.querySelectorAll('[data-opened="true"]');
      openedLayers.forEach(layer => {
        if (layer && layer.contains(clicked)) {
          clickInsideLayer = true;
          const clickedIndex = parseInt(window.getComputedStyle(layer).zIndex);
          if (popoverIndex > clickedIndex) {
            shouldClose = true;
            return;
          }
        }
      });
      if (container.isEqualNode(clicked) || shouldClose || !container.contains(clicked) || !clickInsideLayer) {
        return true;
      }
      return false;
    };
    const onOutsideClickHandler = event => {
      const {
        open,
        closeOnBackdropClick
      } = this.props;
      if (open && shouldPopoverClose(event.target) && closeOnBackdropClick) {
        if (!this.doesEventContainsElement(event, this.popupRef)) {
          this.togglePopper('outsideClick');
        }
      }
    };
    return /*#__PURE__*/React.createElement(OutsideClick, _extends$2({
      className: classes,
      onOutsideClick: onOutsideClickHandler
    }, options), trigger);
  }
  getPopperChildren({
    ref,
    style,
    placement,
    outOfBoundaries
  }) {
    const {
      offset,
      children,
      open,
      animationClass
    } = this.props;
    const {
      zIndex,
      animationKeyframe,
      uniqueKey
    } = this.state;
    const newStyle = offset ? this.getUpdatedStyle(style, placement, offset) : style;
    let childrenStyles = {
      ...newStyle,
      zIndex
    };
    let classes = '';
    if (!animationClass) {
      const maxHeight = this.popupRef.current?.offsetHeight;
      // we need to check for transformStyles so that we open the popover at correct position (left/right)
      const transformStyles = this.popupRef.current?.style.getPropertyValue('transform');
      if (transformStyles && maxHeight && placement && !animationKeyframe) {
        const uniqueKey = Math.random().toString(36).substring(2, 6);
        const isTop = placement.includes('top');
        const popperAnimation = `
        @keyframes popper-open-${uniqueKey} {
          from { 
            max-height: 0;
            ${isTop ? `margin-top: ${maxHeight}px` : ''};
          }
          to {
            max-height: ${maxHeight}px;
            ${isTop ? `margin-top: 0px` : ''};
          }
        }
        @keyframes popper-close-${uniqueKey} {
          from {
            max-height: ${maxHeight}px;
            ${isTop ? `margin-top: 0px` : ''};
          }
          to {
            max-height: 0;
            ${isTop ? `margin-top: ${maxHeight}px` : ''};
          }
        }
        `;
        this.setState({
          animationKeyframe: popperAnimation,
          uniqueKey
        });
      }

      // defining popper-fade-in custom keyframe as it is specific to popover usecase.
      const popperAnimationStyles = {
        animation: open ? `popper-open-${uniqueKey} 120ms cubic-bezier(0, 0, 0.38, 0.9), popper-fade-in 120ms` : `popper-close-${uniqueKey} 120ms cubic-bezier(0.2, 0, 1, 0.9), fadeOut 100ms`
      };
      childrenStyles = {
        ...childrenStyles,
        ...popperAnimationStyles,
        overflow: 'hidden'
      };
    } else {
      classes = classNames({
        [`${animationClass.open}`]: this.state.isOpen,
        [`${animationClass.close}`]: !this.state.isOpen
      }, children.props.className);
    }
    const childProps = {
      ref,
      style: childrenStyles,
      'data-placement': placement,
      'data-hide': outOfBoundaries,
      onMouseEnter: this.handleMouseEnter,
      onMouseLeave: this.handleMouseLeave,
      onAnimationEnd: () => {
        if (!open) {
          flushSync(() => {
            this.setState({
              isOpen: false
            });
          });
        }
      }
    };
    const element = /*#__PURE__*/React.cloneElement(children, animationClass ? {
      ...childProps,
      className: classes
    } : {
      ...childProps
    });
    return element;
  }
  render() {
    const {
      placement,
      appendToBody,
      hide,
      boundaryElement,
      triggerCoordinates,
      computeStyles
    } = this.props;
    const {
      animationKeyframe,
      isOpen
    } = this.state;
    const coordinatesPopper = /*#__PURE__*/React.createElement(Popper, {
      placement: placement,
      innerRef: this.popupRef,
      modifiers: {
        preventOverflow: {
          boundariesElement: boundaryElement || document.body
        },
        hide: {
          enabled: hide
        },
        computeStyles: computeStyles,
        ...(triggerCoordinates && {
          offset: {
            offset: `${triggerCoordinates.x}px, ${triggerCoordinates.y}px`
          }
        })
      }
    }, this.getPopperChildren);
    return /*#__PURE__*/React.createElement(Manager, null, animationKeyframe && /*#__PURE__*/React.createElement("style", null, animationKeyframe), /*#__PURE__*/React.createElement(Reference, {
      innerRef: this.triggerRef
    }, ({
      ref
    }) => this.getTriggerElement(ref)), isOpen && appendToBody && !triggerCoordinates && /*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/React.createElement(Popper, {
      placement: placement,
      innerRef: this.popupRef,
      modifiers: {
        preventOverflow: {
          boundariesElement: boundaryElement || document.body
        },
        hide: {
          enabled: hide
        },
        computeStyles: computeStyles
      }
    }, this.getPopperChildren), document.body), isOpen && appendToBody && triggerCoordinates && /*#__PURE__*/ReactDOM.createPortal(coordinatesPopper, document.body), isOpen && !appendToBody && !triggerCoordinates && /*#__PURE__*/React.createElement(Popper, {
      placement: placement,
      innerRef: this.popupRef,
      modifiers: {
        computeStyles: computeStyles
      }
    }, this.getPopperChildren));
  }
}
_defineProperty$1(PopperWrapper, "defaultProps", {
  on: 'click',
  offset: 'medium',
  closeOnBackdropClick: true,
  hoverable: true,
  appendToBody: true,
  style: {},
  disabled: false
});

var css_248z$C = ".popover-module-Popover-34Ge0-5-0-0-9 {\n  border-radius: var(--border-radius-10);\n  position: absolute;\n  z-index: 500;\n  background: var(--white);\n  box-shadow: var(--shadow-l);\n}\n\n.popover-module-Popover--dark-LYp8P-5-0-0-9 {\n  background: var(--inverse);\n  color: var(--white);\n}\n\n.popover-module-Popover-34Ge0-5-0-0-9[data-hide='true'] {\n  visibility: hidden;\n  pointer-events: none;\n}\n\n@keyframes popover-module-popper-fade-in-pghyg-5-0-0-9 {\n  0% {\n    opacity: 0;\n  }\n  80% {\n    opacity: var(--opacity-6);\n  }\n  100% {\n    opacity: 1;\n  }\n}\n";
var styles$B = {"Popover":"popover-module-Popover-34Ge0-5-0-0-9","Popover--dark":"popover-module-Popover--dark-LYp8P-5-0-0-9"};
styleInject(css_248z$C);

const propsList = ['appendToBody', 'trigger', 'hoverable', 'on', 'open', 'closeOnBackdropClick', 'offset', 'closeOnScroll'];
const Popover = props => {
  const {
    position,
    customStyle,
    dark,
    children,
    onToggle,
    className,
    hideOnReferenceEscape,
    boundaryElement = document.body,
    name,
    ...rest
  } = props;
  const [open, setOpen] = React.useState(!!props.open);
  const [init, setInit] = React.useState(false);
  React.useEffect(() => {
    if (props.open !== undefined) setOpen(props.open);
  }, [props.open]);
  const defaultOnToggle = React.useCallback(newOpen => {
    setOpen(newOpen);
  }, []);
  React.useEffect(() => {
    if (!init) {
      if ('current' in boundaryElement && boundaryElement.current) {
        setInit(true);
      }
    }
  }, [boundaryElement]);
  const classes = classNames({
    [styles$B.Popover]: true,
    [styles$B['Popover--dark']]: dark
  }, className);
  const PopoverWrapper = /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-Popover",
    className: classes,
    "data-layer": true,
    "data-opened": open,
    "data-name": name
  }, children);
  return /*#__PURE__*/React.createElement(PopperWrapper, _extends$2({}, rest, {
    init: init,
    boundaryElement: 'current' in boundaryElement ? boundaryElement.current : boundaryElement,
    open: open,
    hide: hideOnReferenceEscape,
    style: customStyle,
    onToggle: onToggle || defaultOnToggle,
    placement: position
  }), PopoverWrapper);
};
Popover.displayName = 'Popover';
Popover.defaultProps = Object.assign({}, filterProps(PopperWrapper.defaultProps, propsList, true), {
  offset: 'large',
  position: 'bottom',
  hideOnReferenceEscape: true,
  customStyle: {}
});

var css_248z$B = ".chipInput-module-ChipInput-EQQlO-5-0-0-9 {\n  display: flex;\n  border-radius: var(--border-radius-10);\n  box-shadow: inset 0 0 0 var(--spacing-2-5) var(--secondary);\n  padding-left: 10px;\n  padding-right: 10px;\n  background: var(--white);\n  cursor: text;\n  flex: 100%;\n}\n\n.chipInput-module-ChipInput-EQQlO-5-0-0-9:focus,\n.chipInput-module-ChipInput-EQQlO-5-0-0-9:focus-visible {\n  outline: var(--spacing-2-5) var(--primary);\n}\n\n.chipInput-module-ChipInput-EQQlO-5-0-0-9:hover {\n  background: var(--secondary-lighter);\n  border-color: var(--secondary-dark);\n}\n\n.chipInput-module-ChipInput-EQQlO-5-0-0-9:focus-within {\n  box-shadow: inset 0 0 0 var(--spacing-2-5) var(--primary);\n  background: var(--white);\n}\n\n.chipInput-module-ChipInput--disabled-Qa6ok-5-0-0-9 {\n  background: var(--secondary-lightest);\n  border-color: var(--secondary-light);\n  pointer-events: none;\n}\n\n.chipInput-module-ChipInput--withChips-svi7y-5-0-0-9 {\n  padding-right: var(--spacing-20);\n}\n\n.chipInput-module-ChipInput--error-q8y-4-5-0-0-9,\n.chipInput-module-ChipInput--error-q8y-4-5-0-0-9:focus-within {\n  box-shadow: inset 0 0 0 var(--spacing-2-5) var(--alert);\n}\n\n.chipInput-module-ChipInput-wrapper-NzLiD-5-0-0-9 {\n  display: flex;\n  flex: 100%;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.chipInput-module-ChipInput-border-wempH-5-0-0-9:focus-within {\n  border-radius: var(--border-radius-10);\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n}\n\n.chipInput-module-ChipInput-border--error-lX1Mm-5-0-0-9:focus-within {\n  box-shadow: var(--shadow-spread) var(--alert-shadow);\n}\n\n.chipInput-module-ChipInput-input-ddUDt-5-0-0-9 {\n  border: none;\n  outline: none;\n  display: flex;\n  width: 100%;\n  min-width: 15%;\n  flex: 0px;\n  box-sizing: border-box;\n  height: var(--spacing-60);\n  margin-top: var(--spacing-10);\n  margin-bottom: var(--spacing-10);\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n}\n\n.chipInput-module-ChipInput-EQQlO-5-0-0-9:hover .chipInput-module-ChipInput-input-ddUDt-5-0-0-9 {\n  background: var(--secondary-lighter);\n}\n\n.chipInput-module-ChipInput-EQQlO-5-0-0-9:focus-within .chipInput-module-ChipInput-input-ddUDt-5-0-0-9 {\n  background: var(--white);\n}\n\n.chipInput-module-ChipInput-icon-HQ7c4-5-0-0-9 {\n  height: var(--spacing-40);\n  padding: var(--spacing-05);\n  margin-left: var(--spacing-20);\n  margin-top: var(--spacing-15);\n  cursor: pointer;\n  border-radius: var(--border-radius-full);\n}\n\n.chipInput-module-ChipInput-icon-HQ7c4-5-0-0-9:hover {\n  background-color: var(--secondary);\n}\n\n.chipInput-module-ChipInput-icon-HQ7c4-5-0-0-9:active {\n  background-color: var(--secondary-dark);\n}\n\n.chipInput-module-ChipInput-icon-HQ7c4-5-0-0-9:focus,\n.chipInput-module-ChipInput-icon-HQ7c4-5-0-0-9:focus-visible {\n  outline: var(--spacing-05) solid var(--secondary-shadow);\n}\n";
var styles$A = {"ChipInput":"chipInput-module-ChipInput-EQQlO-5-0-0-9","ChipInput--disabled":"chipInput-module-ChipInput--disabled-Qa6ok-5-0-0-9","ChipInput--withChips":"chipInput-module-ChipInput--withChips-svi7y-5-0-0-9","ChipInput--error":"chipInput-module-ChipInput--error-q8y-4-5-0-0-9","ChipInput-wrapper":"chipInput-module-ChipInput-wrapper-NzLiD-5-0-0-9","ChipInput-border":"chipInput-module-ChipInput-border-wempH-5-0-0-9","ChipInput-border--error":"chipInput-module-ChipInput-border--error-lX1Mm-5-0-0-9","ChipInput-input":"chipInput-module-ChipInput-input-ddUDt-5-0-0-9","ChipInput-icon":"chipInput-module-ChipInput-icon-HQ7c4-5-0-0-9"};
styleInject(css_248z$B);

const keyCodes$1 = {
  BACKSPACE: 'Backspace',
  DELETE: 'Delete',
  ENTER: 'Enter'
};
const ChipInput = props => {
  const {
    chipOptions,
    allowDuplicates,
    disabled,
    error,
    placeholder,
    defaultValue,
    value,
    className,
    autoFocus,
    onChange,
    onBlur,
    onFocus,
    chipValidator
  } = props;
  const inputRef = /*#__PURE__*/React.createRef();
  const customRef = React.useRef();
  const [chips, setChips] = React.useState(value || defaultValue);
  const [inputValue, setInputValue] = React.useState('');
  const baseProps = extractBaseProps(props);
  React.useEffect(() => {
    if (value !== undefined) {
      setChips(value);
    }
  }, [value]);
  React.useEffect(() => {
    if (inputValue === '' && inputRef.current) {
      inputRef.current.style.flexBasis = '0';
      customRef.current.charCount = null;
    }
  }, [inputValue]);
  const ChipInputBorderClass = classNames({
    [styles$A['ChipInput-border']]: true,
    [styles$A['ChipInput-border--error']]: error
  });
  const ChipInputClass = classNames({
    [styles$A.ChipInput]: true,
    [styles$A['ChipInput--disabled']]: disabled,
    [styles$A['ChipInput--withChips']]: chips && chips.length > 0,
    [styles$A['ChipInput--error']]: error
  }, className);
  const onUpdateChips = updatedChips => {
    if (onChange) onChange(updatedChips);
  };
  const onChipDeleteHandler = index => {
    const updatedChips = [...chips];
    updatedChips.splice(index, 1);
    if (!value) {
      setChips(updatedChips);
    }
    onUpdateChips(updatedChips);
  };
  const onChipAddHandler = () => {
    if (!inputValue) return;
    const chip = inputValue.trim();
    if (chipValidator && !chipValidator(chip)) {
      return;
    }
    if ((allowDuplicates || chips.indexOf(chip) === -1) && chip) {
      const updatedChips = [...chips, chip];
      if (!value) {
        setChips(updatedChips);
      }
      onUpdateChips(updatedChips);
      setInputValue('');
    }
  };
  const onDeleteAllHandler = () => {
    const updatedChips = [];
    if (!value) {
      setChips(updatedChips);
    }
    onUpdateChips(updatedChips);
  };
  const onKeyDownHandler = event => {
    const chipsLength = chips.length;
    switch (event.key) {
      case keyCodes$1.DELETE:
      case keyCodes$1.BACKSPACE:
        if (inputValue === '' && chipsLength > 0) {
          onChipDeleteHandler(chipsLength - 1);
        }
        break;
      case keyCodes$1.ENTER:
        event.preventDefault();
        onChipAddHandler();
        break;
    }
  };
  const onInputChangeHandler = e => {
    const elementScrollWidth = inputRef.current?.scrollWidth;
    const elementClientWidth = inputRef.current?.clientWidth;
    const charLen = e.target.value.length;
    if (elementScrollWidth && elementClientWidth && inputRef.current) {
      if (elementScrollWidth > elementClientWidth && inputValue.length <= charLen && customRef.current) {
        inputRef.current.style.flexBasis = 'auto';
        customRef.current.charCount = charLen;
      } else if (elementScrollWidth <= elementClientWidth && inputValue.length > charLen && charLen <= customRef.current?.charCount - 2) {
        inputRef.current.style.flex = '0';
      }
    }
    setInputValue(e.target.value);
  };
  const onClickHandler = () => {
    inputRef.current?.focus();
  };
  const chipComponents = chips.map((chip, index) => {
    const {
      type = 'input',
      onClick,
      ...rest
    } = chipOptions;
    return /*#__PURE__*/React.createElement(Chip, _extends$2({
      "data-test": "DesignSystem-ChipInput--Chip",
      label: chip,
      name: chip,
      type: type,
      disabled: disabled,
      key: index,
      className: "my-3 mx-2",
      onClick: () => onClick && onClick(chip, index),
      onClose: () => onChipDeleteHandler(index)
    }, rest));
  });
  return /*#__PURE__*/ /* TODO(a11y): fix accessibility  */ /* eslint-disable  */React.createElement("div", {
    "data-test": "DesignSystem-ChipInput--Border",
    className: ChipInputBorderClass
  }, /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-ChipInput"
  }, baseProps, {
    className: ChipInputClass,
    onClick: onClickHandler,
    tabIndex: disabled ? -1 : 0
  }), /*#__PURE__*/React.createElement("div", {
    className: styles$A['ChipInput-wrapper'],
    ref: customRef
  }, chips && chips.length > 0 && chipComponents, /*#__PURE__*/React.createElement("input", {
    "data-test": "DesignSystem-ChipInput--Input",
    ref: inputRef,
    className: styles$A['ChipInput-input'],
    autoFocus: autoFocus,
    placeholder: chips && chips.length > 0 ? '' : placeholder,
    disabled: disabled,
    value: inputValue,
    onBlur: onBlur,
    onFocus: onFocus,
    onChange: onInputChangeHandler,
    onKeyDown: onKeyDownHandler
  })), chips.length > 0 && /*#__PURE__*/React.createElement(Icon, {
    "data-test": "DesignSystem-ChipInput--Icon",
    name: "close",
    appearance: disabled ? 'disabled' : 'subtle',
    className: styles$A['ChipInput-icon'],
    onClick: onDeleteAllHandler,
    tabIndex: disabled ? -1 : 0
  })));
};
ChipInput.displayName = 'ChipInput';
ChipInput.defaultProps = {
  chipOptions: {},
  defaultValue: [],
  allowDuplicates: false,
  autoFocus: false
};

const getTextAppearance = (isActive, disabled) => {
  return disabled ? 'disabled' : isActive ? 'link' : 'default';
};
const getIconAppearance = (isActive, disabled) => {
  return disabled ? 'disabled' : isActive ? 'primary_dark' : 'default';
};
const getPillsAppearance = isActive => {
  return isActive ? 'primary' : 'secondary';
};
const getMenu = (menus, active) => {
  for (const menu of menus) {
    if (active.name && menu.name === active.name || active.link && menu.link === active.link) {
      return menu;
    }
    if (menu.subMenu) {
      const activeMenu = menu.subMenu.find(submenu => active.name && submenu.name === active.name || active.link && submenu.link === active.link);
      if (activeMenu) return activeMenu;
    }
  }
  return null;
};
const getExpandedMenus = (menus, active) => {
  const expandedMenus = {};
  const activeMenu = active ? getMenu(menus, active) : null;
  for (const menu of menus) {
    // Determine if the current menu is active or should be expanded by default
    const isActiveOrExpanded = activeMenu?.name.split('.')[0] === menu.name || menu.expanded;
    if (menu.subMenu) {
      expandedMenus[menu.name] = !!isActiveOrExpanded;
    }
  }
  return expandedMenus;
};
const isMenuActive = (menus, menu, active) => {
  if (active) {
    const currActiveMenu = getMenu(menus, active);
    return !!currActiveMenu && (currActiveMenu === menu || currActiveMenu.name.split('.')[0] === menu.name || currActiveMenu.name === menu.name || !!currActiveMenu.link && currActiveMenu.link === menu.link);
  }
  return false;
};
const getNavItemColor = (isActive, disabled) => {
  return disabled ? 'inverse-lightest' : isActive ? 'primary-dark' : 'inverse';
};

var css_248z$A = ".verticalNav-module-VerticalNav-Dmfut-5-0-0-9 {\n  display: inline-flex;\n  flex-direction: column;\n}\n\n.verticalNav-module-VerticalNav--expanded-YioJV-5-0-0-9 {\n  width: 240px;\n}\n\n.verticalNav-module-VerticalNav-section-LKy0d-5-0-0-9 {\n  text-transform: uppercase;\n  padding-left: var(--spacing-40);\n  padding-top: var(--spacing-30);\n  padding-bottom: var(--spacing-15);\n  margin-top: var(--spacing-20);\n}\n\n.verticalNav-module-VerticalNav-section--border-II3bk-5-0-0-9 {\n  border-top: var(--border-width-2-5) solid var(--secondary-light);\n}\n\n.verticalNav-module-MenuItem-tqOuM-5-0-0-9 {\n  text-decoration: none;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n  width: 232px;\n}\n\n.verticalNav-module-MenuItem--horizontal-HqCw4-5-0-0-9 {\n  height: var(--spacing-80);\n  padding-right: var(--spacing-30);\n  padding-left: var(--spacing-30);\n  border-radius: var(--border-radius-40);\n  margin: 0 var(--spacing-2-5);\n}\n\n.verticalNav-module-MenuItem--vertical-KTu0E-5-0-0-9 {\n  margin-top: var(--spacing-10);\n  margin-bottom: var(--spacing-10);\n}\n\n.verticalNav-module-MenuItem--collapsed-ksvh1-5-0-0-9 {\n  height: 28px;\n  width: 28px;\n  margin-left: 10px;\n  margin-right: 10px;\n  justify-content: center;\n  border-radius: var(--border-radius-full);\n  cursor: pointer;\n}\n\n.verticalNav-module-MenuItem--expanded-CNuEg-5-0-0-9 {\n  padding-left: var(--spacing-40);\n  padding-top: var(--spacing-10);\n  padding-bottom: var(--spacing-10);\n  margin-right: var(--spacing-20);\n  justify-content: space-between;\n  border-radius: 0px var(--border-radius-40) var(--border-radius-40) 0px;\n}\n\n.verticalNav-module-MenuItem--disabled-UwXL1-5-0-0-9 {\n  pointer-events: none;\n}\n\n.verticalNav-module-MenuItem-tqOuM-5-0-0-9:hover {\n  background: var(--secondary);\n  text-decoration: none;\n}\n\n.verticalNav-module-MenuItem-tqOuM-5-0-0-9:active {\n  background: var(--secondary-dark);\n}\n\n.verticalNav-module-MenuItem-tqOuM-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n  outline: none;\n}\n\n.verticalNav-module-MenuItem--disabled-UwXL1-5-0-0-9:focus {\n  box-shadow: none;\n}\n\n.verticalNav-module-MenuItem--active-ocJoe-5-0-0-9 {\n  background: var(--primary-lightest);\n}\n\n.verticalNav-module-MenuItem--active-ocJoe-5-0-0-9:hover {\n  background: var(--primary-lighter);\n}\n\n.verticalNav-module-MenuItem--active-ocJoe-5-0-0-9:active {\n  background: var(--primary-lighter);\n  color: var(--primary-darker);\n}\n\n.verticalNav-module-MenuItem--active-ocJoe-5-0-0-9:active .verticalNav-module-MenuItem-Text-5dxj5-5-0-0-9 {\n  color: var(--primary-darker);\n}\n\n.verticalNav-module-MenuItem--active-ocJoe-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n  outline: none;\n}\n\n.verticalNav-module-MenuItem--rounded-7Cz5E-5-0-0-9 {\n  border-radius: var(--border-radius-40);\n}\n\n.verticalNav-module-MenuItem--subMenu-ZHEdU-5-0-0-9 {\n  padding-left: 40px;\n}\n\n.verticalNav-module-MenuItem-tqOuM-5-0-0-9 .verticalNav-module-Text-pcT-x-5-0-0-9 {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.verticalNav-module-MenuItem--overflow-RfJ7G-5-0-0-9 {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.verticalNav-module-MenuItem-count-hxliH-5-0-0-9 {\n  margin-right: var(--spacing-10);\n}\n\n.verticalNav-module-MenuItem-count--disabled-2tJFi-5-0-0-9 {\n  opacity: var(--opacity-10);\n  color: var(--text);\n}\n";
var styles$z = {"VerticalNav":"verticalNav-module-VerticalNav-Dmfut-5-0-0-9","VerticalNav--expanded":"verticalNav-module-VerticalNav--expanded-YioJV-5-0-0-9","VerticalNav-section":"verticalNav-module-VerticalNav-section-LKy0d-5-0-0-9","VerticalNav-section--border":"verticalNav-module-VerticalNav-section--border-II3bk-5-0-0-9","MenuItem":"verticalNav-module-MenuItem-tqOuM-5-0-0-9","MenuItem--vertical":"verticalNav-module-MenuItem--vertical-KTu0E-5-0-0-9","MenuItem--collapsed":"verticalNav-module-MenuItem--collapsed-ksvh1-5-0-0-9","MenuItem--expanded":"verticalNav-module-MenuItem--expanded-CNuEg-5-0-0-9","MenuItem--disabled":"verticalNav-module-MenuItem--disabled-UwXL1-5-0-0-9","MenuItem--active":"verticalNav-module-MenuItem--active-ocJoe-5-0-0-9","MenuItem-Text":"verticalNav-module-MenuItem-Text-5dxj5-5-0-0-9","MenuItem--rounded":"verticalNav-module-MenuItem--rounded-7Cz5E-5-0-0-9","MenuItem--subMenu":"verticalNav-module-MenuItem--subMenu-ZHEdU-5-0-0-9","MenuItem--overflow":"verticalNav-module-MenuItem--overflow-RfJ7G-5-0-0-9","MenuItem-count":"verticalNav-module-MenuItem-count-hxliH-5-0-0-9","MenuItem-count--disabled":"verticalNav-module-MenuItem-count--disabled-2tJFi-5-0-0-9"};
styleInject(css_248z$A);

const MenuIcon = props => {
  const {
    isChildrenVisible
  } = props;
  return /*#__PURE__*/React.createElement(Icon, {
    className: "mx-4",
    name: isChildrenVisible ? 'keyboard_arrow_up' : 'keyboard_arrow_down'
  });
};
const MenuPills = props => {
  const {
    disabled,
    isActive,
    count
  } = props;
  const PillsClass = classNames({
    [styles$z['MenuItem-count']]: true,
    [styles$z['MenuItem-count--disabled']]: disabled
  });
  return /*#__PURE__*/React.createElement(Pills, {
    subtle: disabled,
    className: PillsClass,
    appearance: getPillsAppearance(isActive),
    "data-test": "DesignSystem-VerticalNav--Pills"
  }, count);
};
const MenuItem$1 = props => {
  const {
    menu,
    isActive,
    expanded,
    rounded,
    hasSubmenu,
    isChildren,
    isChildrenVisible,
    onClick,
    customItemRenderer
  } = props;
  const [isTextTruncated, setIsTextTruncated] = React.useState(false);
  const {
    detectTruncation
  } = Tooltip.useAutoTooltip();
  const contentRef = /*#__PURE__*/React.createRef();
  React.useEffect(() => {
    const isTruncated = detectTruncation(contentRef);
    setIsTextTruncated(isTruncated);
  }, [contentRef]);
  const MenuLabel = props => {
    const {
      label,
      labelColor
    } = props;
    const labelClass = classNames({
      [styles$z['MenuItem-Text']]: true,
      [styles$z['MenuItem--overflow']]: true,
      ['mr-5']: !hasSubmenu && menu.count,
      ['ellipsis--noWrap']: true
    });
    return /*#__PURE__*/React.createElement(Text, {
      "data-test": "DesignSystem-VerticalNav--Text",
      ref: contentRef,
      color: labelColor,
      className: labelClass
    }, label);
  };
  const onClickHandler = ev => {
    ev.preventDefault();
    if (onClick) onClick(menu);
  };
  const baseProps = {
    onClick: onClickHandler,
    href: menu.link,
    tabIndex: 0,
    ...extractBaseProps(props)
  };
  const itemColor = getNavItemColor(isActive, menu.disabled);
  const ItemClass = classNames({
    [styles$z['MenuItem']]: true,
    [styles$z['MenuItem--vertical']]: true,
    [styles$z['MenuItem--collapsed']]: !expanded,
    [styles$z['MenuItem--expanded']]: expanded,
    [styles$z['MenuItem--active']]: isActive,
    [styles$z['MenuItem--disabled']]: menu.disabled,
    [styles$z['MenuItem--subMenu']]: isChildren && expanded,
    [styles$z['MenuItem--rounded']]: rounded && expanded,
    [`color-${itemColor}`]: true
  });
  const renderSubMenu = () => {
    if (hasSubmenu) {
      return /*#__PURE__*/React.createElement(MenuIcon, {
        isChildrenVisible: isChildrenVisible
      });
    }
    if (menu.count !== undefined) {
      const count = menu.count > 99 ? '99+' : menu.count;
      return /*#__PURE__*/React.createElement(MenuPills, {
        disabled: menu.disabled,
        isActive: isActive,
        count: count
      });
    }
    return null;
  };
  if (!expanded && !menu.icon) return null;
  const customItemProps = {
    ...props,
    contentRef,
    MenuIcon: () => MenuIcon({
      isChildrenVisible
    }),
    MenuLabel: () => MenuLabel({
      label: menu.label,
      labelColor: itemColor
    }),
    MenuPills: () => menu.count !== undefined ? MenuPills({
      disabled: menu.disabled,
      isActive: isActive,
      count: menu.count
    }) : /*#__PURE__*/React.createElement(React.Fragment, null)
  };
  return customItemRenderer ? customItemRenderer(customItemProps) :
  /*#__PURE__*/
  // TODO(a11y)
  // eslint-disable-next-line
  React.createElement(Tooltip, {
    showTooltip: expanded ? isTextTruncated : true,
    tooltip: menu.label,
    position: "right"
  }, /*#__PURE__*/React.createElement(Link$1, _extends$2({
    componentType: "a",
    className: ItemClass
  }, baseProps), /*#__PURE__*/React.createElement("div", {
    className: "d-flex align-items-center overflow-hidden"
  }, menu.icon && /*#__PURE__*/React.createElement(Icon, {
    "data-test": "DesignSystem-VerticalNav--Icon",
    className: expanded ? 'mr-4' : '',
    name: menu.icon,
    type: menu.iconType
  }), expanded && /*#__PURE__*/React.createElement(MenuLabel, {
    label: menu.label,
    labelColor: itemColor
  })), expanded && renderSubMenu()));
};
MenuItem$1.defaultProps = {
  isActive: false
};

/**
 * ####NOTE: VerticalNav sets first subMenu(if present) active if the Navigation is collapsed.
 */

const VerticalNav = props => {
  const {
    menus,
    active,
    onClick,
    expanded,
    rounded,
    autoCollapse,
    className,
    customItemRenderer
  } = props;
  const [subMenuExpandedState, setSubMenuExpandedState] = React.useState({});
  const [menuState, setMenuState] = React.useState({});
  const baseProps = extractBaseProps(props);
  React.useEffect(() => {
    if (props.active) {
      const currMenu = getMenu(menus, props.active);
      if (currMenu) updateMenuState(currMenu, true);
    }
  }, [props.active]);
  React.useEffect(() => {
    const expandedMenus = getExpandedMenus(menus, active);
    setSubMenuExpandedState(expandedMenus);
  }, []);
  const updateMenuState = (menu, val) => {
    const currMenu = getMenu(menus, menu);
    if (currMenu) {
      const nameSplit = currMenu.name.split('.');
      if (nameSplit.length > 1 || currMenu.subMenu) {
        const name = nameSplit[0];
        if (autoCollapse) {
          setMenuState({
            [name]: val || !menuState[name]
          });
        } else {
          const menuData = {
            ...menuState
          };
          menuData[name] = val !== undefined ? val : !menuData[name];
          setMenuState(menuData);
        }
      } else {
        if (autoCollapse) {
          if (!expanded) setMenuState({});
        }
      }
    }
  };
  const onClickHandler = menu => {
    if (menu.subMenu) {
      if (!expanded) {
        if (onClick) onClick(menu.subMenu[0]);
      } else {
        if (!subMenuExpandedState[menu.name]) {
          updateMenuState(menu);
        }
        setMenuState({
          ...menuState,
          [menu.name]: false
        });
        setSubMenuExpandedState({
          ...subMenuExpandedState,
          [menu.name]: !subMenuExpandedState[menu.name]
        });
      }
    } else {
      if (onClick) onClick(menu);
    }
  };
  const renderList = () => {
    const list = menus.map((menu, index) => {
      const isActive = !menuState[menu.name] && isMenuActive(menus, menu, active);
      const hasSubmenu = menu.subMenu && menu.subMenu.length > 0;
      const isChildrenVisible = hasSubmenu && (menuState[menu.name] || subMenuExpandedState[menu.name]);
      const hasGroup = index === 0 || menus[index - 1].group !== menu.group;
      const sectionClass = classNames({
        [styles$z['VerticalNav-section']]: true,
        [styles$z['VerticalNav-section--border']]: index !== 0
      });
      return /*#__PURE__*/React.createElement(React.Fragment, {
        key: index
      }, hasGroup && menu.group && expanded && /*#__PURE__*/React.createElement("div", {
        className: sectionClass
      }, /*#__PURE__*/React.createElement(Text, {
        "data-test": "DesignSystem-VerticalNav--Section",
        size: "small",
        weight: "strong",
        appearance: "subtle"
      }, menu.group)), /*#__PURE__*/React.createElement(MenuItem$1, {
        "data-test": "DesignSystem-VerticalNav--Item",
        menu: menu,
        expanded: expanded,
        isActive: isActive,
        hasSubmenu: hasSubmenu,
        isChildren: false,
        rounded: rounded,
        isChildrenVisible: isChildrenVisible,
        onClick: onClickHandler,
        customItemRenderer: customItemRenderer
      }), isChildrenVisible && menu.subMenu.map((subMenu, id) => {
        return /*#__PURE__*/React.createElement(MenuItem$1, {
          key: id,
          menu: subMenu,
          expanded: expanded,
          hasSubmenu: false,
          isChildren: true,
          rounded: rounded,
          onClick: onClickHandler,
          isActive: isMenuActive(menus, subMenu, active),
          customItemRenderer: customItemRenderer
        });
      }));
    });
    return list;
  };
  const classes = classNames({
    [styles$z.VerticalNav]: true,
    [styles$z['VerticalNav--expanded']]: expanded
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
    className: classes
  }), renderList());
};
VerticalNav.defaultProps = {
  expanded: true,
  autoCollapse: true,
  rounded: false,
  showTooltip: false
};

var css_248z$z = ".horizontalNav-module-HorizontalNav-TaKHt-5-0-0-9 {\n  display: flex;\n}\n\n.horizontalNav-module-HorizontalNav-menu-hc7-x-5-0-0-9 {\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  height: var(--spacing-80);\n  padding-right: var(--spacing-30);\n  padding-left: var(--spacing-30);\n  border-radius: var(--border-radius-40);\n  margin: 0 var(--spacing-2-5);\n}\n\n.horizontalNav-module-HorizontalNav-menu--disabled-WDs4e-5-0-0-9 {\n  pointer-events: none;\n}\n\n.horizontalNav-module-HorizontalNav-menu--disabled-WDs4e-5-0-0-9:focus-visible,\n.horizontalNav-module-HorizontalNav-menu--disabled-WDs4e-5-0-0-9:focus {\n  outline: none;\n}\n\n.horizontalNav-module-HorizontalNav-menu--default-iaSU9-5-0-0-9:focus-visible,\n.horizontalNav-module-HorizontalNav-menu--default-iaSU9-5-0-0-9:focus {\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n  outline: none;\n}\n\n.horizontalNav-module-HorizontalNav-menu--default-iaSU9-5-0-0-9:hover {\n  background-color: var(--secondary);\n}\n\n.horizontalNav-module-HorizontalNav-menu--default-iaSU9-5-0-0-9:active {\n  background-color: var(--secondary-dark);\n}\n\n.horizontalNav-module-HorizontalNav-menu--active-LO21D-5-0-0-9 {\n  background-color: var(--primary-lightest);\n}\n\n.horizontalNav-module-HorizontalNav-menu--active-LO21D-5-0-0-9:focus-visible,\n.horizontalNav-module-HorizontalNav-menu--active-LO21D-5-0-0-9:focus {\n  background-color: var(--primary-lightest);\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n  outline: none;\n}\n\n.horizontalNav-module-HorizontalNav-menu--active-LO21D-5-0-0-9:hover {\n  background-color: var(--primary-lighter);\n}\n\n.horizontalNav-module-HorizontalNav-menu--active-LO21D-5-0-0-9:active {\n  background-color: var(--primary-lighter);\n  color: var(--primary-darker);\n}\n\n.horizontalNav-module-HorizontalNav-menu--active-LO21D-5-0-0-9:active .horizontalNav-module-HorizontalNav-menuText-hlHtx-5-0-0-9 {\n  color: var(--primary-darker);\n}\n\n.horizontalNav-module-HorizontalNav-menuText-hlHtx-5-0-0-9 {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.horizontalNav-module-HorizontalNav-menu--active-LO21D-5-0-0-9,\n.horizontalNav-module-HorizontalNav-animate-HJvL2-5-0-0-9 {\n  transition-delay: var(--duration--fast-02);\n}\n\n.horizontalNav-module-HorizontalNav-animate-HJvL2-5-0-0-9 {\n  transition: var(--duration--fast-02) var(--standard-productive-curve);\n}\n\n.horizontalNav-module-HorizontalNav-pills-Ko7S--5-0-0-9 {\n  margin-right: var(--spacing-10);\n}\n\n.horizontalNav-module-HorizontalNav-pills--disabled-qc3Ao-5-0-0-9 {\n  opacity: var(--opacity-10);\n}\n";
var styles$y = {"HorizontalNav":"horizontalNav-module-HorizontalNav-TaKHt-5-0-0-9","HorizontalNav-menu":"horizontalNav-module-HorizontalNav-menu-hc7-x-5-0-0-9","HorizontalNav-menu--disabled":"horizontalNav-module-HorizontalNav-menu--disabled-WDs4e-5-0-0-9","HorizontalNav-menu--default":"horizontalNav-module-HorizontalNav-menu--default-iaSU9-5-0-0-9","HorizontalNav-menu--active":"horizontalNav-module-HorizontalNav-menu--active-LO21D-5-0-0-9","HorizontalNav-menuText":"horizontalNav-module-HorizontalNav-menuText-hlHtx-5-0-0-9","HorizontalNav-animate":"horizontalNav-module-HorizontalNav-animate-HJvL2-5-0-0-9","HorizontalNav-pills":"horizontalNav-module-HorizontalNav-pills-Ko7S--5-0-0-9","HorizontalNav-pills--disabled":"horizontalNav-module-HorizontalNav-pills--disabled-qc3Ao-5-0-0-9"};
styleInject(css_248z$z);

const HorizontalNav = props => {
  const {
    menus,
    active,
    onClick,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$y['HorizontalNav']]: true
  }, className);
  const onClickHandler = menu => () => {
    if (onClick) onClick(menu);
  };
  const getPillsClass = disabled => classNames({
    [styles$y['HorizontalNav-pills']]: true,
    [styles$y['HorizontalNav-pills--disabled']]: disabled,
    [styles$y['HorizontalNav-animate']]: true
  });
  const renderIcon = (menu, isActive) => {
    if (menu.count !== undefined) {
      const count = menu.count > 99 ? '99+' : menu.count;
      return /*#__PURE__*/React.createElement(Pills, {
        subtle: menu.disabled,
        className: getPillsClass(menu.disabled),
        appearance: getPillsAppearance(isActive),
        "data-test": "DesignSystem-HorizontalNav--Pills"
      }, count);
    }
    const IconClassName = classNames('mr-3', styles$y['HorizontalNav-animate']);
    if (menu.icon) {
      return /*#__PURE__*/React.createElement(Icon, {
        className: IconClassName,
        name: menu.icon,
        type: menu.iconType,
        "data-test": "DesignSystem-HorizontalNav--Icon"
      });
    }
    return null;
  };
  const onKeyDownHandler = (event, menu) => {
    if (event.key === 'Enter' && onClick) {
      onClick(menu);
    }
  };
  const list = menus.map((menu, index) => {
    const isActive = isMenuActive(menus, menu, active);
    const itemColor = getNavItemColor(isActive, menu.disabled);
    const menuClasses = classNames({
      [styles$y['HorizontalNav-menu']]: true,
      [styles$y['HorizontalNav-menu--default']]: !isActive && !menu.disabled,
      [styles$y['HorizontalNav-menu--active']]: isActive,
      [styles$y['HorizontalNav-menu--disabled']]: menu.disabled,
      [styles$y[`HorizontalNav-animate`]]: true,
      [`color-${itemColor}`]: true
    });
    const textClasses = classNames(styles$y['HorizontalNav-menuText'], styles$y['HorizontalNav-animate']);
    return (
      /*#__PURE__*/
      // TODO(a11y)
      // eslint-disable-next-line
      React.createElement("div", {
        tabIndex: 0,
        "data-test": "DesignSystem-HorizontalNav",
        key: index,
        className: menuClasses,
        onClick: onClickHandler(menu),
        onKeyDown: e => onKeyDownHandler(e, menu),
        role: "button"
      }, renderIcon(menu, isActive), /*#__PURE__*/React.createElement(Text, {
        color: itemColor,
        weight: "medium",
        "data-test": "DesignSystem-HorizontalNav--Text",
        className: textClasses
      }, menu.label))
    );
  });
  return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
    className: classes
  }), list);
};

const tooltipPropsList = ['trigger', 'on', 'open', 'offset', 'onToggle', 'dark', 'customStyle', 'closeOnBackdropClick', 'hideOnReferenceEscape', 'closeOnScroll'];
const positionValue = {
  bottom: 'bottom',
  top: 'top',
  'top-start': 'top',
  'top-end': 'top',
  'bottom-start': 'bottom',
  'bottom-end': 'bottom',
  left: 'left',
  right: 'right'
};
const detectTruncation = boundaryRef => {
  const element = boundaryRef?.current;
  const isTruncated = element ? element.scrollWidth > element.clientWidth : false;
  return isTruncated;
};
const Tooltip = props => {
  const {
    children,
    tooltip,
    showTooltip,
    showOnTruncation,
    elementRef,
    className,
    ...rest
  } = props;
  const childrenRef = React.useRef(null);
  const [isTruncated, setIsTruncated] = React.useState(false);
  React.useEffect(() => {
    const element = elementRef ? elementRef : childrenRef;
    setIsTruncated(detectTruncation(element));
  }, [childrenRef, elementRef, children]);
  const renderChildren = elementRef || ! /*#__PURE__*/React.isValidElement(children) ? children : /*#__PURE__*/React.cloneElement(children, {
    ref: childrenRef
  });
  if (!showTooltip) {
    // If showTooltip is false skip the Popover and return the children directly
    return children;
  }
  const tooltipWrapper = /*#__PURE__*/React.createElement("div", {
    className: styles$L['Tooltip']
  }, /*#__PURE__*/React.createElement(Text, {
    className: styles$L['Tooltip-text'],
    appearance: "white"
  }, tooltip));
  const classes = classNames(styles$L['Tooltip-container'], className);
  if (showOnTruncation) {
    return isTruncated ? /*#__PURE__*/React.createElement(Popover, _extends$2({
      trigger: renderChildren,
      on: 'hover',
      offset: 'medium',
      animationClass: {
        open: styles$L[`Tooltip-animation-open-${positionValue[props.position]}`],
        close: styles$L[`Tooltip-animation-close-${positionValue[props.position]}`]
      },
      className: classes
    }, rest), tooltipWrapper) : renderChildren;
  }
  return /*#__PURE__*/React.createElement(Popover, _extends$2({
    trigger: children,
    on: 'hover',
    offset: 'medium',
    animationClass: {
      open: styles$L[`Tooltip-animation-open-${positionValue[props.position]}`],
      close: styles$L[`Tooltip-animation-close-${positionValue[props.position]}`]
    },
    className: classes
  }, rest), tooltipWrapper);
};
Tooltip.useAutoTooltip = function () {
  return {
    detectTruncation
  };
};
Tooltip.defaultProps = Object.assign({}, filterProps(Popover.defaultProps, tooltipPropsList), {
  hoverable: false,
  showTooltip: true,
  showOnTruncation: false
});

/**
 *
 * Dialog component has been deprecated, please use [Modal](https://mds.innovaccer.com/?path=/docs/components-modal-modal-all--all) component instead.
 *
 */

const Dialog = props => {
  const {
    dimension,
    primaryButtonAppearance,
    secondaryButtonAppearance,
    open,
    onClose,
    heading,
    title,
    description,
    primaryButtonLabel,
    primaryButtonCallback,
    secondaryButtonLabel,
    secondaryButtonCallback
  } = props;
  const baseProps = extractBaseProps(props);
  return /*#__PURE__*/React.createElement(Modal, _extends$2({
    "data-test": "DesignSystem-Dialog"
  }, baseProps, {
    open: open,
    dimension: dimension,
    onClose: onClose,
    headerOptions: {
      heading
    },
    footer: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {
      type: "button",
      "data-test": "DesignSystem-Dialog--SecondaryButton",
      appearance: secondaryButtonAppearance,
      onClick: secondaryButtonCallback
    }, secondaryButtonLabel), /*#__PURE__*/React.createElement(Button, {
      type: "button",
      className: "ml-4",
      "data-test": "DesignSystem-Dialog--PrimaryButton",
      appearance: primaryButtonAppearance,
      onClick: primaryButtonCallback
    }, primaryButtonLabel))
  }), /*#__PURE__*/React.createElement(ModalDescription, {
    title: title,
    description: description
  }));
};
Dialog.displayName = 'Dialog';
Dialog.defaultProps = {
  dimension: 'small',
  primaryButtonAppearance: 'primary',
  secondaryButtonAppearance: 'basic'
};

var css_248z$y = ".overlay-module-OverlayHeader-X75uk-5-0-0-9 {\n  box-sizing: border-box;\n  margin-left: var(--spacing-60);\n}\n\n.overlay-module-OverlayHeader--withBackButton-P8Z6f-5-0-0-9 {\n  margin-left: var(--spacing-40);\n}\n\n.overlay-module-OverlayHeader-headerWrapper-wDTqn-5-0-0-9 {\n  display: flex;\n  align-items: center;\n}\n\n.overlay-module-OverlayHeader-subheading-HGK3Q-5-0-0-9 {\n  margin-top: var(--spacing-05);\n}\n\n.overlay-module-OverlayHeader-subheading--withBackButton-vmR5i-5-0-0-9 {\n  margin-left: var(--spacing-20);\n}\n\n.overlay-module-OverlayBody-0aiqy-5-0-0-9 {\n  overflow-y: auto;\n}\n\n.overlay-module-Overlay-body--stickFooter-9u7pt-5-0-0-9 {\n  margin-bottom: 80px;\n}\n\n.overlay-module-OverlayFooter-0Ne3i-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  box-sizing: border-box;\n  padding-left: var(--spacing-60);\n  padding-right: var(--spacing-60);\n}\n";
var styles$x = {"OverlayHeader":"overlay-module-OverlayHeader-X75uk-5-0-0-9","OverlayHeader--withBackButton":"overlay-module-OverlayHeader--withBackButton-P8Z6f-5-0-0-9","OverlayHeader-headerWrapper":"overlay-module-OverlayHeader-headerWrapper-wDTqn-5-0-0-9","OverlayHeader-subheading":"overlay-module-OverlayHeader-subheading-HGK3Q-5-0-0-9","OverlayHeader-subheading--withBackButton":"overlay-module-OverlayHeader-subheading--withBackButton-vmR5i-5-0-0-9","OverlayBody":"overlay-module-OverlayBody-0aiqy-5-0-0-9","OverlayFooter":"overlay-module-OverlayFooter-0Ne3i-5-0-0-9"};
styleInject(css_248z$y);

const OverlayFooter = props => {
  const {
    open,
    className,
    children,
    actions
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$x.OverlayFooter]: true
  }, className);
  const wrapperRef = /*#__PURE__*/React.createRef();
  React.useEffect(() => {
    if (open) {
      if (wrapperRef.current) {
        const secondaryBtns = wrapperRef.current?.querySelectorAll(`.${buttonStyles['Button--basic']}`);
        const secondaryBtn = secondaryBtns[secondaryBtns.length - 1];
        if (secondaryBtn) {
          window.requestAnimationFrame(() => secondaryBtn.focus({
            preventScroll: true
          }));
        }
      }
    }
  }, [open]);
  if (actions) {
    return /*#__PURE__*/React.createElement("div", _extends$2({
      ref: wrapperRef
    }, baseProps, {
      className: classes
    }), actions.map(({
      label,
      ...options
    }, index) => {
      return /*#__PURE__*/React.createElement(Button, _extends$2({
        type: "button"
      }, options, {
        key: index
      }));
    }));
  }
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-OverlayFooter",
    ref: wrapperRef
  }, baseProps, {
    className: classes
  }), children);
};
OverlayFooter.displayName = 'OverlayFooter';

const OverlayHeader = props => {
  const {
    className,
    heading,
    subHeading,
    backButton,
    backIcon,
    backIconCallback,
    backButtonCallback,
    headingClass
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$x.OverlayHeader]: true,
    [styles$x['OverlayHeader--withBackButton']]: backButton || backIcon
  }, className);
  const subheadingClass = classNames({
    [styles$x['OverlayHeader-subheading']]: true,
    [styles$x['OverlayHeader-subheading--withBackButton']]: backButton || backIcon
  });
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-OverlayHeader"
  }, baseProps, {
    className: classes
  }), /*#__PURE__*/React.createElement("div", {
    className: styles$x['OverlayHeader-headerWrapper']
  }, (backButton || backIcon) && /*#__PURE__*/React.createElement(Button, {
    "data-test": "DesignSystem-OverlayHeader--Button",
    appearance: "transparent",
    className: "mr-4",
    icon: "arrow_back",
    largeIcon: true,
    onClick: backButtonCallback || backIconCallback
  }), heading && /*#__PURE__*/React.createElement(Heading, {
    className: headingClass,
    "data-test": "DesignSystem-OverlayHeader--heading"
  }, heading)), subHeading && /*#__PURE__*/React.createElement(Text, {
    "data-test": "DesignSystem-OverlayHeader--Subheading",
    appearance: "subtle",
    className: subheadingClass
  }, subHeading));
};
OverlayHeader.displayName = 'OverlayHeader';

const OverlayBody = props => {
  const {
    children,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$x.OverlayBody]: true
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-OverlayBody"
  }, baseProps, {
    className: classes
  }), children);
};
OverlayBody.defaultProps = {
  stickFooter: true,
  withFooter: true
};
OverlayBody.displayName = 'OverlayBody';

const getWrapperElement = () => {
  let element = document.querySelector('.Overlay-wrapper');
  if (element === null) {
    element = document.createElement('div');
    element.classList.add('Overlay-wrapper');
    document.body.appendChild(element);
  }
  return element;
};
const getUpdatedZIndex = ele => {
  const {
    containerClassName,
    elementRef,
    element
  } = ele;
  if (element === null) return;
  const elements = element.querySelectorAll(containerClassName);
  if (elements.length < 1) return;
  const siblings = Array.from(elements).filter(el => el !== elementRef.current);
  let zIndex = -1;
  siblings.forEach(element => {
    const prevZIndex = parseInt(window.getComputedStyle(element).zIndex || '0', 10);
    zIndex = Math.max(zIndex, prevZIndex + 10);
  });
  return zIndex > 0 ? zIndex : undefined;
};

// keyboard event, boolean?, (event: Event) => void
const closeOnEscapeKeypress = (event, isTopOverlay, onClose) => {
  if (event.key === 'Escape' && isTopOverlay) {
    onClose(event);

    // prevent browser-specific escape key behavior (Safari exits fullscreen)
    event.preventDefault();
  }
};

class OverlayManager {
  constructor() {
    _defineProperty$1(this, "overlays", void 0);
    this.overlays = [];
  }
  add(overlay) {
    if (overlay === null) return;
    let overlayIdx = this.overlays.indexOf(overlay);
    if (overlayIdx !== -1) {
      return overlayIdx;
    }
    overlayIdx = this.overlays.length;
    this.overlays.push(overlay);
    return overlayIdx;
  }
  remove(overlay) {
    if (overlay === null) return;
    const overlayIdx = this.overlays.indexOf(overlay);
    if (overlayIdx === -1) {
      return;
    }
    this.overlays.splice(overlayIdx, 1);
  }
  isTopOverlay(overlay) {
    if (overlay === null) return;
    return !!this.overlays.length && this.overlays[this.overlays.length - 1] === overlay;
  }
}
const instance = new OverlayManager();
Object.freeze(instance);

var css_248z$x = "@keyframes modal-module-modal-open-XetuH-5-0-0-9 {\n  from {\n    top: 20px;\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes modal-module-modal-close-6bwSt-5-0-0-9 {\n  from {\n    top: 104px;\n    opacity: 1;\n  }\n  to {\n    top: 124px;\n    opacity: 0;\n  }\n}\n\n.modal-module-Modal-jy6BE-5-0-0-9 {\n  position: fixed !important;\n  max-height: calc(100vh - 128px);\n  box-shadow: var(--shadow-m);\n  background-color: var(--white);\n  border-radius: var(--border-radius-20);\n  overflow: auto;\n  flex-direction: column;\n  display: none;\n  margin: auto;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  height: -moz-min-content;\n  height: min-content;\n}\n\n.modal-module-Modal--open-pEOMN-5-0-0-9 {\n  display: flex;\n}\n\n.modal-module-Modal-animation--open-GPVLI-5-0-0-9 {\n  animation: modal-module-modal-open-XetuH-5-0-0-9 var(--duration--moderate-02) var(--entrance-expressive-curve);\n}\n\n.modal-module-Modal-animation--close-re3FT-5-0-0-9 {\n  animation: modal-module-modal-close-6bwSt-5-0-0-9 var(--duration--fast-02) var(--exit-expressive-curve);\n}\n\n.modal-module-Modal-header-fdaxo-5-0-0-9 {\n  display: flex;\n  justify-content: flex-start;\n  padding-top: var(--spacing-40);\n  padding-bottom: var(--spacing-30);\n  padding-right: var(--spacing-40);\n}\n\n.modal-module-Modal-header--withSeperator-JuBGt-5-0-0-9 {\n  border-bottom: var(--border);\n}\n\n.modal-module-Modal-description-yJzzp-5-0-0-9 {\n  padding: var(--spacing-20) 0;\n}\n\n.modal-module-Modal-footer-njNb3-5-0-0-9 {\n  padding-top: var(--spacing-60);\n  padding-bottom: var(--spacing-60);\n  justify-content: flex-end;\n  position: absolute;\n  bottom: 0;\n}\n\n.modal-module-Modal-footer--withSeperator-E6Dfh-5-0-0-9 {\n  border-top: var(--border);\n}\n\n.modal-module-Modal-body-kEuY3-5-0-0-9 {\n  padding: 0 var(--spacing-60);\n}\n\n.modal-module-Modal-body--withMargin-QJGL1-5-0-0-9 {\n  margin-bottom: 80px;\n}\n\n.modal-module-Modal-body--withPadding-sX2cE-5-0-0-9 {\n  padding-bottom: var(--spacing-40);\n}\n";
var styles$w = {"Modal":"modal-module-Modal-jy6BE-5-0-0-9","Modal--open":"modal-module-Modal--open-pEOMN-5-0-0-9","Modal-animation--open":"modal-module-Modal-animation--open-GPVLI-5-0-0-9","Modal-animation--close":"modal-module-Modal-animation--close-re3FT-5-0-0-9","Modal-header":"modal-module-Modal-header-fdaxo-5-0-0-9","Modal-header--withSeperator":"modal-module-Modal-header--withSeperator-JuBGt-5-0-0-9","Modal-description":"modal-module-Modal-description-yJzzp-5-0-0-9","Modal-footer":"modal-module-Modal-footer-njNb3-5-0-0-9","Modal-footer--withSeperator":"modal-module-Modal-footer--withSeperator-E6Dfh-5-0-0-9","Modal-body":"modal-module-Modal-body-kEuY3-5-0-0-9","Modal-body--withMargin":"modal-module-Modal-body--withMargin-QJGL1-5-0-0-9","Modal-body--withPadding":"modal-module-Modal-body--withPadding-sX2cE-5-0-0-9"};
styleInject(css_248z$x);

/**
 * ** NOTE: Use `headerOptions`, `header`, `footerOptions`, `footer`, `onClose` and `backdropClose`(boolean). **
 * ** Support for composition using `ModalHeader`, `ModalBody` and `ModalFooter` will be deprecated soon. **
 */
class Modal extends React.Component {
  constructor(props) {
    super(props);
    _defineProperty$1(this, "modalRef", /*#__PURE__*/React.createRef());
    _defineProperty$1(this, "element", void 0);
    _defineProperty$1(this, "onCloseHandler", event => {
      const isTopOverlay = instance.isTopOverlay(this.modalRef.current);
      closeOnEscapeKeypress(event, isTopOverlay, this.onOutsideClickHandler);
    });
    this.element = getWrapperElement();
    this.state = {
      open: props.open,
      animate: props.open
    };
    this.onOutsideClickHandler = this.onOutsideClickHandler.bind(this);
  }
  componentDidMount() {
    if (this.props.closeOnEscape) {
      if (this.state.open) {
        instance.add(this.modalRef.current);
      }
      document.addEventListener('keydown', this.onCloseHandler);
    }
    if (this.props.backdropClose) {
      if (this.state.open) {
        instance.add(this.modalRef.current);
      }
    }
    const zIndex = getUpdatedZIndex({
      element: this.element,
      containerClassName: '.Overlay-container',
      elementRef: this.modalRef
    });
    this.setState({
      zIndex
    });
  }
  componentWillUnmount() {
    if (this.props.closeOnEscape) {
      document.removeEventListener('keydown', this.onCloseHandler);
    }
  }
  componentDidUpdate(prevProps) {
    if (prevProps.open !== this.props.open) {
      if (this.props.open) {
        const zIndex = getUpdatedZIndex({
          element: this.element,
          containerClassName: '.Overlay-container--open',
          elementRef: this.modalRef
        });
        this.setState({
          zIndex,
          open: true,
          animate: true
        });
        if (this.props.closeOnEscape || this.props.backdropClose) instance.add(this.modalRef.current);
      } else {
        this.setState({
          animate: false
        }, () => {
          window.setTimeout(() => {
            this.setState({
              open: false
            });
          }, 120);
        });
        if (this.props.closeOnEscape || this.props.backdropClose) instance.remove(this.modalRef.current);
      }
    }
  }
  onOutsideClickHandler(event) {
    const {
      closeOnEscape,
      backdropClose,
      onClose
    } = this.props;
    const {
      open
    } = this.state;
    if (open && instance.isTopOverlay(this.modalRef.current)) {
      if (closeOnEscape || backdropClose) instance.remove(this.modalRef.current);
      if (onClose) onClose(event, 'OutsideClick');else if (typeof backdropClose === 'function') backdropClose(event, 'OutsideClick');
    }
  }
  render() {
    const {
      animate,
      open,
      zIndex
    } = this.state;
    const {
      className,
      backdropClose,
      dimension,
      children,
      headerOptions,
      header,
      footerOptions,
      seperator,
      footer,
      onClose
    } = this.props;
    const BackdropZIndex = zIndex ? zIndex - 1 : 1000;
    const classes = classNames({
      [styles$w.Modal]: true,
      [styles$w['Modal--open']]: open,
      [styles$w['Modal-animation--open']]: animate,
      [styles$w['Modal-animation--close']]: !animate
    }, className);
    const headerClass = classNames({
      [styles$w['Modal-header']]: true,
      [styles$w['Modal-header--withSeperator']]: seperator
    });
    const footerClass = classNames({
      [styles$w['Modal-footer']]: true,
      [styles$w['Modal-footer--withSeperator']]: seperator
    });
    const ContainerClass = classNames({
      [rowStyles['Row']]: true,
      ['Overlay-container']: true,
      ['Overlay-container--open']: open
    });
    const isAPINew = headerOptions || footerOptions || footer || header;
    const bodyClass = classNames({
      [styles$w['Modal-body']]: true,
      [styles$w['Modal-body--withMargin']]: isAPINew ? !!footer : true,
      [styles$w['Modal-body--withPadding']]: isAPINew ? !footer : true
    });
    const baseProps = extractBaseProps(this.props);
    const sizeMap = {
      small: {
        size: '3',
        sizeL: '4',
        sizeM: '4',
        sizeXS: '10'
      },
      medium: {
        size: '4',
        sizeL: '6',
        sizeM: '6',
        sizeXS: '10'
      },
      large: {
        size: '6',
        sizeL: '8',
        sizeM: '8',
        sizeXS: '10'
      }
    };
    const ModalContainer = /*#__PURE__*/React.createElement(Row, {
      "data-test": "DesignSystem-ModalContainer",
      className: ContainerClass,
      "data-layer": true,
      "data-opened": open,
      style: {
        zIndex: zIndex ? zIndex : 1001
      }
    }, /*#__PURE__*/React.createElement(Column, _extends$2({
      "data-test": "DesignSystem-Modal"
    }, baseProps, {
      className: classes
    }, sizeMap[dimension], {
      ref: this.modalRef
    }), (headerOptions || header) && /*#__PURE__*/React.createElement("div", {
      className: headerClass
    }, /*#__PURE__*/React.createElement(Column, null, !header && /*#__PURE__*/React.createElement(OverlayHeader, _extends$2({
      "data-test": "DesignSystem-Modal--header"
    }, headerOptions)), !!header && header), /*#__PURE__*/React.createElement(Column, {
      className: "flex-grow-0"
    }, /*#__PURE__*/React.createElement(Tooltip, {
      tooltip: "Close",
      position: "bottom"
    }, /*#__PURE__*/React.createElement(Button, {
      icon: "close",
      appearance: "transparent",
      "data-test": "DesignSystem-Modal--CloseButton",
      onClick: event => {
        if (onClose) onClose(event, 'IconClick');
      }
    })))), open && children && /*#__PURE__*/React.createElement(React.Fragment, null, headerOptions || footerOptions || footer || header ? /*#__PURE__*/React.createElement(OverlayBody, {
      className: bodyClass
    }, this.props.children) : children), (!!footer || !!footerOptions) && /*#__PURE__*/React.createElement(OverlayFooter, _extends$2({
      "data-test": "DesignSystem-Modal--footer"
    }, footerOptions, {
      open: open,
      className: footerClass
    }), footer)));
    const ModalWrapper = backdropClose ? /*#__PURE__*/React.createElement(OutsideClick, {
      ref: this.modalRef,
      "data-test": "DesignSystem-Modal--OutsideClick",
      onOutsideClick: this.onOutsideClickHandler
    }, ModalContainer) : ModalContainer;
    const WrapperElement = /*#__PURE__*/ReactDOM.createPortal(ModalWrapper, this.element);
    return /*#__PURE__*/React.createElement(React.Fragment, null, WrapperElement, /*#__PURE__*/React.createElement(Backdrop, {
      open: this.state.animate,
      zIndex: BackdropZIndex
    }));
  }
}
_defineProperty$1(Modal, "defaultProps", {
  dimension: 'medium'
});

const ModalHeader = props => {
  const {
    className,
    heading,
    subHeading,
    onClose,
    seperator,
    backIcon,
    backIconCallback
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$w['Modal-header']]: true,
    [styles$w['Modal-header--withSeperator']]: seperator
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
    className: classes
  }), /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(OverlayHeader, {
    heading: heading,
    subHeading: subHeading,
    backButton: backIcon,
    backButtonCallback: backIconCallback
  })), /*#__PURE__*/React.createElement(Column, {
    className: "flex-grow-0"
  }, /*#__PURE__*/React.createElement(Button, {
    icon: "close",
    appearance: "transparent",
    "data-test": "DesignSystem-Modal--CloseButton",
    onClick: event => {
      if (onClose) onClose(event, 'IconClick');
    }
  })));
};
ModalHeader.displayName = 'ModalHeader';

const ModalBody = props => {
  const {
    children,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$w['Modal-body']]: true,
    [styles$w['Modal-body--withMargin']]: true
  }, className);
  return /*#__PURE__*/React.createElement(OverlayBody, _extends$2({}, baseProps, {
    stickFooter: true,
    className: classes
  }), children);
};
ModalBody.defaultProps = {
  stickFooter: true,
  withFooter: true
};
ModalBody.displayName = 'ModalBody';

const ModalFooter = props => {
  const {
    open,
    children,
    className,
    seperator
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$w['Modal-footer']]: true,
    [styles$w['Modal-footer--withSeperator']]: seperator
  }, className);
  return /*#__PURE__*/React.createElement(OverlayFooter, _extends$2({}, baseProps, {
    open: open,
    className: classes
  }), children);
};
ModalFooter.displayName = 'ModalFooter';

var css_248z$w = "@keyframes fullscreenModal-module-fullscreenModal-open-62v3L-5-0-0-9 {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0px);\n  }\n}\n\n@keyframes fullscreenModal-module-fullscreenModal-close-7gVSl-5-0-0-9 {\n  from {\n    opacity: 1;\n    transform: translateY(0px);\n  }\n  to {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n}\n\n.fullscreenModal-module-FullscreenModal-7WRgI-5-0-0-9 {\n  position: fixed !important;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  box-sizing: border-box;\n  padding-top: var(--spacing-120);\n  background-color: var(--white);\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n}\n\n.fullscreenModal-module-FullscreenModal-animation--open--3N-S-5-0-0-9 {\n  animation: fullscreenModal-module-fullscreenModal-open-62v3L-5-0-0-9 240ms cubic-bezier(0, 0, 0.3, 1);\n}\n\n.fullscreenModal-module-FullscreenModal-animation--close-BR--s-5-0-0-9 {\n  animation: fullscreenModal-module-fullscreenModal-close-7gVSl-5-0-0-9 120ms cubic-bezier(0.4, 0.14, 1, 1);\n}\n\n.fullscreenModal-module-FullscreenModal-header-sDsnU-5-0-0-9 {\n  display: flex;\n  justify-content: flex-start;\n  padding-top: var(--spacing-30);\n  padding-bottom: var(--spacing-30);\n  padding-right: var(--spacing-30);\n}\n\n.fullscreenModal-module-FullscreenModal-footer-iQzjY-5-0-0-9 {\n  justify-content: flex-end;\n  padding-top: var(--spacing-40);\n  padding-bottom: var(--spacing-40);\n}\n\n.fullscreenModal-module-FullscreenModal-body-7vbJl-5-0-0-9 {\n  padding: var(--spacing-40) var(--spacing-60);\n}\n";
var styles$v = {"FullscreenModal":"fullscreenModal-module-FullscreenModal-7WRgI-5-0-0-9","FullscreenModal-animation--open":"fullscreenModal-module-FullscreenModal-animation--open--3N-S-5-0-0-9","FullscreenModal-animation--close":"fullscreenModal-module-FullscreenModal-animation--close-BR--s-5-0-0-9","FullscreenModal-header":"fullscreenModal-module-FullscreenModal-header-sDsnU-5-0-0-9","FullscreenModal-footer":"fullscreenModal-module-FullscreenModal-footer-iQzjY-5-0-0-9","FullscreenModal-body":"fullscreenModal-module-FullscreenModal-body-7vbJl-5-0-0-9"};
styleInject(css_248z$w);

class FullscreenModal extends React.Component {
  constructor(props) {
    super(props);
    _defineProperty$1(this, "modalRef", /*#__PURE__*/React.createRef());
    _defineProperty$1(this, "element", void 0);
    _defineProperty$1(this, "onOutsideClickHandler", event => {
      instance.remove(this.modalRef.current);
      if (this.props.onClose) {
        this.props.onClose(event, 'EscapePress');
      } else {
        this.setState({
          animate: false
        }, () => {
          window.setTimeout(() => {
            this.setState({
              open: false
            });
          }, 120);
        });
      }
    });
    _defineProperty$1(this, "onCloseHandler", event => {
      const isTopOverlay = instance.isTopOverlay(this.modalRef.current);
      closeOnEscapeKeypress(event, isTopOverlay, this.onOutsideClickHandler);
    });
    this.element = getWrapperElement();
    this.state = {
      open: props.open,
      animate: props.open
    };
  }
  componentDidMount() {
    if (this.props.closeOnEscape) {
      if (this.state.open) {
        instance.add(this.modalRef.current);
      }
      document.addEventListener('keydown', this.onCloseHandler);
    }
  }
  componentWillUnmount() {
    if (this.props.closeOnEscape) document.removeEventListener('keydown', this.onCloseHandler);
  }
  componentDidUpdate(prevProps) {
    if (prevProps.open !== this.props.open) {
      if (this.props.open) {
        const zIndex = getUpdatedZIndex({
          element: this.element,
          containerClassName: '.Overlay-container--open',
          elementRef: this.modalRef
        });
        this.setState({
          zIndex,
          open: true,
          animate: true
        });
        if (this.props.closeOnEscape) instance.add(this.modalRef.current);
      } else {
        this.setState({
          animate: false
        }, () => {
          window.setTimeout(() => {
            this.setState({
              open: false
            });
          }, 120);
        });
        if (this.props.closeOnEscape) instance.remove(this.modalRef.current);
      }
    }
  }
  render() {
    const {
      animate,
      open,
      zIndex
    } = this.state;
    const {
      className,
      dimension,
      children,
      header,
      headerOptions,
      footer,
      footerOptions,
      onClose
    } = this.props;
    const classes = classNames({
      [styles$v.FullscreenModal]: true,
      [styles$v['FullscreenModal-animation--open']]: animate,
      [styles$v['FullscreenModal-animation--close']]: !animate
    }, className);
    const ContainerClass = classNames({
      ['Overlay-container']: true,
      ['Overlay-container--open']: open
    });
    const baseProps = extractBaseProps(this.props);
    const sizeMap = {
      medium: {
        size: '4',
        sizeL: '6',
        sizeM: '6',
        sizeXS: '12'
      },
      large: {
        size: '6',
        sizeL: '8',
        sizeM: '8',
        sizeXS: '12'
      }
    };
    const ModalContainer = open ? /*#__PURE__*/React.createElement("div", {
      "data-test": "DesignSystem-FullscreenModalContainer",
      className: ContainerClass,
      "data-layer": true,
      style: {
        zIndex
      }
    }, /*#__PURE__*/React.createElement("div", _extends$2({
      "data-test": "DesignSystem-FullscreenModal"
    }, baseProps, {
      className: classes,
      ref: this.modalRef
    }), /*#__PURE__*/React.createElement(Row, {
      className: "justify-content-center"
    }, /*#__PURE__*/React.createElement(Column, sizeMap[dimension], /*#__PURE__*/React.createElement(Row, {
      className: styles$v['FullscreenModal-header']
    }, /*#__PURE__*/React.createElement(Column, null, !header && /*#__PURE__*/React.createElement(OverlayHeader, _extends$2({
      "data-test": "DesignSystem-FullscreenModal--header"
    }, headerOptions)), !!header && header), /*#__PURE__*/React.createElement(Column, {
      className: "flex-grow-0"
    }, /*#__PURE__*/React.createElement(Tooltip, {
      tooltip: "Close"
    }, /*#__PURE__*/React.createElement(Button, {
      icon: "close",
      appearance: "transparent",
      "data-test": "DesignSystem-FullscreenModal--CloseButton",
      onClick: event => {
        if (onClose) onClose(event, 'IconClick');
      }
    })))), /*#__PURE__*/React.createElement(OverlayBody, {
      "data-test": "DesignSystem-FullscreenModal--Body",
      className: styles$v['FullscreenModal-body']
    }, children), (!!footer || !!footerOptions) && /*#__PURE__*/React.createElement(OverlayFooter, _extends$2({
      "data-test": "DesignSystem-FullscreenModal--footer"
    }, footerOptions, {
      open: open,
      className: styles$v['FullscreenModal-footer']
    }), footer))))) : null;
    const WrapperElement = /*#__PURE__*/ReactDOM.createPortal(ModalContainer, this.element);
    return /*#__PURE__*/React.createElement(React.Fragment, null, WrapperElement);
  }
}
_defineProperty$1(FullscreenModal, "defaultProps", {
  dimension: 'medium'
});

var css_248z$v = "@keyframes sidesheet-module-sidesheet-open-8Xjl--5-0-0-9 {\n  from {\n    right: -100%;\n  }\n  to {\n    right: 0;\n  }\n}\n\n@keyframes sidesheet-module-sidesheet-close-iHEhI-5-0-0-9 {\n  from {\n    right: 0;\n  }\n  to {\n    right: -100%;\n  }\n}\n\n@keyframes sidesheet-module-shift-right-spacing-3-0drfg-5-0-0-9 {\n  from {\n    transform: translateX(calc(-1 * var(--spacing-80)));\n  }\n  to {\n    transform: translateX(0);\n  }\n}\n\n@keyframes sidesheet-module-shift-left-spacing-3-6M1aJ-5-0-0-9 {\n  from {\n    transform: translateX(var(--spacing-80));\n  }\n  to {\n    transform: translateX(0);\n  }\n}\n\n.sidesheet-module-Sidesheet-NOxgD-5-0-0-9 {\n  position: fixed !important;\n  top: 0;\n  right: 0;\n  height: 100vh;\n  box-shadow: var(--shadow-l);\n  background-color: var(--white);\n  display: flex;\n  flex-direction: column;\n  visibility: hidden;\n}\n\n.sidesheet-module-Sidesheet--open-susbv-5-0-0-9 {\n  visibility: visible;\n}\n\n.sidesheet-module-Sidesheet-animation--open-J-A5h-5-0-0-9 {\n  animation: sidesheet-module-sidesheet-open-8Xjl--5-0-0-9 240ms cubic-bezier(0, 0, 0.3, 1);\n}\n\n.sidesheet-module-Sidesheet-animation--close-hu-c0-5-0-0-9 {\n  animation: sidesheet-module-sidesheet-close-iHEhI-5-0-0-9 120ms cubic-bezier(0.4, 0.14, 1, 1);\n  animation-fill-mode: forwards;\n}\n\n.sidesheet-module-Sidesheet-header--NeWW-5-0-0-9 {\n  display: flex;\n  justify-content: flex-start;\n  padding-top: var(--spacing-40);\n  padding-bottom: var(--spacing-30);\n  padding-right: var(--spacing-40);\n}\n\n.sidesheet-module-Sidesheet-header--withSeperator-NT81x-5-0-0-9 {\n  border-bottom: var(--border-width-2-5) solid var(--secondary-light);\n}\n\n.sidesheet-module-Sidesheet-body-M4-ag-5-0-0-9 {\n  padding: 0 var(--spacing-60);\n}\n\n.sidesheet-module-Sidesheet-body--withMargin-sz-fg-5-0-0-9 {\n  margin-bottom: 80px;\n}\n\n.sidesheet-module-Sidesheet-footer-PXjKf-5-0-0-9 {\n  padding-top: var(--spacing-60);\n  padding-bottom: var(--spacing-60);\n}\n\n.sidesheet-module-Sidesheet-footer--withSeperator-dePlQ-5-0-0-9 {\n  border-top: var(--border-width-2-5) solid var(--secondary-light);\n}\n\n.sidesheet-module-Sidesheet-footer--stickToBottom-QdtOq-5-0-0-9 {\n  position: absolute;\n  bottom: 0;\n}\n\n.sidesheet-module-Sidesheet-header--shiftRight-cGhUZ-5-0-0-9 {\n  animation: sidesheet-module-shift-right-spacing-3-0drfg-5-0-0-9 var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.sidesheet-module-Sidesheet-header--shiftLeft-t3PAU-5-0-0-9 {\n  animation: sidesheet-module-shift-left-spacing-3-6M1aJ-5-0-0-9 var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.sidesheet-module-Sidesheet-body--nextPage-jIMMM-5-0-0-9 {\n  animation: sidesheet-module-fadeIn-LZlsa-5-0-0-9 var(--duration--fast-02) var(--standard-productive-curve);\n}\n\n.sidesheet-module-Sidesheet-body--firstPage-6LHoK-5-0-0-9 {\n  animation: sidesheet-module-fadeIn-LZlsa-5-0-0-9 var(--duration--fast-02) var(--standard-expressive-curve);\n}\n";
var styles$u = {"Sidesheet":"sidesheet-module-Sidesheet-NOxgD-5-0-0-9","Sidesheet--open":"sidesheet-module-Sidesheet--open-susbv-5-0-0-9","Sidesheet-animation--open":"sidesheet-module-Sidesheet-animation--open-J-A5h-5-0-0-9","Sidesheet-animation--close":"sidesheet-module-Sidesheet-animation--close-hu-c0-5-0-0-9","Sidesheet-header":"sidesheet-module-Sidesheet-header--NeWW-5-0-0-9","Sidesheet-header--withSeperator":"sidesheet-module-Sidesheet-header--withSeperator-NT81x-5-0-0-9","Sidesheet-body":"sidesheet-module-Sidesheet-body-M4-ag-5-0-0-9","Sidesheet-body--withMargin":"sidesheet-module-Sidesheet-body--withMargin-sz-fg-5-0-0-9","Sidesheet-footer":"sidesheet-module-Sidesheet-footer-PXjKf-5-0-0-9","Sidesheet-footer--withSeperator":"sidesheet-module-Sidesheet-footer--withSeperator-dePlQ-5-0-0-9","Sidesheet-footer--stickToBottom":"sidesheet-module-Sidesheet-footer--stickToBottom-QdtOq-5-0-0-9","Sidesheet-header--shiftRight":"sidesheet-module-Sidesheet-header--shiftRight-cGhUZ-5-0-0-9","Sidesheet-header--shiftLeft":"sidesheet-module-Sidesheet-header--shiftLeft-t3PAU-5-0-0-9","Sidesheet-body--nextPage":"sidesheet-module-Sidesheet-body--nextPage-jIMMM-5-0-0-9","Sidesheet-body--firstPage":"sidesheet-module-Sidesheet-body--firstPage-6LHoK-5-0-0-9"};
styleInject(css_248z$v);

const sidesheetWidth = {
  regular: '6',
  large: '10'
};
class Sidesheet extends React.Component {
  constructor(props) {
    super(props);
    _defineProperty$1(this, "sidesheetRef", /*#__PURE__*/React.createRef());
    _defineProperty$1(this, "element", void 0);
    _defineProperty$1(this, "onCloseHandler", event => {
      const isTopOverlay = instance.isTopOverlay(this.sidesheetRef.current);
      closeOnEscapeKeypress(event, isTopOverlay, this.onOutsideClickHandler);
    });
    this.element = getWrapperElement();
    this.state = {
      open: props.open,
      animate: props.open
    };
    this.onOutsideClickHandler = this.onOutsideClickHandler.bind(this);
  }
  componentDidMount() {
    if (this.props.closeOnEscape) {
      if (this.state.open) {
        instance.add(this.sidesheetRef.current);
      }
      document.addEventListener('keydown', this.onCloseHandler);
    }
    if (this.props.backdropClose && this.state.open) {
      instance.add(this.sidesheetRef.current);
    }
    const zIndex = getUpdatedZIndex({
      element: this.element,
      containerClassName: '.Overlay-container',
      elementRef: this.sidesheetRef
    });
    this.setState({
      zIndex
    });
  }
  componentWillUnmount() {
    if (this.props.closeOnEscape) {
      document.removeEventListener('keydown', this.onCloseHandler);
    }
  }
  componentDidUpdate(prevProps) {
    if (prevProps.open !== this.props.open) {
      if (this.props.open) {
        const zIndex = getUpdatedZIndex({
          element: this.element,
          containerClassName: '.Overlay-container--open',
          elementRef: this.sidesheetRef
        });
        this.setState({
          zIndex,
          open: true,
          animate: true
        });
        if (this.props.closeOnEscape || this.props.backdropClose) instance.add(this.sidesheetRef.current);
      } else {
        this.setState({
          animate: false
        });
        if (this.props.closeOnEscape || this.props.backdropClose) instance.remove(this.sidesheetRef.current);
      }
    }
  }
  onOutsideClickHandler(event) {
    const {
      backdropClose,
      closeOnEscape,
      onClose
    } = this.props;
    const {
      open
    } = this.state;
    if (open && instance.isTopOverlay(this.sidesheetRef.current)) {
      if (backdropClose || closeOnEscape) instance.remove(this.sidesheetRef.current);
      if (onClose) onClose(event, 'OutsideClick');
    }
  }
  handleAnimationEnd() {
    if (!this.state.animate) {
      this.setState({
        open: false
      });
    }
  }
  render() {
    const {
      animate,
      open,
      zIndex
    } = this.state;
    const {
      className,
      backdropClose,
      dimension,
      footer,
      seperator,
      stickFooter,
      headerOptions,
      footerOptions,
      header,
      onClose
    } = this.props;
    const BackdropZIndex = zIndex ? zIndex - 1 : 1000;
    const classes = classNames({
      [styles$u.Sidesheet]: true,
      [styles$u['Sidesheet--open']]: open,
      [styles$u['Sidesheet-animation--open']]: animate,
      [styles$u['Sidesheet-animation--close']]: !animate
    }, className);
    const ContainerClass = classNames({
      ['Overlay-container']: true,
      ['fade-in']: animate,
      ['Overlay-container--open']: animate,
      ['Overlay-container--close']: !animate
    });
    const headerClass = classNames({
      [styles$u['Sidesheet-header']]: true,
      [styles$u['Sidesheet-header--withSeperator']]: seperator
    });
    const footerClass = classNames({
      [styles$u['Sidesheet-footer']]: true,
      [styles$u['Sidesheet-footer--withSeperator']]: seperator,
      [styles$u['Sidesheet-footer--stickToBottom']]: stickFooter
    });
    const bodyClass = classNames({
      [styles$u['Sidesheet-body']]: true,
      [styles$u['Sidesheet-body--withMargin']]: !!footer && stickFooter,
      [styles$u['Sidesheet-body--nextPage']]: headerOptions?.backButton || headerOptions?.backIcon,
      [styles$u['Sidesheet-body--firstPage']]: !headerOptions?.backButton && !headerOptions?.backIcon
    });
    const headingClass = classNames({
      [styles$u['Sidesheet-header--shiftRight']]: headerOptions?.backButton || headerOptions?.backIcon,
      [styles$u['Sidesheet-header--shiftLeft']]: !headerOptions?.backButton && !headerOptions?.backIcon
    });
    const baseProps = extractBaseProps(this.props);
    const SidesheetContainer = /*#__PURE__*/React.createElement(Row, {
      "data-test": "DesignSystem-SidesheetContainer",
      "data-open": this.state.open,
      className: ContainerClass,
      "data-layer": true,
      style: {
        zIndex: zIndex ? zIndex : 1001
      },
      ref: this.sidesheetRef,
      onAnimationEnd: () => this.handleAnimationEnd
    }, /*#__PURE__*/React.createElement(Column, _extends$2({
      "data-test": "DesignSystem-Sidesheet"
    }, baseProps, {
      className: classes,
      size: sidesheetWidth[dimension]
    }), /*#__PURE__*/React.createElement("div", {
      className: headerClass
    }, /*#__PURE__*/React.createElement(Column, {
      "data-test": "DesignSystem-Sidesheet--Header"
    }, !header && /*#__PURE__*/React.createElement(OverlayHeader, _extends$2({
      headingClass: headingClass
    }, headerOptions)), !!header && header), /*#__PURE__*/React.createElement(Column, {
      className: "flex-grow-0"
    }, /*#__PURE__*/React.createElement(Tooltip, {
      tooltip: "Close"
    }, /*#__PURE__*/React.createElement(Button, {
      icon: "close",
      appearance: "transparent",
      "data-test": "DesignSystem-Sidesheet--CloseButton",
      largeIcon: true,
      onClick: event => {
        if (onClose) onClose(event, 'IconClick');
      }
    })))), /*#__PURE__*/React.createElement(OverlayBody, {
      "data-test": "DesignSystem-Sidesheet--OverlayBody",
      className: bodyClass
    }, this.props.children), (!!footer || !!footerOptions) && /*#__PURE__*/React.createElement(OverlayFooter, _extends$2({
      "data-test": "DesignSystem-Sidesheet--Footer"
    }, footerOptions, {
      open: open,
      className: footerClass
    }), footer)));
    const SidesheetWrapper = backdropClose ? /*#__PURE__*/React.createElement(OutsideClick, {
      ref: this.sidesheetRef,
      "data-test": "DesignSystem-Sidesheet--OutsideClick",
      onOutsideClick: this.onOutsideClickHandler
    }, SidesheetContainer) : SidesheetContainer;
    const WrapperElement = /*#__PURE__*/ReactDOM.createPortal(SidesheetWrapper, this.element);
    return /*#__PURE__*/React.createElement(React.Fragment, null, WrapperElement, /*#__PURE__*/React.createElement(Backdrop, {
      open: this.state.animate,
      zIndex: BackdropZIndex
    }));
  }
}
_defineProperty$1(Sidesheet, "defaultProps", {
  dimension: 'regular',
  stickFooter: false,
  headerOptions: {}
});

var css_248z$u = ".collapsible-module-Collapsible-wrapper-CZ6L2-5-0-0-9 {\n  position: relative;\n  z-index: 600;\n}\n\n.collapsible-module-Collapsible-wrapper--overlay-HpWG9-5-0-0-9 {\n  margin-right: 40px;\n}\n\n.collapsible-module-Collapsible-R-E0M-5-0-0-9 {\n  display: inline-flex;\n  flex-direction: column;\n  background-color: var(--secondary-lightest);\n  width: var(--spacing-120);\n  height: 100%;\n  transition: width 240ms;\n  transition-timing-function: cubic-bezier(0.4, 0.14, 0.3, 1);\n}\n\n.collapsible-module-Collapsible--overlay-UiWwK-5-0-0-9 {\n  position: absolute;\n}\n\n.collapsible-module-Collapsible--shadow-ObNC6-5-0-0-9 {\n  box-shadow: var(--shadow-l);\n  clip-path: inset(0px -16px 0px 0px);\n}\n\n.collapsible-module-Collapsible-body-63KgR-5-0-0-9 {\n  flex-grow: 1;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n\n.collapsible-module-Collapsible-footer-cTQby-5-0-0-9 {\n  padding-top: var(--spacing-10);\n  padding-bottom: var(--spacing-10);\n  box-sizing: border-box;\n  cursor: pointer;\n  display: flex;\n}\n\n.collapsible-module-Collapsible-footer-cTQby-5-0-0-9:hover {\n  background-color: var(--secondary-lighter);\n}\n\n.collapsible-module-Collapsible-footer-cTQby-5-0-0-9:focus,\n.collapsible-module-Collapsible-footer-cTQby-5-0-0-9:focus-visible {\n  outline: none;\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n}\n\n.collapsible-module-Collapsible-footer-cTQby-5-0-0-9:active {\n  background-color: var(--secondary-light);\n}\n\n.collapsible-module-Collapsible-footer--seperator-4XHlt-5-0-0-9 {\n  border-top: var(--border-width-2-5) solid var(--secondary-light);\n}\n";
var styles$t = {"Collapsible-wrapper":"collapsible-module-Collapsible-wrapper-CZ6L2-5-0-0-9","Collapsible-wrapper--overlay":"collapsible-module-Collapsible-wrapper--overlay-HpWG9-5-0-0-9","Collapsible":"collapsible-module-Collapsible-R-E0M-5-0-0-9","Collapsible--overlay":"collapsible-module-Collapsible--overlay-UiWwK-5-0-0-9","Collapsible--shadow":"collapsible-module-Collapsible--shadow-ObNC6-5-0-0-9","Collapsible-body":"collapsible-module-Collapsible-body-63KgR-5-0-0-9","Collapsible-footer":"collapsible-module-Collapsible-footer-cTQby-5-0-0-9","Collapsible-footer--seperator":"collapsible-module-Collapsible-footer--seperator-4XHlt-5-0-0-9"};
styleInject(css_248z$u);

const Collapsible = props => {
  const {
    expanded,
    hoverable,
    expandedWidth,
    height,
    children,
    className,
    onToggle,
    withTrigger
  } = props;
  const [isClicked, setIsClicked] = React.useState(true);
  const [seperator, setSeperator] = React.useState(false);
  const ref = /*#__PURE__*/React.createRef();
  const baseProps = extractBaseProps(props);
  React.useEffect(() => {
    if (ref.current) {
      setSeperator(ref.current.scrollHeight > ref.current.clientHeight);
    }
  });
  const WrapperClass = classNames({
    [styles$t['Collapsible-wrapper']]: true,
    [styles$t['Collapsible-wrapper--overlay']]: !isClicked
  });
  const BodyClass = classNames({
    [styles$t['Collapsible-body']]: true,
    ['overflow-hidden']: !expanded && hoverable
  });
  const classes = classNames({
    [styles$t.Collapsible]: true,
    [styles$t['Collapsible--overlay']]: !isClicked,
    [styles$t['Collapsible--shadow']]: !isClicked && expanded
  }, className);
  const FooterClass = classNames({
    [styles$t['Collapsible-footer']]: true,
    [styles$t['Collapsible-footer--seperator']]: seperator
  });
  const onToggleHandler = (newExpanded, type) => () => {
    if (onToggle) {
      if (type === 'mouseenter' || type === 'mouseleave') {
        if (isClicked && expanded || !hoverable) return;
        setIsClicked(false);
      }
      if (type === 'click') {
        setIsClicked(true);
      }
      onToggle(newExpanded);
    }
  };
  const width = expanded ? expandedWidth : undefined;
  return /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-CollapsibleWrapper",
    className: WrapperClass,
    style: {
      height
    }
  }, /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Collapsible"
  }, baseProps, {
    "data-layer": true,
    className: classes,
    style: {
      width
    }
  }), /*#__PURE__*/React.createElement("div", {
    className: BodyClass,
    "data-test": "DesignSystem-CollapsibleBody",
    onMouseEnter: onToggleHandler(true, 'mouseenter'),
    onMouseLeave: onToggleHandler(false, 'mouseleave'),
    ref: ref
  }, children), withTrigger && /*#__PURE__*/React.createElement("div", {
    role: "button",
    tabIndex: 0,
    className: FooterClass,
    "data-test": "DesignSystem-Collapsible--Footer",
    onClick: onToggleHandler(!expanded, 'click'),
    onKeyDown: onToggleHandler(!expanded, 'click')
  }, /*#__PURE__*/React.createElement(Icon, {
    name: expanded ? 'keyboard_arrow_left' : 'keyboard_arrow_right',
    "data-test": "DesignSystem-Collapsible--FooterIcon",
    className: "px-6 py-4 my-2 cursor-pointer",
    size: 16
  }))));
};
Collapsible.displayName = 'Collapsible';
Collapsible.defaultProps = {
  expanded: false,
  hoverable: true,
  height: '100%',
  expandedWidth: '240px',
  withTrigger: true
};

var css_248z$t = ".chat-module-Box-nVkrd-5-0-0-9 {\n  width: 100%;\n  border-radius: var(--border-radius-20);\n  padding: var(--spacing-30);\n}\n\n.chat-module-Box--typing-WmXRM-5-0-0-9 {\n  padding-top: var(--spacing-20);\n  padding-bottom: var(--spacing-20);\n}\n\n.chat-module-Box--incoming-8KEhx-5-0-0-9 {\n  border: var(--border-width-2-5) solid var(--secondary-light);\n  background-color: var(--white);\n}\n\n.chat-module-Box--outgoing-eC7L7-5-0-0-9 {\n  background-color: var(--secondary-lightest);\n}\n\n.chat-module-Box-incoming--withStatus-gGxq9-5-0-0-9 {\n  border-bottom-left-radius: 0;\n}\n\n.chat-module-Box-outgoing--withStatus-fYw1d-5-0-0-9 {\n  border-bottom-right-radius: 0;\n}\n\n.chat-module-Box--urgent-LErV3-5-0-0-9 {\n  border-color: var(--alert);\n}\n\n.chat-module-ChatMessage-status-snoof-5-0-0-9 {\n  margin-top: var(--spacing-10);\n  display: block;\n}\n";
var styles$s = {"Box":"chat-module-Box-nVkrd-5-0-0-9","Box--typing":"chat-module-Box--typing-WmXRM-5-0-0-9","Box--incoming":"chat-module-Box--incoming-8KEhx-5-0-0-9","Box--outgoing":"chat-module-Box--outgoing-eC7L7-5-0-0-9","Box-incoming--withStatus":"chat-module-Box-incoming--withStatus-gGxq9-5-0-0-9","Box-outgoing--withStatus":"chat-module-Box-outgoing--withStatus-fYw1d-5-0-0-9","Box--urgent":"chat-module-Box--urgent-LErV3-5-0-0-9","ChatMessage-status":"chat-module-ChatMessage-status-snoof-5-0-0-9"};
styleInject(css_248z$t);

const Status$1 = props => {
  const {
    type,
    time,
    className,
    readText = 'Read',
    failedText = 'Click to retry',
    sendingText = 'Sending..'
  } = props;
  const baseProps = extractBaseProps(props);
  const StatusClass = classNames({
    ['d-flex align-items-center mt-3']: true
  }, className);
  const TextClass = classNames({
    [styles$s['ChatMessage-status']]: true
  }, className);
  const getTime = t => {
    if (typeof t === 'number') {
      const d = new Date(t);
      const hours = d.getHours();
      const minutes = d.getMinutes();
      const AMPM = hours < 12 ? 'AM' : 'PM';
      const hrs = hours % 12 || 12;
      return `${hrs}:${minutes} ${AMPM}`;
    }
    return t;
  };
  switch (type) {
    case 'failed':
      return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
        className: StatusClass
      }), /*#__PURE__*/React.createElement(Icon, {
        name: "error",
        type: "outlined",
        appearance: "destructive"
      }), /*#__PURE__*/React.createElement(Text, {
        appearance: "destructive",
        size: "small",
        className: "ml-1"
      }, "Failed"), /*#__PURE__*/React.createElement(MetaList, {
        list: [{
          label: failedText
        }],
        seperator: true
      }));
    case 'urgent':
      return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
        className: StatusClass
      }), /*#__PURE__*/React.createElement(Icon, {
        name: "notification_important",
        type: "outlined",
        appearance: "destructive"
      }), /*#__PURE__*/React.createElement(Text, {
        appearance: "destructive",
        size: "small",
        className: "ml-1"
      }, "Urgent"), time && /*#__PURE__*/React.createElement(MetaList, {
        list: [{
          label: getTime(time)
        }],
        seperator: true
      }));
    case 'read':
      return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
        className: StatusClass
      }), time && /*#__PURE__*/React.createElement(Text, {
        appearance: "subtle",
        size: "small"
      }, getTime(time)), /*#__PURE__*/React.createElement(MetaList, {
        list: [{
          label: readText
        }],
        seperator: true
      }));
    case 'sending':
      return /*#__PURE__*/React.createElement(Text, _extends$2({}, baseProps, {
        appearance: "subtle",
        size: "small",
        className: TextClass
      }), sendingText);
    case 'sent':
      return /*#__PURE__*/React.createElement(React.Fragment, null, time && /*#__PURE__*/React.createElement(Text, _extends$2({}, baseProps, {
        appearance: "subtle",
        size: "small",
        className: TextClass
      }), getTime(time)));
    default:
      return null;
  }
};
Status$1.displayName = 'Status';

const Box = props => {
  const {
    children,
    type,
    isTyping,
    statusType,
    withStatus,
    onClick,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const MessageClass = classNames({
    [styles$s['Box']]: true,
    [styles$s[`Box--${type}`]]: type,
    [styles$s['Box--typing']]: isTyping,
    [styles$s['Box--urgent']]: statusType === 'urgent',
    [styles$s[`Box-${type}--withStatus`]]: withStatus || isTyping
  }, className);

  /* TODO(a11y): fix accessibility  */
  /* eslint-disable  */
  return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
    className: MessageClass,
    onClick: onClick,
    "data-test": "DesignSystem-ChatMessage--Box"
  }), children);
  /* eslint-enable  */
};
Box.displayName = 'Box';

const MessageText = props => {
  const {
    text,
    type,
    isTyping,
    typingText,
    statusType,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  if (isTyping && type === 'incoming') {
    return /*#__PURE__*/React.createElement(Text, _extends$2({}, baseProps, {
      appearance: 'subtle',
      size: 'small',
      className: className
    }), typingText);
  }
  return /*#__PURE__*/React.createElement(Text, _extends$2({}, baseProps, {
    className: className,
    appearance: statusType === 'sending' ? 'subtle' : 'default'
  }), text);
};
MessageText.defaultProps = {
  text: '',
  typingText: 'Typing..'
};
MessageText.displayName = 'MessageText';

const ChatMessage = props => {
  const {
    type,
    text,
    isTyping,
    typingText,
    statusOptions,
    onClick,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const {
    type: statusType
  } = statusOptions || {};
  return /*#__PURE__*/React.createElement(Box, _extends$2({}, baseProps, {
    type: type,
    className: className,
    onClick: onClick,
    isTyping: isTyping,
    statusType: statusType,
    withStatus: statusOptions !== undefined
  }), /*#__PURE__*/React.createElement(MessageText, {
    type: type,
    text: text,
    typingText: typingText,
    isTyping: isTyping,
    statusType: statusType
  }), !isTyping && statusOptions && /*#__PURE__*/React.createElement(Status$1, statusOptions));
};
ChatMessage.displayName = 'ChatMessage';

const EmptyStateContext = /*#__PURE__*/React.createContext({});

var css_248z$s = ".emptyState-module-EmptyState-xAbqT-5-0-0-9 {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: transparent;\n}\n\n.emptyState-module-EmptyState-Wrapper-IqIuE-5-0-0-9 {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: transparent;\n  width: 100%;\n}\n\n.emptyState-module-EmptyState-image-GWUhK-5-0-0-9 {\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  -o-object-fit: contain;\n     object-fit: contain;\n}\n\n.emptyState-module-EmptyState-title-VlvHo-5-0-0-9 {\n  text-align: center;\n  max-width: 480px;\n}\n\n.emptyState-module-EmptyState-description-orGdo-5-0-0-9 {\n  text-align: center;\n  margin-top: var(--spacing-10);\n  max-width: 360px;\n}\n\n.emptyState-module-EmptyState-title--large-64J7i-5-0-0-9 {\n  margin-top: var(--spacing-120);\n}\n\n.emptyState-module-EmptyState-title--small-lEDPt-5-0-0-9 {\n  margin-top: var(--spacing-60);\n}\n\n.emptyState-module-EmptyState-description--large-hMXtK-5-0-0-9 {\n  margin-bottom: var(--spacing-60);\n}\n\n.emptyState-module-EmptyState-description--small-gq50n-5-0-0-9 {\n  margin-bottom: var(--spacing-40);\n}\n\n.emptyState-module-EmptyState-text-1y-HU-5-0-0-9 {\n  display: flex;\n  text-align: center;\n  justify-content: center;\n}\n\n.emptyState-module-EmptyState-actions-xhSau-5-0-0-9 {\n  display: flex;\n  justify-content: center;\n}\n\n.emptyState-module-EmptyState-title--compressed-Pp9jF-5-0-0-9 {\n  margin-top: var(--spacing-40);\n}\n.emptyState-module-EmptyState-title--standard-XtKl2-5-0-0-9 {\n  margin-top: var(--spacing-60);\n}\n.emptyState-module-EmptyState-title--tight-ZSyIK-5-0-0-9 {\n  margin-top: var(--spacing-30);\n}\n\n.emptyState-module-EmptyState-actions--compressed-E8-g2-5-0-0-9 {\n  margin-top: var(--spacing-40);\n}\n\n.emptyState-module-EmptyState-actions--standard-G3fT9-5-0-0-9 {\n  margin-top: var(--spacing-60);\n}\n\n.emptyState-module-EmptyState-actions--tight-mfayn-5-0-0-9 {\n  margin-top: var(--spacing-30);\n}\n";
var styles$r = {"EmptyState":"emptyState-module-EmptyState-xAbqT-5-0-0-9","EmptyState-Wrapper":"emptyState-module-EmptyState-Wrapper-IqIuE-5-0-0-9","EmptyState-image":"emptyState-module-EmptyState-image-GWUhK-5-0-0-9","EmptyState-title":"emptyState-module-EmptyState-title-VlvHo-5-0-0-9","EmptyState-description":"emptyState-module-EmptyState-description-orGdo-5-0-0-9","EmptyState-title--large":"emptyState-module-EmptyState-title--large-64J7i-5-0-0-9","EmptyState-title--small":"emptyState-module-EmptyState-title--small-lEDPt-5-0-0-9","EmptyState-description--large":"emptyState-module-EmptyState-description--large-hMXtK-5-0-0-9","EmptyState-description--small":"emptyState-module-EmptyState-description--small-gq50n-5-0-0-9","EmptyState-text":"emptyState-module-EmptyState-text-1y-HU-5-0-0-9","EmptyState-actions":"emptyState-module-EmptyState-actions-xhSau-5-0-0-9","EmptyState-title--compressed":"emptyState-module-EmptyState-title--compressed-Pp9jF-5-0-0-9","EmptyState-title--standard":"emptyState-module-EmptyState-title--standard-XtKl2-5-0-0-9","EmptyState-title--tight":"emptyState-module-EmptyState-title--tight-ZSyIK-5-0-0-9","EmptyState-actions--compressed":"emptyState-module-EmptyState-actions--compressed-E8-g2-5-0-0-9","EmptyState-actions--standard":"emptyState-module-EmptyState-actions--standard-G3fT9-5-0-0-9","EmptyState-actions--tight":"emptyState-module-EmptyState-actions--tight-mfayn-5-0-0-9"};
styleInject(css_248z$s);

const imageHeight$1 = {
  standard: '200px',
  compressed: '150px',
  tight: '100px',
  large: '200px',
  small: '200px'
};
const EmptyStateImage = props => {
  const {
    children,
    maxHeight,
    height,
    minHeight,
    src,
    alt,
    className,
    ...rest
  } = props;
  const contextProp = React__default.useContext(EmptyStateContext);
  const imageClasses = classNames({
    [styles$r['EmptyState-image']]: true
  }, className);
  const imageWrapperClasses = classNames({
    ['d-flex']: true,
    ['justify-content-center']: true
  }, className);
  const {
    size = 'standard'
  } = contextProp;
  const sizeStyle = {
    maxHeight: maxHeight ?? imageHeight$1[size],
    height: height,
    minHeight: minHeight
  };
  if (children) {
    return /*#__PURE__*/React__default.createElement("div", _extends$2({}, rest, {
      className: imageWrapperClasses,
      style: {
        ...sizeStyle
      }
    }), children);
  }
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, src && /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement("img", _extends$2({
    className: imageClasses,
    src: src,
    alt: alt,
    style: {
      ...sizeStyle
    },
    "data-test": "DesignSystem-EmptyState--Img"
  }, rest))));
};

const EmptyStateTitle = props => {
  const {
    children,
    className,
    ...rest
  } = props;
  const contextProp = React__default.useContext(EmptyStateContext);
  const {
    size = 'standard'
  } = contextProp;
  const headingClass = classNames({
    [styles$r[`EmptyState-text`]]: true,
    [styles$r[`EmptyState-title--${size}`]]: true
  }, className);
  if (size === 'standard') {
    return /*#__PURE__*/React__default.createElement(Heading, _extends$2({
      "data-test": "DesignSystem-EmptyState--Heading",
      className: headingClass
    }, rest), children);
  }
  return /*#__PURE__*/React__default.createElement(Text, _extends$2({
    "data-test": "DesignSystem-EmptyState--Heading",
    className: headingClass,
    weight: "medium",
    size: textSize[size]
  }, rest), children);
};

const EmptyStateDescription = props => {
  const {
    children,
    className,
    ...rest
  } = props;
  const contextProp = React__default.useContext(EmptyStateContext);
  const {
    size = 'standard'
  } = contextProp;
  const textSize = {
    standard: 'regular',
    compressed: 'regular',
    tight: 'small'
  };
  const descriptionClasses = classNames({
    [styles$r[`EmptyState-text`]]: true,
    ['mt-3']: true
  }, className);
  return /*#__PURE__*/React__default.createElement(Text, _extends$2({
    size: textSize[size],
    appearance: "subtle",
    className: descriptionClasses,
    "data-test": "DesignSystem-EmptyState--Text"
  }, rest), children);
};

const EmptyStateActions = props => {
  const {
    children,
    className,
    ...rest
  } = props;
  const contextProp = React__default.useContext(EmptyStateContext);
  const {
    size = 'standard'
  } = contextProp;
  const actionWrapperClasses = classNames({
    [styles$r[`EmptyState-actions--${size}`]]: true,
    [styles$r['EmptyState-actions']]: true
  }, className);
  return /*#__PURE__*/React__default.createElement("div", _extends$2({
    "data-test": "DesignSystem-EmptyState--Actions",
    className: actionWrapperClasses
  }, rest), children);
};

const imageHeight = {
  large: '256px',
  small: '128px',
  standard: '256px',
  compressed: '256px',
  tight: '256px'
};
const templateWidth = {
  standard: '480px',
  compressed: '400px',
  tight: '320px',
  large: '480px',
  small: '480px'
};
const HeadingSize = {
  large: 'l',
  small: 'm',
  standard: 'l',
  compressed: 'l',
  tight: 'l'
};
const textSize = {
  large: 'large',
  small: 'regular',
  standard: 'large',
  compressed: 'large',
  tight: 'regular'
};
const EmptyState = props => {
  const {
    imageSrc,
    title,
    description,
    size = 'standard',
    children,
    className,
    image,
    maxWidth,
    minWidth,
    width
  } = props;
  const baseProps = extractBaseProps(props);
  let templateSize = 'standard';
  const isValidSize = size => size === 'large' || size === 'small';
  if (title || description) {
    templateSize = isValidSize(size) ? size : 'large';
  } else {
    templateSize = isValidSize(size) ? 'standard' : size;
  }
  const wrapperClasses = classNames({
    [styles$r['EmptyState']]: true
  }, className);
  const emptyStateWrapper = classNames({
    [styles$r['EmptyState-Wrapper']]: true
  }, className);
  const headingClasses = classNames({
    [styles$r['EmptyState-title']]: true,
    [styles$r[`EmptyState-title--${templateSize}`]]: true
  });
  const textClasses = classNames({
    [styles$r['EmptyState-description']]: true,
    [styles$r[`EmptyState-description--${templateSize}`]]: children !== undefined
  });
  if (title || description) {
    return /*#__PURE__*/React.createElement("div", _extends$2({
      "data-test": "DesignSystem-EmptyState"
    }, baseProps, {
      className: wrapperClasses
    }), image && /*#__PURE__*/React.createElement("div", {
      style: {
        height: imageHeight[templateSize]
      }
    }, image), imageSrc && !image &&
    /*#__PURE__*/
    //TODO(a11y)
    //eslint-disable-next-line
    React.createElement("img", {
      src: imageSrc,
      height: imageHeight[templateSize],
      "data-test": "DesignSystem-EmptyState--Img"
    }), title && /*#__PURE__*/React.createElement(Heading, {
      "data-test": "DesignSystem-EmptyState--Heading",
      size: HeadingSize[templateSize],
      className: headingClasses
    }, title), description && /*#__PURE__*/React.createElement(Text, {
      size: textSize[templateSize],
      className: textClasses,
      appearance: "subtle",
      "data-test": "DesignSystem-EmptyState--Text"
    }, description), children && children);
  }
  const templateMaxWidth = maxWidth ? maxWidth : templateWidth[templateSize];
  const customStyle = {
    maxWidth: templateMaxWidth,
    minWidth: minWidth,
    width: width
  };
  return /*#__PURE__*/React.createElement(EmptyStateContext.Provider, {
    value: {
      size: templateSize,
      maxWidth: templateMaxWidth
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "d-flex justify-content-center align-item-center w-100 h-100"
  }, /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-EmptyState--Wrapper",
    className: emptyStateWrapper,
    style: customStyle
  }, baseProps), children)));
};
EmptyState.displayName = 'EmptyState';
EmptyState.Title = EmptyStateTitle;
EmptyState.Description = EmptyStateDescription;
EmptyState.Image = EmptyStateImage;
EmptyState.Actions = EmptyStateActions;
EmptyState.defaultProps = {
  size: 'standard'
};

const ModalDescription = props => {
  const {
    title,
    description,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$w['Modal-description']]: true
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-ModalDescription"
  }, baseProps, {
    className: classes
  }), title && /*#__PURE__*/React.createElement(Text, {
    weight: "strong",
    "data-test": "DesignSystem-ModalDescription--Title"
  }, title), title && description && /*#__PURE__*/React.createElement("br", null), description && /*#__PURE__*/React.createElement(Text, {
    "data-test": "DesignSystem-ModalDescription--Description"
  }, description));
};
ModalDescription.displayName = 'ModalDescription';

const Pagination = props => {
  const {
    type,
    totalPages,
    onPageChange,
    className,
    pageJumpDebounceDuration
  } = props;
  const baseProps = extractBaseProps(props);
  const [page, setPage] = React.useState(props.page);
  const [init, setInit] = React.useState(false);
  const [debounceCancelCounter, setDebounceCancelCounter] = React.useState(0);
  const debouncePageChange = React.useCallback(debounce$1(pageJumpDebounceDuration, onPageChange), [debounceCancelCounter]);
  React.useEffect(() => {
    setPage(props.page);
  }, [props.page]);
  const wrapperClass = classNames({
    [styles$T['Pagination']]: true,
    [styles$T[`Pagination--${type}`]]: type
  }, className);
  const nextButtonWrapperClass = classNames({
    [styles$T['Pagination-buttonWrapper']]: true,
    [styles$T['Pagination-buttonWrapper--next']]: true
  });
  const prevButtonWrapperClass = classNames({
    [styles$T['Pagination-buttonWrapper']]: true,
    [styles$T['Pagination-buttonWrapper--previous']]: true
  });
  React.useEffect(() => {
    if (init) {
      if (page >= 1 && page <= totalPages) {
        debouncePageChange(page);
      } else {
        /**
         * On removing a page number on UI via backspace, debounce malfunctions if page is not within desired range.
         * Hence, we remove the debounce function via cancel method.
         */
        debouncePageChange.cancel();
        /**
         * Since debouncePageChange is cached via React.useCallback,
         * cancel method above removes the single debounce function instance available.
         * To make a new instance available, we have to update the dependency object.
         */
        setDebounceCancelCounter(prev => prev + 1);
      }
    }
  }, [page]);
  const inputChangeHandler = e => {
    e.preventDefault();
    const val = +e.target.value.trim();
    if (val >= 0 && val <= totalPages) {
      if (!init) setInit(true);
      setPage(val);
    }
  };
  const onKeyPressHandler = e => {
    if (!isNaturalNumber(e.key)) {
      e.preventDefault();
    }
  };
  const onClickHandler = buttonType => {
    setInit(true);
    switch (buttonType) {
      case 'first':
        setPage(1);
        break;
      case 'last':
        setPage(totalPages);
        break;
      case 'prev':
        if (page > 1) setPage(page - 1);
        break;
      case 'next':
        if (page < totalPages) setPage(page + 1);
        break;
    }
  };
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Pagination"
  }, baseProps, {
    className: wrapperClass
  }), /*#__PURE__*/React.createElement("div", {
    className: prevButtonWrapperClass
  }, /*#__PURE__*/React.createElement(Button, {
    onClick: () => onClickHandler('first'),
    disabled: page <= 1,
    appearance: "transparent",
    icon: "first_page",
    className: styles$T['Pagination-button'],
    "data-test": "DesignSystem-Pagination--FirstButton"
  }), /*#__PURE__*/React.createElement(Button, {
    onClick: () => onClickHandler('prev'),
    disabled: page <= 1,
    icon: "navigate_before",
    "data-test": "DesignSystem-Pagination--PrevButton",
    className: `ml-4 mr-3 ${styles$T['Pagination-button']}`
  })), type === 'jump' && /*#__PURE__*/React.createElement("div", {
    className: styles$T['Pagination-pageIndex']
  }, /*#__PURE__*/React.createElement(MetricInput, {
    name: "page",
    className: styles$T['Pagination-MetricInput'],
    onChange: inputChangeHandler,
    value: `${isNaturalNumber(page) ? page : ''}`,
    "data-test": "DesignSystem-Pagination--Input",
    onKeyPress: onKeyPressHandler
  }), /*#__PURE__*/React.createElement(Text, null, ` of ${totalPages} pages`)), /*#__PURE__*/React.createElement("div", {
    className: nextButtonWrapperClass
  }, /*#__PURE__*/React.createElement(Button, {
    onClick: () => onClickHandler('next'),
    disabled: page >= totalPages,
    icon: "navigate_next",
    "data-test": "DesignSystem-Pagination--NextButton",
    className: `ml-3 mr-4 ${styles$T['Pagination-button']}`
  }), /*#__PURE__*/React.createElement(Button, {
    onClick: () => onClickHandler('last'),
    disabled: page >= totalPages,
    appearance: "transparent",
    icon: "last_page",
    className: styles$T['Pagination-button'],
    "data-test": "DesignSystem-Pagination--LastButton"
  })));
};
Pagination.displayName = 'Pagination';
Pagination.defaultProps = {
  type: 'basic',
  page: 1,
  totalPages: 1,
  pageJumpDebounceDuration: 750
};

var css_248z$r = ".editableInput-module-EditableInput-jeeBB-5-0-0-9 {\n  position: relative;\n  display: inline-flex;\n  flex-direction: column;\n  width: 100%;\n}\n\n.editableInput-module-EditableInput-actions-L90fR-5-0-0-9 {\n  position: absolute;\n  display: flex;\n  justify-content: flex-end;\n  margin-top: var(--spacing-10);\n  width: 100%;\n}\n\n.editableInput-module-EditableInput-actions--regular-ShViM-5-0-0-9 {\n  top: var(--spacing-80);\n}\n\n.editableInput-module-EditableInput-actions--tiny-kIRx4-5-0-0-9 {\n  top: var(--spacing-60);\n}\n\n.editableInput-module-EditableInput-default-PLtoY-5-0-0-9 {\n  border: var(--border-width-2-5) solid transparent;\n  box-sizing: border-box;\n  white-space: nowrap;\n  padding-left: var(--spacing-30);\n  padding-right: var(--spacing-30);\n  display: flex;\n  align-items: center;\n}\n\n.editableInput-module-EditableInput-default--regular-M9hwS-5-0-0-9 {\n  min-width: var(--spacing-640);\n  height: var(--spacing-80);\n}\n\n.editableInput-module-EditableInput-default--tiny-PMLyx-5-0-0-9 {\n  min-width: var(--spacing-240);\n  height: var(--spacing-60);\n}\n\n.editableInput-module-EditableInput-Input--tiny-3FTNw-5-0-0-9 {\n  min-width: var(--spacing-240) !important;\n  width: 100%;\n}\n";
var styles$q = {"EditableInput":"editableInput-module-EditableInput-jeeBB-5-0-0-9","EditableInput-actions":"editableInput-module-EditableInput-actions-L90fR-5-0-0-9","EditableInput-actions--regular":"editableInput-module-EditableInput-actions--regular-ShViM-5-0-0-9","EditableInput-actions--tiny":"editableInput-module-EditableInput-actions--tiny-kIRx4-5-0-0-9","EditableInput-default":"editableInput-module-EditableInput-default-PLtoY-5-0-0-9","EditableInput-default--regular":"editableInput-module-EditableInput-default--regular-M9hwS-5-0-0-9","EditableInput-default--tiny":"editableInput-module-EditableInput-default--tiny-PMLyx-5-0-0-9","EditableInput-Input--tiny":"editableInput-module-EditableInput-Input--tiny-3FTNw-5-0-0-9"};
styleInject(css_248z$r);

const EditableInput = props => {
  const {
    error,
    size,
    errorMessage,
    placeholder,
    inputOptions,
    disableSaveAction,
    onChange,
    className
  } = props;
  const {
    onChange: onInputChange,
    ...rest
  } = inputOptions;
  const [inputValue, setInputValue] = React.useState(props.value);
  const [value, setValue] = React.useState(props.value);
  const [editing, setEditing] = React.useState(false);
  const [showComponent, setShowComponent] = React.useState(false);
  const inputRef = /*#__PURE__*/React.createRef();
  const baseProps = extractBaseProps(props);
  const isControlled = props.value !== undefined;
  React.useEffect(() => {
    if (isControlled) setValue(props.value);
  }, [props.value]);
  const EditableInputClass = classNames({
    [styles$q['EditableInput']]: true
  }, className);
  const EditableDefaultClass = classNames({
    [styles$q['EditableInput-default']]: true,
    [styles$q[`EditableInput-default--${size}`]]: size
  });
  const InputClass = classNames({
    [styles$q['EditableInput-Input--tiny']]: size === 'tiny'
  });
  const ActionClass = classNames({
    [styles$q['EditableInput-actions']]: true,
    [styles$q[`EditableInput-actions--${size}`]]: size
  });
  const setDefaultComponent = updatedValue => {
    setInputValue(updatedValue);
    setEditing(false);
    setShowComponent(false);
  };
  const onSaveChanges = () => {
    if (!isControlled) setValue(inputValue);
    if (onChange) onChange(inputValue || '');
    setDefaultComponent(inputValue);
  };
  const onInputChangeHandler = e => {
    setInputValue(e.target.value);
    if (onInputChange) onInputChange(e);
  };
  const onChangeHandler = eventType => {
    switch (eventType) {
      case 'edit':
        {
          inputRef.current?.focus();
          setEditing(true);
          setShowComponent(true);
          break;
        }
      case 'hover':
        {
          setShowComponent(true);
          break;
        }
      case 'default':
        {
          setShowComponent(false);
        }
    }
  };
  const inputComponent = /*#__PURE__*/React.createElement(Input, _extends$2({
    defaultValue: inputValue,
    placeholder: placeholder,
    className: InputClass
    // TODO(a11y)
    // eslint-disable-next-line jsx-a11y/no-autofocus
    ,
    autoFocus: editing,
    size: size,
    onChange: onInputChangeHandler,
    error: error && editing,
    ref: inputRef,
    "data-test": "DesignSystem-EditableInput--Input"
  }, rest));
  const onKeyDown = event => {
    if (document.activeElement === inputRef.current) {
      switch (event.key) {
        case 'Enter':
          onSaveChanges();
          break;
        case 'Escape':
          setDefaultComponent(value);
          break;
      }
    }
  };
  const renderChildren = () => {
    if (showComponent) {
      return error && errorMessage && editing ? /*#__PURE__*/React.createElement(Popover, {
        trigger: inputComponent,
        position: "right",
        className: "px-6 py-6 d-flex align-items-center",
        on: "hover"
      }, /*#__PURE__*/React.createElement(InlineMessage, {
        appearance: "alert",
        description: errorMessage
      })) : inputComponent;
    }
    return /*#__PURE__*/React.createElement("div", {
      className: EditableDefaultClass,
      "data-test": "DesignSystem-EditableInput--Default"
    }, value || placeholder);
  };
  return (
    /*#__PURE__*/
    // TODO(a11y)
    // eslint-disable-next-line jsx-a11y/no-static-element-interactions
    React.createElement("div", _extends$2({
      "data-test": "DesignSystem-EditableInput"
    }, baseProps, {
      className: EditableInputClass,
      onKeyDown: onKeyDown
    }), /*#__PURE__*/React.createElement(Editable, {
      onChange: onChangeHandler,
      editing: editing
    }, renderChildren()), editing && /*#__PURE__*/React.createElement("div", {
      className: ActionClass,
      "data-test": "DesignSystem-EditableInput--Actions"
    }, /*#__PURE__*/React.createElement(Button, {
      icon: "clear",
      className: "mr-3",
      largeIcon: true,
      size: "tiny",
      onClick: () => {
        setDefaultComponent(value);
      },
      "data-test": "DesignSystem-EditableInput--Discard"
    }), /*#__PURE__*/React.createElement(Button, {
      icon: "check",
      appearance: "primary",
      largeIcon: true,
      size: "tiny",
      disabled: disableSaveAction,
      onClick: onSaveChanges,
      "data-test": "DesignSystem-EditableInput--Save"
    })))
  );
};
EditableInput.defaultProps = {
  size: 'regular',
  placeholder: '',
  inputOptions: {}
};

var css_248z$q = ".editableChipInput-module-EditableChipInput-fDBaL-5-0-0-9 {\n  position: relative;\n  width: 100%;\n}\n.editableChipInput-module-EditableChipInput-default-ANzd8-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  padding-left: var(--spacing-30);\n  border-left: var(--border-width-2-5) solid transparent;\n  min-height: var(--spacing-80);\n  flex-wrap: wrap;\n}\n\n.editableChipInput-module-EditableChipInput-defaultWithChips-L8I99-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  padding-left: var(--spacing-20);\n  border: var(--border-width-2-5) solid transparent;\n  padding-top: var(--spacing-2-5);\n  padding-bottom: var(--spacing-2-5);\n  max-width: calc(100% - 28px);\n  flex-wrap: wrap;\n}\n\n.editableChipInput-module-EditableChipInput-defaultWithChips-L8I99-5-0-0-9:hover,\n.editableChipInput-module-EditableChipInput-default-ANzd8-5-0-0-9:hover {\n  background-color: var(--secondary-lightest);\n}\n\n.editableChipInput-module-EditableChipInput-chipInput-5LAer-5-0-0-9 {\n  padding-left: var(--spacing-20);\n}\n\n.editableChipInput-module-EditableChipInput-actions-S7NrY-5-0-0-9 {\n  position: absolute;\n  display: flex;\n  justify-content: flex-end;\n  margin-top: var(--spacing-10);\n  width: 100%;\n}\n";
var styles$p = {"EditableChipInput":"editableChipInput-module-EditableChipInput-fDBaL-5-0-0-9","EditableChipInput-default":"editableChipInput-module-EditableChipInput-default-ANzd8-5-0-0-9","EditableChipInput-defaultWithChips":"editableChipInput-module-EditableChipInput-defaultWithChips-L8I99-5-0-0-9","EditableChipInput-chipInput":"editableChipInput-module-EditableChipInput-chipInput-5LAer-5-0-0-9","EditableChipInput-actions":"editableChipInput-module-EditableChipInput-actions-S7NrY-5-0-0-9"};
styleInject(css_248z$q);

const EditableChipInput = props => {
  const {
    placeholder,
    onChange,
    className,
    disableSaveAction,
    chipInputOptions
  } = props;
  const {
    onChange: onChipInputChange,
    chipOptions = {},
    ...rest
  } = chipInputOptions;
  const {
    onClick,
    ...chipObject
  } = chipOptions;
  const [inputValue, setInputValue] = React.useState(props.value);
  const [value, setValue] = React.useState(props.value);
  const [showComponent, setShowComponent] = React.useState(false);
  const baseProps = extractBaseProps(props);
  const isWithChips = inputValue && inputValue.length;
  const isControlled = props.value !== undefined;
  React.useEffect(() => {
    if (isControlled) {
      setInputValue(props.value);
      setValue(props.value);
    }
  }, [props.value]);
  const classes = classNames({
    [styles$p['EditableChipInput']]: true
  }, className);
  const actionClass = classNames({
    [styles$p['EditableChipInput-actions']]: true
  });
  const defaultClasses = classNames({
    [styles$p['EditableChipInput-default']]: !isWithChips,
    [styles$p['EditableChipInput-defaultWithChips']]: isWithChips
  });
  const inputClass = classNames({
    [styles$p['EditableChipInput-chipInput']]: true
  });
  const onChipInputChangeHandler = val => {
    setInputValue(val);
    if (onChipInputChange) onChipInputChange(val);
  };
  const setDefaultComponent = updatedValue => {
    setInputValue(updatedValue);
    setShowComponent(false);
  };
  const onSaveChanges = () => {
    if (!isControlled) setValue(inputValue);
    if (onChange && inputValue) onChange(inputValue);
    setDefaultComponent(inputValue);
  };
  const onChangeHandler = eventType => {
    switch (eventType) {
      case 'edit':
        {
          setShowComponent(true);
          break;
        }
      case 'hover':
        {
          break;
        }
      case 'default':
        {
          setShowComponent(false);
          break;
        }
    }
  };
  const onChipDelete = index => {
    if (value) {
      const updatedValue = [...value];
      updatedValue.splice(index, 1);
      if (!isControlled) {
        setInputValue(updatedValue);
        setValue(updatedValue);
      }
      if (onChange) onChange(updatedValue);
    }
  };
  const renderDefaultState = () => {
    if (inputValue && inputValue.length) {
      return inputValue.map((val, index) => {
        return /*#__PURE__*/React.createElement(Chip, _extends$2({
          "data-test": "DesignSystem-EditableChipInput--Chip",
          key: index,
          name: val,
          label: val,
          className: "my-2 mx-2"
        }, chipObject, {
          onClose: () => onChipDelete(index),
          onClick: () => onClick && onClick(val, index)
        }));
      });
    }
    return /*#__PURE__*/React.createElement(Text, {
      className: "pt-1"
    }, placeholder);
  };
  const renderChildren = () => {
    if (showComponent) {
      return /*#__PURE__*/React.createElement("div", {
        "data-test": "DesignSystem-EditableChipInput--wrapper"
      }, /*#__PURE__*/React.createElement(ChipInput, _extends$2({
        "data-test": "DesignSystem-EditableChipInput--ChipInput",
        placeholder: placeholder,
        onChange: onChipInputChangeHandler,
        value: inputValue,
        chipOptions: chipOptions
      }, rest, {
        className: inputClass
      })));
    }
    return /*#__PURE__*/React.createElement("div", {
      className: defaultClasses,
      "data-test": "DesignSystem-EditableChipInput--Default"
    }, renderDefaultState());
  };
  return /*#__PURE__*/React.createElement("div", _extends$2({
    className: classes,
    "data-test": "DesignSystem-EditableChipInput"
  }, baseProps), /*#__PURE__*/React.createElement(Editable, {
    onChange: onChangeHandler,
    editing: showComponent
  }, renderChildren()), showComponent && /*#__PURE__*/React.createElement("div", {
    className: actionClass,
    "data-test": "DesignSystem-EditableChipInput--Actions"
  }, /*#__PURE__*/React.createElement(Button, {
    "data-test": "DesignSystem-EditableChipInput--DiscardButton",
    icon: "clear",
    className: "mr-3",
    size: "tiny",
    onClick: () => {
      setDefaultComponent(value);
    }
  }), /*#__PURE__*/React.createElement(Button, {
    "data-test": "DesignSystem-EditableChipInput--SaveButton",
    icon: "check",
    appearance: "primary",
    size: "tiny",
    disabled: disableSaveAction,
    onClick: onSaveChanges
  })));
};
EditableChipInput.defaultProps = {
  placeholder: '',
  chipInputOptions: {}
};

var css_248z$p = ".progressRing-module-Ring-6kz7n-5-0-0-9 {\n  transform: rotate(-90deg);\n}\n\n.progressRing-module-Ring--small-h-W58-5-0-0-9 {\n  height: var(--spacing-40);\n  width: var(--spacing-40);\n}\n\n.progressRing-module-Ring--regular-PU85S-5-0-0-9 {\n  height: var(--spacing-80);\n  width: var(--spacing-80);\n}\n\n.progressRing-module-Ring--large-2xhS6-5-0-0-9 {\n  height: var(--spacing-120);\n  width: var(--spacing-120);\n}\n\n.progressRing-module-Ring-6kz7n-5-0-0-9 Circle {\n  fill: none;\n}\n\n.progressRing-module-Ring-background-Pxm3y-5-0-0-9 {\n  stroke: var(--secondary-lightest);\n}\n\n.progressRing-module-Ring-indicator-OwMxU-5-0-0-9 {\n  stroke: var(--primary);\n  transition: var(--duration--slow-01) var(--standard-expressive-curve);\n}\n";
var styles$o = {"Ring":"progressRing-module-Ring-6kz7n-5-0-0-9","Ring--small":"progressRing-module-Ring--small-h-W58-5-0-0-9","Ring--regular":"progressRing-module-Ring--regular-PU85S-5-0-0-9","Ring--large":"progressRing-module-Ring--large-2xhS6-5-0-0-9","Ring-background":"progressRing-module-Ring-background-Pxm3y-5-0-0-9","Ring-indicator":"progressRing-module-Ring-indicator-OwMxU-5-0-0-9"};
styleInject(css_248z$p);

const ProgressRing = props => {
  const {
    size,
    max,
    value,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const radius = 20;
  const circumference = 2 * Math.PI * radius;
  const ProgressRingClass = classNames({
    [styles$o.Ring]: true,
    [styles$o[`Ring--${size}`]]: size
  }, className);
  const svgProps = {
    viewBox: '0 0 50 50'
  };
  const updatedValue = value > 0 ? Math.min(value, max) * 100 / max : 0;
  const circleProps = {
    cx: 25,
    cy: 25,
    r: radius,
    fill: 'none',
    strokeWidth: '8',
    strokeDasharray: `${circumference} ${circumference}`
  };
  return /*#__PURE__*/React.createElement("svg", _extends$2({
    "data-test": "DesignSystem-ProgressRing"
  }, baseProps, {
    className: ProgressRingClass
  }, svgProps), /*#__PURE__*/React.createElement("circle", _extends$2({
    className: styles$o['Ring-background']
  }, circleProps)), /*#__PURE__*/React.createElement("circle", _extends$2({
    className: styles$o['Ring-indicator'],
    strokeDashoffset: circumference - updatedValue / 100 * circumference
  }, circleProps, {
    "data-test": "DesignSystem-ProgressRing--Circle"
  })));
};
ProgressRing.displayName = 'ProgressRing';
ProgressRing.defaultProps = {
  size: 'regular',
  max: 100
};

var css_248z$o = ".stepper-module-Stepper-2fHQy-5-0-0-9 {\n  display: flex;\n}\n\n.stepper-module-Step-U1Ae--5-0-0-9 {\n  display: flex;\n  align-items: center;\n  padding-left: var(--spacing-30);\n  padding-right: var(--spacing-30);\n  margin-left: var(--spacing-2-5);\n  margin-right: var(--spacing-2-5);\n  border-radius: var(--border-radius-40);\n  cursor: pointer;\n}\n\n.stepper-module-Step-U1Ae--5-0-0-9:hover {\n  background-color: var(--secondary);\n}\n\n.stepper-module-Step-U1Ae--5-0-0-9:active {\n  background-color: var(--secondary-dark);\n}\n\n.stepper-module-Step-U1Ae--5-0-0-9:focus,\n.stepper-module-Step-U1Ae--5-0-0-9:focus-visible {\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n  outline: none;\n}\n\n/* Completed State */\n\n.stepper-module-Step--completed-W1Ltb-5-0-0-9 {\n  color: var(--primary-dark);\n}\n\n.stepper-module-Step--completed-W1Ltb-5-0-0-9:hover {\n  background-color: var(--secondary);\n}\n\n.stepper-module-Step--completed-W1Ltb-5-0-0-9:active {\n  background-color: var(--secondary-dark);\n}\n\n.stepper-module-Step--completed-W1Ltb-5-0-0-9:focus,\n.stepper-module-Step--completed-W1Ltb-5-0-0-9:focus-visible {\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n  outline: none;\n}\n\n/* Active State */\n\n.stepper-module-Step--active-OpxVe-5-0-0-9 {\n  background-color: var(--primary-lightest);\n  color: var(--primary-dark);\n  transition-delay: var(--duration--fast-02);\n}\n\n.stepper-module-Step--active-OpxVe-5-0-0-9:hover {\n  background-color: var(--primary-lighter);\n}\n\n.stepper-module-Step--active-OpxVe-5-0-0-9:focus,\n.stepper-module-Step--active-OpxVe-5-0-0-9:focus-visible {\n  background-color: var(--primary-lightest);\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n  outline: none;\n}\n\n.stepper-module-Step--active-OpxVe-5-0-0-9:active {\n  background-color: var(--primary-lighter);\n  color: var(--primary-darker);\n}\n\n.stepper-module-Step--active-OpxVe-5-0-0-9:active .stepper-module-Stepper-text-1S78v-5-0-0-9 {\n  color: var(--primary-darker);\n}\n\n/* Disabled State */\n\n.stepper-module-Step--disabled-2l-AC-5-0-0-9 {\n  cursor: not-allowed;\n  color: var(--inverse-lightest);\n  pointer-events: none;\n}\n\n.stepper-module-Stepper-animate-Tgb9L-5-0-0-9 {\n  transition-delay: var(--duration--fast-02);\n  transition: var(--duration--fast-02) var(--standard-productive-curve);\n}\n";
var styles$n = {"Stepper":"stepper-module-Stepper-2fHQy-5-0-0-9","Step":"stepper-module-Step-U1Ae--5-0-0-9","Step--completed":"stepper-module-Step--completed-W1Ltb-5-0-0-9","Step--active":"stepper-module-Step--active-OpxVe-5-0-0-9","Stepper-text":"stepper-module-Stepper-text-1S78v-5-0-0-9","Step--disabled":"stepper-module-Step--disabled-2l-AC-5-0-0-9","Stepper-animate":"stepper-module-Stepper-animate-Tgb9L-5-0-0-9"};
styleInject(css_248z$o);

const Step$1 = props => {
  const {
    label,
    value,
    disabled,
    active,
    completed,
    onChange
  } = props;
  const StepClass = classNames({
    [styles$n['Step']]: true,
    [styles$n['Stepper-animate']]: true,
    [styles$n['Step--active']]: active,
    [styles$n['Step--disabled']]: disabled,
    [styles$n['Step--completed']]: completed
  });
  const IconClass = classNames({
    'mr-3 my-4': true,
    [styles$n['Stepper-animate']]: true
  });
  const TextClass = classNames({
    [styles$n['Stepper-animate']]: true,
    [styles$n['Stepper-text']]: true
  });
  const onClickHandle = () => {
    if (disabled) return;
    if (onChange) onChange(label, value);
  };
  const onKeyDownHandler = event => {
    if (event.key === 'Enter') {
      onClickHandle();
    }
  };
  const textColor = active ? 'primary-dark' : disabled ? 'inverse-lightest' : 'inverse';
  return (
    /*#__PURE__*/
    // TODO(a11y)
    // eslint-disable-next-line
    React.createElement("div", {
      "data-test": "DesignSystem-Step",
      className: StepClass,
      onKeyDown: e => onKeyDownHandler(e),
      onClick: onClickHandle,
      tabIndex: disabled ? -1 : 0
    }, /*#__PURE__*/React.createElement(Icon, {
      "data-test": "DesignSystem-Step--Icon",
      name: completed ? 'check_circle' : 'radio_button_unchecked',
      className: IconClass
    }), label && /*#__PURE__*/React.createElement(Text, {
      weight: "medium",
      color: textColor,
      className: TextClass
    }, label))
  );
};
Step$1.displayName = 'Step';

const Stepper = props => {
  const {
    steps,
    active,
    completed,
    onChange,
    className,
    skipIndexes
  } = props;
  const baseProps = extractBaseProps(props);
  const onChangeHandler = (index, stepLabel, stepValue) => {
    if (onChange) onChange(index, completed, stepLabel, stepValue);
  };
  const StepperClass = classNames({
    [styles$n['Stepper']]: true
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Stepper"
  }, baseProps, {
    className: StepperClass
  }), steps.map((step, index) => {
    const {
      label,
      value
    } = step;
    const isSkipped = skipIndexes.includes(index);
    const activeStep = active === index;
    const completedStep = !isSkipped && completed >= index;
    const disabled = !activeStep && !isSkipped && completed + 1 < index;
    return /*#__PURE__*/React.createElement(Step$1, {
      key: index,
      label: label,
      value: value,
      active: activeStep,
      completed: completedStep,
      disabled: disabled,
      onChange: (steplabel, stepvalue) => onChangeHandler(index, steplabel, stepvalue)
    });
  }));
};
Stepper.displayName = 'Stepper';
Stepper.defaultProps = {
  completed: -1,
  active: 0,
  skipIndexes: []
};

var css_248z$n = ".dateRangePicker-module-DateRangePicker-XQroW-5-0-0-9 {\n  display: flex;\n}\n\n.dateRangePicker-module-DateRangePicker--left-h3kfr-5-0-0-9 {\n  flex-direction: row;\n}\n\n.dateRangePicker-module-DateRangePicker--right-0yzI--5-0-0-9 {\n  flex-direction: row-reverse;\n}\n\n.dateRangePicker-module-DateRangePicker-input-OZjbS-5-0-0-9 {\n  box-sizing: border-box;\n}\n\n.dateRangePicker-module-DateRangePicker-input--startDate-bwoAB-5-0-0-9 {\n  padding-right: var(--spacing-10);\n}\n\n.dateRangePicker-module-DateRangePicker-input--endDate-kxZGI-5-0-0-9 {\n  padding-left: var(--spacing-10);\n}\n\n@media (max-width: 576px) {\n  .dateRangePicker-module-DateRangePicker-input-OZjbS-5-0-0-9 {\n    padding: 0;\n  }\n\n  .dateRangePicker-module-DateRangePicker-input--endDate-kxZGI-5-0-0-9 {\n    padding-top: var(--spacing-20);\n  }\n}\n";
var styles$m = {"DateRangePicker":"dateRangePicker-module-DateRangePicker-XQroW-5-0-0-9","DateRangePicker--left":"dateRangePicker-module-DateRangePicker--left-h3kfr-5-0-0-9","DateRangePicker--right":"dateRangePicker-module-DateRangePicker--right-0yzI--5-0-0-9","DateRangePicker-input":"dateRangePicker-module-DateRangePicker-input-OZjbS-5-0-0-9","DateRangePicker-input--startDate":"dateRangePicker-module-DateRangePicker-input--startDate-bwoAB-5-0-0-9","DateRangePicker-input--endDate":"dateRangePicker-module-DateRangePicker-input--endDate-kxZGI-5-0-0-9"};
styleInject(css_248z$n);

const Trigger = props => {
  const {
    inputFormat,
    startInputOptions,
    endInputOptions,
    validators,
    state,
    setState
  } = props;
  const {
    init,
    startDate,
    endDate,
    startError,
    endError
  } = state;
  const updateNav = type => {
    if (type === 'start') {
      const {
        year,
        month
      } = getDateInfo(startDate);
      setState({
        yearNav: year,
        monthNav: month
      });
    }
    if (type === 'end') {
      const {
        year,
        month
      } = getDateInfo(endDate);
      setState({
        yearNav: year,
        monthNav: month
      });
    }
  };
  const onPasteHandler = (_e, val, type) => {
    setState({
      open: true
    });
    if (type === 'start') {
      const placeholderChar = startInputOptions.placeholderChar || '_';
      if (val && !val.includes(placeholderChar)) {
        const d = translateToDate(inputFormat, val, validators);
        if (d) {
          setState({
            startDate: d
          });
          if (endDate) {
            const {
              year: eYear,
              month: eMonth,
              date: eDate
            } = getDateInfo(endDate);
            if (compareDate(startDate, 'more', eYear, eMonth, eDate)) {
              setState({
                endDate: undefined
              });
            }
          }
          if (startInputOptions.onPaste) startInputOptions.onPaste(_e, val);
        }
      }
    }
    if (type === 'end') {
      const placeholderChar = endInputOptions.placeholderChar ? endInputOptions.placeholderChar : '_';
      if (val && !val.includes(placeholderChar)) {
        const d = translateToDate(inputFormat, val, validators);
        if (d) {
          setState({
            endDate: d
          });
          if (endInputOptions.onPaste) endInputOptions.onPaste(_e, val);
        }
      }
    }
  };
  const onChangeHandler = (_e, val, type) => {
    setState({
      open: true
    });
    if (type === 'start') {
      const placeholderChar = startInputOptions.placeholderChar || '_';
      if (val && !val.includes(placeholderChar)) {
        const d = translateToDate(inputFormat, val, validators);
        if (d && !isNaN(d.getTime())) {
          setState({
            startDate: d
          });
          if (endDate) {
            const {
              year: eYear,
              month: eMonth,
              date: eDate
            } = getDateInfo(endDate);
            if (compareDate(startDate, 'more', eYear, eMonth, eDate)) {
              setState({
                endDate: undefined
              });
            }
          }
        }
      }
    }
    if (type === 'end') {
      const placeholderChar = endInputOptions.placeholderChar ? endInputOptions.placeholderChar : '_';
      if (val && !val.includes(placeholderChar)) {
        const d = translateToDate(inputFormat, val, validators);
        if (d && !isNaN(d.getTime())) setState({
          endDate: d
        });
      }
    }
  };
  const onBlurHandler = (_e, val, type) => {
    setState({
      init: true
    });
    const hasNumber = /\d/;
    if (type === 'start') {
      const {
        placeholderChar = '_'
      } = startInputOptions;
      if (val && hasNumber.test(val) && val.includes(placeholderChar)) {
        setState({
          startError: true
        });
      } else if (val && !hasNumber.test(val) || !val) {
        setState({
          startError: false
        });
      }
      if (!val || val.includes(placeholderChar)) setState({
        startDate: undefined
      });
    }
    if (type === 'end') {
      const {
        placeholderChar = '_'
      } = endInputOptions;
      if (val && hasNumber.test(val) && val.includes(placeholderChar)) {
        setState({
          endError: true
        });
      } else if (val && !hasNumber.test(val) || !val) {
        setState({
          endError: false
        });
      }
      if (!val || val.includes(placeholderChar)) setState({
        endDate: undefined
      });
    }
  };
  const onClearHandler = type => {
    setState({
      init: true
    });
    if (type === 'start') {
      setState({
        startDate: undefined
      });
      updateNav('end');
    }
    if (type === 'end') {
      setState({
        endDate: undefined
      });
      updateNav('start');
    }
  };
  const onClickHandler = type => {
    const {
      open
    } = state;
    if (!open) {
      updateNav(type);
    }
  };
  const mask = date[inputFormat];
  const startPlaceholderChar = startInputOptions.placeholderChar || '_';
  const endPlaceholderChar = endInputOptions.placeholderChar || '_';
  const showStartError = startInputOptions.error || startInputOptions.required && startError && init;
  const showEndError = endInputOptions.error || endInputOptions.required && endError && init;
  const startErrorMessage = startInputOptions.caption === undefined ? 'Invalid value' : startInputOptions.caption;
  const endErrorMessage = endInputOptions.caption === undefined ? 'Invalid value' : endInputOptions.caption;
  const {
    label: startLabel
  } = startInputOptions;
  const {
    label: endLabel
  } = endInputOptions;
  const inputValidator = val => {
    return isValid(validators, val, inputFormat);
  };
  const StartInputClassName = classNames({
    [styles$m['DateRangePicker-input']]: true,
    [styles$m['DateRangePicker-input--startDate']]: true
  });
  const EndInputClassName = classNames({
    [styles$m['DateRangePicker-input']]: true,
    [styles$m['DateRangePicker-input--endDate']]: true
  });
  return /*#__PURE__*/React.createElement(Row, {
    "data-test": "DesignSystem-DateRangePicker-InputTrigger"
  }, /*#__PURE__*/React.createElement(Column, {
    size: '6',
    sizeXS: '12',
    className: StartInputClassName
  }, startLabel && /*#__PURE__*/React.createElement(Label, {
    required: startInputOptions.required,
    withInput: true
  }, startLabel), /*#__PURE__*/React.createElement(X, _extends$2({
    icon: "events",
    placeholder: inputFormat
  }, startInputOptions, {
    mask: mask,
    value: startDate ? translateToString(inputFormat, startDate) : init ? X.utils.getDefaultValue(mask, startPlaceholderChar) : '',
    onChange: (e, val) => {
      onChangeHandler(e, val || '', 'start');
    },
    onPaste: (e, val) => {
      onPasteHandler(e, val || '', 'start');
    },
    onBlur: (e, val) => {
      onBlurHandler(e, val || '', 'start');
    },
    onClear: () => onClearHandler('start'),
    onClick: () => onClickHandler('start'),
    error: showStartError,
    caption: showStartError ? startErrorMessage : '',
    validators: [inputValidator],
    clearOnEmptyBlur: true
  }))), /*#__PURE__*/React.createElement(Column, {
    size: '6',
    sizeXS: '12',
    className: EndInputClassName
  }, endLabel && /*#__PURE__*/React.createElement(Label, {
    required: endInputOptions.required,
    withInput: true
  }, endLabel), /*#__PURE__*/React.createElement(X, _extends$2({
    icon: "events",
    placeholder: inputFormat
  }, endInputOptions, {
    mask: mask,
    value: endDate ? translateToString(inputFormat, endDate) : init ? X.utils.getDefaultValue(mask, endPlaceholderChar) : '',
    onChange: (e, val) => {
      onChangeHandler(e, val || '', 'end');
    },
    onPaste: (e, val) => {
      onPasteHandler(e, val || '', 'end');
    },
    onBlur: (e, val) => {
      onBlurHandler(e, val || '', 'end');
    },
    onClear: () => onClearHandler('end'),
    onClick: () => onClickHandler('end'),
    error: showEndError,
    caption: showEndError ? endErrorMessage : '',
    validators: [inputValidator],
    clearOnEmptyBlur: true
  }))));
};

const SingleInputTrigger = props => {
  const {
    inputFormat,
    inputOptions,
    validators,
    state,
    setState
  } = props;
  const {
    init,
    startDate,
    endDate,
    startValue,
    endValue,
    startError,
    endError
  } = state;
  const mask = rangeDate[inputFormat];
  const showError = inputOptions.error || inputOptions.required && (startError || endError) && init;
  const errorMessage = inputOptions.caption === undefined ? 'Invalid value' : inputOptions.caption;
  const {
    label
  } = inputOptions;
  const {
    placeholderChar = '_'
  } = inputOptions;
  const defaultValue = X.utils.getDefaultValue(mask, placeholderChar).split(' - ');
  const sValue = startValue || defaultValue[0];
  const eValue = endValue || defaultValue[1];
  const inputValidator = val => {
    const [startVal, endVal] = val.split(' - ');
    return isValid(validators, startVal, inputFormat) && isValid(validators, endVal, inputFormat);
  };
  const onPasteHandler = (_e, val) => {
    const {
      onPaste
    } = inputOptions;
    const date = val.split(' - ');
    const startVal = date[0];
    const endVal = date[1];
    const endD = translateToDate(inputFormat, endVal, validators);
    const startD = translateToDate(inputFormat, startVal, validators);
    setState({
      startDate: startD,
      endDate: endD,
      startValue: startVal,
      endValue: endVal
    });
    if (onPaste) onPaste(_e, val);
  };
  const onChangeHandler = (_e, val) => {
    const date = val.split(' - ');
    const startVal = date[0];
    const endVal = date[1];
    if (startValue !== startVal && startVal && !startVal.includes(placeholderChar)) {
      const startD = translateToDate(inputFormat, startVal, validators);
      if (startD) {
        const isEndDateValid = endValue && !endValue.includes(placeholderChar);
        setState({
          startDate: startD,
          endDate: isEndDateValid ? endDate : undefined
        });
        if (endDate) {
          const {
            year: eYear,
            month: eMonth,
            date: eDate
          } = getDateInfo(endDate);
          if (compareDate(startDate, 'more', eYear, eMonth, eDate)) {
            setState({
              endDate: undefined
            });
          }
        }
      }
    }
    if (endValue !== endVal && endVal && !endVal.includes(placeholderChar)) {
      const endD = translateToDate(inputFormat, endVal, validators);
      const isStartDateValid = startValue && !startValue.includes(placeholderChar);
      if (endD) {
        setState({
          endDate: endD,
          startDate: isStartDateValid ? startDate : undefined
        });
      }
    }
    setState({
      startValue: startVal,
      endValue: endVal
    });
  };
  const getErrorState = (currentVal, siblingVal) => {
    const hasNumber = /\d/;
    if (currentVal && siblingVal && !currentVal.includes(placeholderChar) && siblingVal.includes(placeholderChar)) {
      return true;
    } else if (currentVal && hasNumber.test(currentVal) && currentVal.includes(placeholderChar)) {
      return true;
    } else if (currentVal && !hasNumber.test(currentVal) || !currentVal) {
      return false;
    }
    return null;
  };
  const onBlurHandler = (_e, val) => {
    setState({
      init: true
    });
    const date = val.split(' - ');
    const startVal = date[0];
    const endVal = date[1];
    const startErr = getErrorState(startVal, endVal);
    const endErr = getErrorState(endVal, startVal);
    if (startErr !== null && endErr !== null) {
      setState({
        startError: startErr,
        endError: endErr
      });
    }
    if (!startVal || startVal.includes(placeholderChar)) setState({
      startDate: undefined
    });
    if (!endVal || endVal.includes(placeholderChar)) setState({
      endDate: undefined
    });
  };
  const onClearHandler = () => {
    setState({
      init: true,
      startDate: undefined,
      endDate: undefined,
      yearNav: undefined,
      monthNav: undefined
    });
  };
  return /*#__PURE__*/React.createElement(Row, {
    "data-test": "DesignSystem-DateRangePicker-SingleInputTrigger"
  }, /*#__PURE__*/React.createElement(Column, null, label && /*#__PURE__*/React.createElement(Label, {
    required: inputOptions.required,
    withInput: true
  }, label), /*#__PURE__*/React.createElement(X, _extends$2({
    icon: "events",
    placeholder: `${inputFormat} - ${inputFormat}`
  }, inputOptions, {
    mask: mask,
    value: !startDate && !endDate && !init ? undefined : `${sValue} - ${eValue}`,
    onChange: (e, val) => {
      onChangeHandler(e, val || '');
    },
    onBlur: (e, val) => {
      onBlurHandler(e, val || '');
    },
    onPaste: (e, val) => {
      onPasteHandler(e, val || '');
    },
    onClear: onClearHandler,
    error: showError,
    caption: showError ? errorMessage : '',
    validators: [inputValidator],
    clearOnEmptyBlur: true
  }))));
};

const setDate = date => {
  const d = new Date();
  return new Date(d.setDate(date));
};
const getCurrentYear = () => {
  const current = new Date();
  const currentYear = current.getFullYear();
  return currentYear;
};
const getCurrentMonth = () => {
  const current = new Date();
  const currentMonth = current.getMonth();
  return currentMonth;
};
const getCurrentWeek = () => {
  const current = new Date();
  const currentDate = current.getDate();
  const currentDay = current.getDay();
  return {
    startDate: setDate(currentDate - currentDay + 1),
    endDate: setDate(currentDate - currentDay + 7)
  };
};
const getPreviousWeek = () => {
  const current = new Date();
  const currentDate = current.getDate();
  const currentDay = current.getDay();
  return {
    startDate: setDate(currentDate - currentDay - 6),
    endDate: setDate(currentDate - currentDay)
  };
};
const getPreviousMonth = () => {
  const current = new Date();
  const currentYear = current.getFullYear();
  const currentMonth = current.getMonth();
  return {
    endDate: new Date(currentYear, currentMonth, 0),
    startDate: new Date(currentYear - +(currentMonth < 0), (currentMonth + 11) % 12, 1)
  };
};
const getPrevious90Days = () => {
  const current = new Date();
  const currentDate = current.getDate();
  return {
    startDate: setDate(currentDate - 90),
    endDate: setDate(currentDate)
  };
};
const getCustomDates = () => {
  return {
    startDate: '',
    endDate: ''
  };
};

class DateRangePicker extends React.Component {
  constructor(props) {
    super(props);
    _defineProperty$1(this, "monthsInView", void 0);
    _defineProperty$1(this, "getDate", (startDate, endDate) => {
      const {
        inputFormat
      } = this.props;
      const startVal = startDate ? translateToString(inputFormat, startDate) : '';
      const endVal = endDate ? translateToString(inputFormat, endDate) : '';
      return {
        startValue: startVal,
        endValue: endVal
      };
    });
    _defineProperty$1(this, "getErrors", (startDate, endDate) => {
      const isError = date => {
        const {
          disabledBefore,
          disabledAfter
        } = this.props;
        const {
          year: dbYear,
          month: dbMonth,
          date: dbDate
        } = getDateInfo(disabledBefore);
        const {
          year: daYear,
          month: daMonth,
          date: daDate
        } = getDateInfo(disabledAfter);
        return !date ? false : compareDate(date, 'less', dbYear, dbMonth, dbDate) || compareDate(date, 'more', daYear, daMonth, daDate);
      };
      let startError = isError(startDate);
      let endError = isError(endDate);
      const {
        year: eYear,
        month: eMonth,
        date: eDate
      } = getDateInfo(endDate);
      if (compareDate(startDate, 'more', eYear, eMonth, eDate)) {
        startError = true;
        endError = true;
      }
      return {
        startError,
        endError
      };
    });
    _defineProperty$1(this, "getInRangeError", () => {
      const {
        rangeLimit
      } = this.props;
      if (rangeLimit) {
        const {
          startDate,
          endDate
        } = this.state;
        const {
          year: sYear,
          month: sMonth,
          date: sDate
        } = getDateInfo(startDate);
        const {
          year: eYear,
          month: eMonth,
          date: eDate
        } = getDateInfo(endDate);
        let limitDate;
        if (startDate) {
          limitDate = new Date(startDate);
          limitDate.setDate(sDate + rangeLimit);
          return compareDate(limitDate, 'less', eYear, eMonth, eDate + 1);
        }
        if (endDate) {
          limitDate = new Date(endDate);
          limitDate.setDate(eDate - rangeLimit);
          return compareDate(limitDate, 'more', sYear, sMonth, sDate - 1);
        }
      }
      return false;
    });
    _defineProperty$1(this, "onRangeChangeHandler", (sDate, eDate) => {
      this.setState({
        init: true,
        startDate: sDate,
        endDate: eDate,
        startValue: sDate ? translateToString(this.props.inputFormat, sDate) : '',
        endValue: eDate ? translateToString(this.props.inputFormat, eDate) : ''
      });
    });
    _defineProperty$1(this, "onToggleHandler", (o, type) => {
      const {
        singleInput,
        inputOptions,
        startInputOptions,
        endInputOptions
      } = this.props;
      const disabled = singleInput ? inputOptions.disabled : startInputOptions.disabled || endInputOptions.disabled;
      if (disabled) return;
      switch (type) {
        case 'outsideClick':
          this.setState({
            open: o
          });
          break;
        case 'onClick':
          this.setState({
            open: true
          });
          break;
      }
    });
    const {
      inputFormat: _inputFormat,
      validators
    } = props;
    const _startDate = convertToDate(props.startDate, _inputFormat, validators);
    const _endDate = convertToDate(props.endDate, _inputFormat, validators);
    const {
      startValue,
      endValue
    } = this.getDate(_startDate, _endDate);
    const {
      startError: _startError,
      endError: _endError
    } = this.getErrors(_startDate, _endDate);
    this.state = {
      startDate: _startDate,
      endDate: _endDate,
      startValue,
      endValue,
      startError: _startError,
      endError: _endError,
      init: false,
      open: props.open || false,
      yearNav: props.yearNav,
      monthNav: props.monthNav
    };
    this.monthsInView = props.monthsInView || (props.withInput ? 2 : 1);
  }
  componentDidUpdate(prevProps, prevState) {
    if (prevProps.startDate !== this.props.startDate) {
      const {
        inputFormat,
        validators
      } = this.props;
      const d = convertToDate(this.props.startDate, inputFormat, validators);
      const val = translateToString(inputFormat, d);
      this.setState({
        startDate: d,
        startValue: val
      });
    }
    if (prevProps.endDate !== this.props.endDate) {
      const {
        inputFormat,
        validators
      } = this.props;
      const d = convertToDate(this.props.endDate, inputFormat, validators);
      const val = translateToString(inputFormat, d);
      this.setState({
        endDate: d,
        endValue: val
      });
    }
    if (prevProps.open !== this.props.open) {
      this.setState({
        open: this.props.open || false
      });
    }
    if (prevProps.yearNav !== this.props.yearNav) {
      this.setState({
        yearNav: this.props.yearNav
      });
    }
    if (prevProps.monthNav !== this.props.monthNav) {
      this.setState({
        monthNav: this.props.monthNav
      });
    }
    if (prevState.startDate !== this.state.startDate || prevState.endDate !== this.state.endDate) {
      const {
        onRangeChange,
        outputFormat
      } = this.props;
      const {
        startDate,
        endDate
      } = this.state;
      const {
        startError,
        endError
      } = this.getErrors(startDate, endDate);
      this.setState({
        startError,
        endError
      });
      if (onRangeChange) {
        const inRangeError = this.getInRangeError();
        const sValue = translateToString(outputFormat, startDate);
        const eValue = translateToString(outputFormat, endDate);
        if (!inRangeError && !startError && !endError) {
          if (this.props.allowReverseSelection) {
            if (startDate && endDate) {
              onRangeChange(startDate, endDate, sValue, eValue);
            }
          } else {
            onRangeChange(startDate, endDate, sValue, eValue);
          }
        } else if (!this.props.allowReverseSelection) {
          if (!startError) onRangeChange(startDate, undefined, sValue, eValue);else if (!endError) onRangeChange(undefined, endDate, sValue, eValue);else onRangeChange(undefined, undefined, sValue, eValue);
        }
      }
      if (this.state.startDate && this.state.endDate) {
        this.setState({
          open: false
        });
      }
    }
  }
  renderCalendar() {
    const {
      startDate: startDateProp,
      endDate: endDateProp,
      yearNav: yearNavProp,
      monthNav: monthNavProp,
      open,
      inputFormat,
      outputFormat,
      startInputOptions,
      endInputOptions,
      validators,
      withInput,
      position,
      disabledBefore,
      disabledAfter,
      onRangeChange,
      rangeLimit,
      ...rest
    } = this.props;
    const {
      startDate,
      endDate,
      yearNav,
      monthNav
    } = this.state;
    return /*#__PURE__*/React.createElement(Calendar, _extends$2({}, rest, {
      monthsInView: this.monthsInView,
      rangePicker: true,
      startDate: convertToDate(startDate, inputFormat, validators),
      endDate: convertToDate(endDate, inputFormat, validators),
      disabledBefore: convertToDate(disabledBefore, inputFormat, validators),
      disabledAfter: convertToDate(disabledAfter, inputFormat, validators),
      onRangeChange: this.onRangeChangeHandler,
      yearNav: yearNav,
      monthNav: monthNav,
      rangeLimit: rangeLimit
    }));
  }
  render() {
    const {
      withInput,
      startInputOptions,
      endInputOptions,
      inputOptions,
      inputFormat,
      position,
      validators,
      singleInput,
      contentAlign,
      children
    } = this.props;
    const {
      open
    } = this.state;
    const RangePickerClass = classNames({
      [styles$m['DateRangePicker']]: true,
      [styles$m[`DateRangePicker--${contentAlign}`]]: contentAlign
    });
    if (withInput) {
      const trigger = singleInput ? /*#__PURE__*/React.createElement(SingleInputTrigger, {
        inputFormat: inputFormat,
        inputOptions: inputOptions,
        validators: validators,
        state: this.state,
        setState: this.setState.bind(this)
      }) : /*#__PURE__*/React.createElement(Trigger, {
        inputFormat: inputFormat,
        startInputOptions: startInputOptions,
        endInputOptions: endInputOptions,
        validators: validators,
        state: this.state,
        setState: this.setState.bind(this)
      });
      return /*#__PURE__*/React.createElement(Popover, {
        trigger: trigger,
        triggerClass: "w-100",
        className: RangePickerClass,
        position: position,
        appendToBody: true,
        open: open,
        onToggle: this.onToggleHandler
      }, children, this.renderCalendar());
    }
    return this.renderCalendar();
  }
}
_defineProperty$1(DateRangePicker, "utils", {
  getCurrentWeek,
  getPreviousWeek,
  getPreviousMonth,
  getPrevious90Days,
  getCustomDates,
  getCurrentYear,
  getCurrentMonth
});
_defineProperty$1(DateRangePicker, "defaultProps", {
  ...Calendar.defaultProps,
  children: /*#__PURE__*/React.createElement(React.Fragment, null),
  contentAlign: 'left',
  monthsInView: undefined,
  position: 'bottom-start',
  inputFormat: 'mm/dd/yyyy',
  outputFormat: 'mm/dd/yyyy',
  validators: [date$1],
  inputOptions: {
    label: 'Date'
  },
  startInputOptions: {
    label: 'Start Date'
  },
  endInputOptions: {
    label: 'End Date'
  }
});

var css_248z$m = "/* tabs */\n\n.tabs-module-TabsWrapper-WFui--5-0-0-9 {\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n}\n\n.tabs-module-TabsWrapper-header-psflk-5-0-0-9 {\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n}\n\n.tabs-module-TabsWrapper-header--withSeparator-gbJ63-5-0-0-9 {\n  border-bottom: var(--border);\n}\n\n.tabs-module-Tab-7anZt-5-0-0-9 {\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  cursor: pointer;\n  min-width: 40px;\n  margin-bottom: calc(-1 * var(--spacing-2-5));\n  text-align: center;\n}\n\n.tabs-module-Tab--small-t-Ovt-5-0-0-9 {\n  padding: var(--spacing-20) var(--spacing-30) var(--spacing-30);\n}\n\n.tabs-module-Tab--regular-f2Pf2-5-0-0-9 {\n  padding: var(--spacing-30) var(--spacing-30) var(--spacing-40);\n}\n\n.tabs-module-Tab-7anZt-5-0-0-9:last-child {\n  margin-right: 0;\n}\n\n.tabs-module-Tab-7anZt-5-0-0-9::after {\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  content: '';\n  width: calc(100% - 2 * var(--spacing-30));\n  height: var(--spacing-05);\n  background-color: transparent;\n  margin-left: var(--spacing-30);\n  border-top-left-radius: var(--border-radius-2-5);\n  border-top-right-radius: var(--border-radius-2-5);\n}\n\n.tabs-module-Tab-7anZt-5-0-0-9:hover::after {\n  background-color: var(--inverse-lighter);\n}\n\n.tabs-module-Tab-7anZt-5-0-0-9:active::after {\n  background-color: var(--inverse-light);\n}\n\n.tabs-module-Tab--active-H398--5-0-0-9::after {\n  background-color: var(--primary);\n}\n\n.tabs-module-Tab-7anZt-5-0-0-9:focus {\n  outline: none;\n  border-radius: var(--border-radius-10);\n  /* Using box shadow instead of border as border shifts the div down which cuts the Icon & Text of label. */\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n}\n\n.tabs-module-Tab--active-H398--5-0-0-9:hover .tabs-module-Tab-selected-21aei-5-0-0-9 {\n  color: var(--primary-dark);\n}\n\n.tabs-module-Tab-selected-21aei-5-0-0-9:hover::after {\n  background-color: var(--primary-dark);\n}\n\n.tabs-module-Tab-7anZt-5-0-0-9:active:focus {\n  box-shadow: none;\n}\n\n.tabs-module-Tab--disabled-jMmkz-5-0-0-9 {\n  cursor: not-allowed;\n}\n\n.tabs-module-Tab--disabled-jMmkz-5-0-0-9:focus {\n  box-shadow: none;\n}\n\n.tabs-module-Tab--disabled-jMmkz-5-0-0-9:hover::after {\n  background-color: transparent;\n}\n\n.tabs-module-Tab-icon-s-gJG-5-0-0-9 {\n  display: flex;\n  min-width: inherit;\n  justify-content: space-between;\n}\n\n.tabs-module-Tabs-oQ6zt-5-0-0-9 {\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: row;\n}\n\n.tabs-module-Tabs--withSeparator-ENZzj-5-0-0-9 {\n  border-bottom: var(--border);\n}\n\n.tabs-module-Tab-pills-i0on--5-0-0-9 {\n  cursor: pointer;\n  margin-right: var(--spacing-20);\n  overflow: visible;\n}\n\n.tabs-module-Tab-pills--disabled-7RUAZ-5-0-0-9 {\n  opacity: var(--opacity-10);\n  cursor: not-allowed;\n}\n\n.tabs-module-DismissibleTab-icon--right--MDLa-5-0-0-9 {\n  padding: var(--spacing-05);\n  margin-left: var(--spacing-05);\n  outline: none;\n  border-radius: var(--border-radius-full);\n}\n\n.tabs-module-DismissibleTab-icon--default-Jh5TO-5-0-0-9:focus-visible {\n  outline: var(--spacing-05) solid var(--secondary-shadow);\n}\n\n.tabs-module-DismissibleTab-icon--default-Jh5TO-5-0-0-9:hover {\n  background-color: var(--secondary);\n}\n\n.tabs-module-DismissibleTab-icon--default-Jh5TO-5-0-0-9:active {\n  background-color: var(--secondary-dark);\n}\n\n.tabs-module-DismissibleTab-icon--selected-9Fyvu-5-0-0-9:focus-visible {\n  outline: var(--spacing-05) solid var(--primary-shadow);\n}\n\n.tabs-module-DismissibleTab-icon--selected-9Fyvu-5-0-0-9:hover {\n  background-color: var(--primary-lighter);\n}\n\n.tabs-module-DismissibleTab-icon--selected-9Fyvu-5-0-0-9:active {\n  background-color: var(--primary-light);\n}\n\n.tabs-module-Tab--overflow-ZMfp0-5-0-0-9 {\n  display: flex;\n  box-sizing: border-box;\n}\n";
var styles$l = {"TabsWrapper":"tabs-module-TabsWrapper-WFui--5-0-0-9","TabsWrapper-header":"tabs-module-TabsWrapper-header-psflk-5-0-0-9","TabsWrapper-header--withSeparator":"tabs-module-TabsWrapper-header--withSeparator-gbJ63-5-0-0-9","Tab":"tabs-module-Tab-7anZt-5-0-0-9","Tab--small":"tabs-module-Tab--small-t-Ovt-5-0-0-9","Tab--regular":"tabs-module-Tab--regular-f2Pf2-5-0-0-9","Tab--active":"tabs-module-Tab--active-H398--5-0-0-9","Tab-selected":"tabs-module-Tab-selected-21aei-5-0-0-9","Tab--disabled":"tabs-module-Tab--disabled-jMmkz-5-0-0-9","Tab-icon":"tabs-module-Tab-icon-s-gJG-5-0-0-9","Tabs":"tabs-module-Tabs-oQ6zt-5-0-0-9","Tabs--withSeparator":"tabs-module-Tabs--withSeparator-ENZzj-5-0-0-9","Tab-pills":"tabs-module-Tab-pills-i0on--5-0-0-9","Tab-pills--disabled":"tabs-module-Tab-pills--disabled-7RUAZ-5-0-0-9","DismissibleTab-icon--right":"tabs-module-DismissibleTab-icon--right--MDLa-5-0-0-9","DismissibleTab-icon--default":"tabs-module-DismissibleTab-icon--default-Jh5TO-5-0-0-9","DismissibleTab-icon--selected":"tabs-module-DismissibleTab-icon--selected-9Fyvu-5-0-0-9","Tab--overflow":"tabs-module-Tab--overflow-ZMfp0-5-0-0-9"};
styleInject(css_248z$m);

const TabsWrapper = props => {
  const {
    children,
    onTabChange,
    className,
    size
  } = props;
  const baseProps = extractBaseProps(props);
  const tabs = Array.isArray(children) ? children : [children];
  const totalTabs = tabs.length;
  const [active, setActiveTab] = React.useState(props.active && props.active < totalTabs ? props.active : 0);
  React.useEffect(() => {
    setActiveTab(props.active && props.active < totalTabs ? props.active : 0);
  }, [props.active]);
  const wrapperClass = classNames({
    [styles$l['TabsWrapper']]: true
  }, className);
  const headerClass = classNames({
    [styles$l['TabsWrapper-header']]: true,
    [styles$14['TabsWrapper-header']]: true
  });
  const tabClickHandler = tabIndex => {
    setActiveTab(tabIndex);
    if (onTabChange) onTabChange(tabIndex);
  };
  const TabsHeader = tabs.map((child, index) => {
    const {
      label,
      disabled
    } = child.props;
    const tabHeaderClass = classNames({
      [styles$l['Tab']]: true,
      [styles$l['Tab--disabled']]: disabled,
      [styles$l['Tab--active']]: !disabled && active === index,
      [styles$l['Tab--regular']]: size === 'regular',
      [styles$l['Tab--small']]: size === 'small'
    });
    return (
      /*#__PURE__*/
      // TODO(a11y)
      //  eslint-disable-next-line
      React.createElement("div", {
        "data-test": "DesignSystem-Tabs--Header",
        key: index,
        className: tabHeaderClass,
        onClick: () => !disabled && tabClickHandler(index)
      }, label)
    );
  });
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-TabsWrapper"
  }, baseProps, {
    className: wrapperClass
  }), /*#__PURE__*/React.createElement("div", {
    className: headerClass
  }, TabsHeader), /*#__PURE__*/React.createElement("div", {
    className: styles$l['TabsWrapper-content'],
    "data-test": "DesignSystem-Tabs--Content"
  }, tabs[active]));
};
TabsWrapper.displayName = 'TabsWrapper';
TabsWrapper.defaultProps = {
  size: 'regular'
};

const Tab = props => {
  const {
    children
  } = props;
  return /*#__PURE__*/React.createElement(React.Fragment, null, children);
};
Tab.displayName = 'Tab';

const getChildrenArray = children => {
  return Array.isArray(children) ? children : [children];
};
const filterTabs = children => {
  const childrenArray = getChildrenArray(children);
  const tabs = childrenArray.filter(element => typeof element.type === 'function' && element.type.name === Tab.name);
  return tabs;
};
const filterInlineComponent = children => {
  const childrenArray = getChildrenArray(children);
  const inlineComponent = childrenArray.filter(element => !(typeof element.type === 'function' && element.type.name === Tab.name));
  return inlineComponent;
};
const Tabs = props => {
  const {
    children,
    withSeparator,
    onTabChange,
    className,
    headerClassName,
    size,
    maxWidth
  } = props;
  const baseProps = extractBaseProps(props);
  const tabRefs = [];
  const tabs = children ? filterTabs(children) : props.tabs;
  const inlineComponent = children ? filterInlineComponent(children) : /*#__PURE__*/React.createElement(React.Fragment, null);
  const totalTabs = tabs.length;
  const [activeIndex, setActiveTab] = React.useState(props.activeIndex && props.activeIndex < totalTabs ? props.activeIndex : 0);
  React.useEffect(() => {
    if (props.activeIndex !== undefined && props.activeIndex < totalTabs) {
      setActiveTab(props.activeIndex);
    }
  }, [props.activeIndex]);
  const wrapperClass = classNames({
    [styles$l['TabsWrapper']]: true
  }, className);
  const headerClass = classNames({
    [styles$l['TabsWrapper-header']]: true,
    [styles$14['TabsWrapper-header']]: true,
    [styles$l['TabsWrapper-header--withSeparator']]: withSeparator
  }, className, headerClassName);
  const getPillsClass = disabled => classNames({
    [styles$l['Tab-pills']]: true,
    [styles$l['Tab-pills--disabled']]: disabled
  });
  const getActiveTabClass = () => {
    let activeTab;
    let activeTabClass;
    if (tabs && tabs.length && tabs[activeIndex] && 'props' in tabs[activeIndex]) {
      activeTab = tabs[activeIndex];
      activeTabClass = activeTab.props?.className;
    } else {
      activeTab = tabs[activeIndex];
      activeTabClass = activeTab && activeTab.className;
    }
    return activeTabClass;
  };
  const activeTabClass = getActiveTabClass();
  const tabContentClass = classNames({
    [styles$l['TabsWrapper-content']]: true,
    [`${activeTabClass}`]: activeTabClass
  });
  const tabClickHandler = (tabIndex, isKeyboard) => {
    if (props.activeIndex === undefined) {
      setActiveTab(tabIndex);
      if (!isKeyboard) tabRefs[tabIndex]?.blur();
    }
    if (onTabChange) onTabChange(tabIndex);
  };
  const tabKeyDownHandler = (event, tabIndex) => {
    if (event.key === 'Enter') {
      tabClickHandler(tabIndex, true);
    }
    if (event.key === 'ArrowLeft' && tabIndex > 0) {
      const prevElement = tabRefs[tabIndex - 1];
      prevElement?.focus();
    }
    if (event.key === 'ArrowRight' && tabIndex < tabs.length) {
      const nextElement = tabRefs[tabIndex + 1];
      nextElement?.focus();
    }
  };
  const renderInfo = (tab, index) => {
    const {
      count,
      icon,
      disabled,
      iconType
    } = tab;
    if (count !== undefined) {
      return /*#__PURE__*/React.createElement(Pills, {
        "data-test": "DesignSystem-Tabs--Pills",
        className: getPillsClass(disabled),
        appearance: activeIndex === index ? 'primary' : 'secondary'
      }, count);
    }
    const iconClass = classNames({
      [styles$l['Tab-selected']]: !disabled && activeIndex === index
    });
    if (icon) {
      const iconAppearance = activeIndex === index ? 'info' : disabled ? 'disabled' : 'subtle';
      return /*#__PURE__*/React.createElement(Icon, {
        "data-test": "DesignSystem-Tabs--Icon",
        className: `mr-4 ${iconClass}`,
        name: icon,
        type: iconType,
        appearance: iconAppearance
      });
    }
    return null;
  };
  const renderDismissIcon = (tab, index, onDismiss) => {
    const {
      disabled,
      label
    } = tab;
    const iconAppearance = activeIndex === index ? 'info' : disabled ? 'disabled' : 'subtle';
    const dismissIconClass = disabled => classNames({
      [styles$l[`DismissibleTab-icon--right`]]: true,
      [styles$l['DismissibleTab-icon--default']]: !disabled && activeIndex !== index,
      [styles$l[`DismissibleTab-icon--selected`]]: !disabled && activeIndex === index,
      ['cursor-pointer']: !disabled,
      [styles$l['Tab-selected']]: !disabled && activeIndex === index
    });
    const tabInfo = {
      label: label,
      activeIndex: activeIndex,
      currentTabIndex: index
    };
    const onCloseHandler = e => {
      e.stopPropagation();
      if (onDismiss) onDismiss(tabInfo);
    };
    return /*#__PURE__*/React.createElement(Icon, {
      "data-test": "DesignSystem-DismissibleTabs--Icon",
      name: "clear",
      appearance: iconAppearance,
      className: dismissIconClass(disabled),
      onClick: !disabled ? onCloseHandler : undefined,
      tabIndex: disabled ? -1 : 0
    });
  };
  const renderTab = (tab, index) => {
    const elementRef = /*#__PURE__*/React.createRef();
    const {
      label = '',
      disabled,
      isDismissible,
      onDismiss = () => {}
    } = tab;
    if (typeof label !== 'string') {
      return label;
    }
    const textAppearance = activeIndex === index ? 'link' : disabled ? 'disabled' : 'subtle';
    const tabTextClass = classNames({
      ['ellipsis--noWrap']: true,
      [styles$l['Tab-selected']]: !disabled && activeIndex === index
    });
    const tabClass = classNames({
      [styles$l['Tab--regular']]: size === 'regular',
      [styles$l['Tab--small']]: size === 'small',
      [styles$l['Tab--overflow']]: true
    });
    return /*#__PURE__*/React.createElement(Tooltip, {
      showOnTruncation: true,
      tooltip: label,
      elementRef: elementRef,
      triggerClass: "ellipsis--noWrap flex-grow-0"
    }, /*#__PURE__*/React.createElement("span", {
      className: tabClass,
      "data-test": "DesignSystem-Tabs--TextWrapper",
      style: {
        maxWidth
      }
    }, renderInfo(tab, index), /*#__PURE__*/React.createElement(Text, {
      "data-test": "DesignSystem-Tabs--Text",
      appearance: textAppearance,
      className: tabTextClass,
      ref: elementRef
    }, label), isDismissible && renderDismissIcon(tab, index, onDismiss)));
  };
  const renderTabs = tabs.map((tab, index) => {
    const currentTabProp = children && 'props' in tab ? tab.props : tab;
    const {
      disabled,
      label
    } = currentTabProp;
    const tabHeaderClass = classNames({
      [styles$l['Tab']]: true,
      [styles$l['Tab--disabled']]: disabled,
      [styles$l['Tab--active']]: !disabled && activeIndex === index,
      [styles$l['Tab-selected']]: !disabled && activeIndex === index,
      ['align-items-center']: true,
      [styles$l['Tab--regular']]: size === 'regular' && typeof label !== 'string',
      [styles$l['Tab--small']]: size === 'small' && typeof label !== 'string'
    });
    return (
      /*#__PURE__*/
      // TODO(a11y)
      //  eslint-disable-next-line
      React.createElement("div", {
        ref: element => element && !disabled && tabRefs.push(element),
        "data-test": "DesignSystem-Tabs--Tab",
        key: index,
        className: tabHeaderClass,
        onClick: () => !disabled && tabClickHandler(index),
        onKeyDown: event => tabKeyDownHandler(event, index),
        tabIndex: disabled ? -1 : 0
      }, renderTab(currentTabProp, index))
    );
  });
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Tabs"
  }, baseProps, {
    className: wrapperClass
  }), /*#__PURE__*/React.createElement("div", {
    className: headerClass,
    "data-test": "DesignSystem-Tabs--Header"
  }, renderTabs, inlineComponent), children && /*#__PURE__*/React.createElement("div", {
    className: tabContentClass,
    "data-test": "DesignSystem-Tabs--Content"
  }, tabs[activeIndex]));
};
Tabs.displayName = 'Tabs';
Tabs.defaultProps = {
  withSeparator: true,
  tabs: [],
  size: 'regular',
  maxWidth: 'var(--spacing-640)'
};

const accepts = (file, acceptedFiles) => {
  if (file && acceptedFiles) {
    const acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');
    const fileName = file.name || '';
    const mimeType = (file.type || '').toLowerCase();
    const baseMimeType = mimeType.replace(/\/.*$/, '');
    if (!mimeType) {
      return true;
    }
    return acceptedFilesArray.some(type => {
      const validType = type.trim().toLowerCase();
      if (validType.charAt(0) === '.') {
        return fileName.toLowerCase().endsWith(validType);
      }
      if (validType.endsWith('/*')) {
        return baseMimeType === validType.replace(/\/.*$/, '');
      }
      return mimeType === validType;
    });
  }
  return true;
};
const isPropagationStopped = event => {
  if (typeof event.isPropagationStopped === 'function') {
    return event.isPropagationStopped();
  }
  if (typeof event.cancelBubble !== 'undefined') {
    return event.cancelBubble;
  }
  return false;
};
const isEvtWithFiles = event => {
  if (!event.dataTransfer) {
    return !!event.target && !!event.target.files;
  }
  return Array.prototype.some.call(event.dataTransfer.types, type => type === 'Files' || type === 'application/x-moz-file');
};
const onDocumentDragOver = event => {
  event.preventDefault();
};
const composeEventHandlers = (...fns) => {
  return (event, ...args) => fns.some(fn => {
    if (!isPropagationStopped(event) && fn) {
      fn(event, ...args);
    }
    return isPropagationStopped(event);
  });
};
const reducer = (state, action) => {
  switch (action.type) {
    case 'focus':
      return {
        ...state,
        isFocused: true
      };
    case 'blur':
      return {
        ...state,
        isFocused: false
      };
    case 'openDialog':
      return {
        ...state,
        isFileDialogActive: true
      };
    case 'closeDialog':
      return {
        ...state,
        isFileDialogActive: false
      };
    case 'setDraggedFiles':
      /* eslint no-case-declarations: 0 */
      const {
        isDragActive,
        draggedFiles
      } = action;
      return {
        ...state,
        draggedFiles,
        isDragActive
      };
    case 'setFiles':
      return {
        ...state,
        acceptedFiles: action.acceptedFiles,
        fileRejections: action.fileRejections
      };
    case 'reset':
      return {
        ...state,
        isFileDialogActive: false,
        isDragActive: false,
        draggedFiles: [],
        acceptedFiles: [],
        fileRejections: []
      };
    default:
      return state;
  }
};

const fileErrorMessages = {
  FILE_INVALID_TYPE: 'File format not accepted',
  FILE_TOO_LARGE: 'File is too large',
  FILE_TOO_SMALL: 'File is too small',
  TOO_MANY_FILES: 'Multiple files are not accepted'
};
const isDefined = value => {
  return value !== undefined && value !== null;
};
const getInvalidTypeRejectionErr = accept => {
  const updatedAccept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;
  const messageSuffix = Array.isArray(updatedAccept) ? `one of ${updatedAccept.join(', ')}` : updatedAccept;
  return {
    type: 'FILE_INVALID_TYPE',
    message: `File type must be ${messageSuffix}`
  };
};
const getTooLargeRejectionErr = maxSize => {
  return {
    type: 'FILE_TOO_LARGE',
    message: `File is larger than ${maxSize} bytes`
  };
};
const getTooSmallRejectionErr = minSize => {
  return {
    type: 'FILE_TOO_SMALL',
    message: `File is smaller than ${minSize} bytes`
  };
};
const fileAccepted = (file, accept) => {
  const isAcceptable = file.type === 'application/x-moz-file' || accepts(file, accept);
  return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];
};
const fileMatchSize = (file, minSize, maxSize) => {
  if (isDefined(file.size)) {
    if (isDefined(minSize) && isDefined(maxSize)) {
      if (file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];
      if (file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];
    } else if (isDefined(minSize) && file.size < minSize) {
      return [false, getTooSmallRejectionErr(minSize)];
    } else if (isDefined(maxSize) && file.size > maxSize) {
      return [false, getTooLargeRejectionErr(maxSize)];
    }
  }
  return [true, null];
};
const getFileError = options => {
  const {
    files,
    accept,
    minSize,
    maxSize,
    multiple
  } = options;
  if (!multiple && files.length > 1) {
    return 'TOO_MANY_FILES';
  }
  const typeError = files.every(file => {
    const [accepted] = fileAccepted(file, accept);
    return !accepted;
  });
  const sizeError = files.every(file => {
    const [sizeMatch] = fileMatchSize(file, minSize, maxSize);
    return !sizeMatch;
  });
  return typeError ? 'FILE_INVALID_TYPE' : sizeError ? 'FILE_TOO_LARGE' : '';
};
const allFilesAccepted = options => {
  const {
    files,
    accept,
    minSize,
    maxSize,
    multiple
  } = options;
  if (!multiple && files.length > 1) {
    return false;
  }
  return files.every(file => {
    const [accepted] = fileAccepted(file, accept);
    const [sizeMatch] = fileMatchSize(file, minSize, maxSize);
    return accepted && sizeMatch;
  });
};

const COMMON_MIME_TYPES = new Map([
// image
['gif', 'image/gif'], ['ico', 'image/x-icon'], ['jpeg', 'image/jpeg'], ['jpg', 'image/jpeg'], ['png', 'image/png'], ['bmp', 'image/bmp'], ['tif', 'image/tiff'], ['tiff', 'image/tiff'], ['apng', 'image/apng'], ['avif', 'image/avif'], ['jfif', 'image/jpeg'], ['pjpeg', 'image/pjpeg'], ['pjp', 'image/jpeg'], ['svg', 'image/svg+xml'], ['webp', 'image/webp'], ['cur', 'image/x-win-bitmap'], ['MTS', 'model/vnd.mts'],
// Video
['roq', 'video'], ['f4a', 'video'], ['f4b', 'video'], ['drc', 'video'], ['nsv', 'video'], ['avi', 'video/x-msvideo'], ['mkv', 'video/x-matroska'], ['mov', 'video/quicktime'], ['mp4', 'video/mp4'], ['webm', 'video/webm'], ['flv', 'video/x-flv'], ['vob', 'video/x-ms-vob'], ['ogv', 'video/ogg'], ['ogg', 'application/ogg'], ['gifv', 'image/gif'], ['mng', 'video/x-mng'], ['M2TS', 'video/MP2T'], ['TS', 'video/mp2t'], ['qt', 'video/quicktime'], ['wmv', 'video/x-ms-wmv'], ['yuv', 'application/octet-stream'], ['rm', 'application/vnd.rn-realmedia'], ['rmvb', 'application/vnd.rn-realmedia-vbr'], ['viv', 'video/vnd.vivo'], ['asf', 'video/x-ms-asf'], ['amv', 'video/x-amv'], ['m4v', 'video/x-m4v'], ['mpg', 'video/mpeg'], ['mpeg', 'video/mpeg'], ['mpe', 'video/mpeg'], ['mpv', 'video/mpv'], ['m2v', 'video/mpeg'], ['svi', 'video/x-msvideo'], ['3gp', 'video/3gpp'], ['3g2', 'video/3gpp2'], ['mxf', 'application/mxf'], ['flv', 'video/x-flv'], ['f4v', 'video/x-f4v'], ['f4p', 'video/mp4'],
// audio
['aa', 'audio'], ['aax', 'audio'], ['act', 'audio'], ['alac', 'audio'], ['ape', 'audio'], ['awb', 'audio'], ['dss', 'audio'], ['dvf', 'audio'], ['iklax', 'audio'], ['ivs', 'audio'], ['msv', 'audio'], ['nmf', 'audio'], ['mogg', 'audio'], ['raw', 'audio'], ['rf64', 'audio'], ['sln', 'audio'], ['wv', 'audio'], ['8svx', 'audio'], ['3gp', 'audio/3gpp'], ['mp2', 'audio/mpeg'], ['aac', 'audio/x-aac'], ['aiff', 'audio/x-aiff'], ['amr', 'audio/amr'], ['au', 'audio/basic'], ['flac', 'audio/x-flac'], ['gsm', 'audio/gsm'], ['m4a', 'audio/mp4a-latm'], ['m4b', 'audio/mp4a-latm'], ['m4p', 'audio/mp4a-latm'], ['mmf', 'application/vnd.smaf'], ['mp3', 'audio/mpeg'], ['ogg', 'audio/ogg'], ['oga', 'audio/ogg'], ['opus', 'audio/opus'], ['tta', 'audio/x-tta'], ['voc', 'audio/x-voice'], ['wav', 'audio/x-wav'], ['wma', 'audio/x-ms-wma'], ['webm', 'audio/webm'], ['cda ', 'application/x-cdf'], ['ra', 'audio/x-pn-realaudio'], ['vox', 'application/x-authorware-bin'], ['rm', 'application/vnd.rn-realmedia'], ['mpc', 'application/vnd.mophun.certificate'],
// docs
['pdf', 'application/pdf'], ['zip', 'application/zip'], ['doc', 'application/msword'], ['docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'], ['xlss', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'], ['xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'], ['xls', 'application/vnd.ms-excel'], ['odt', 'application/vnd.oasis.opendocument.text'], ['tex', 'application/x-tex'], ['wpd', 'application/wordperfect'], ['ods', 'application/vnd.oasis.opendocument.spreadsheet'], ['csv', 'text/csv'], ['rtf', 'text/rtf'], ['txt', 'text/plain'], ['tsv', 'text/tab-separated-values']]);
const FILES_TO_IGNORE = ['.DS_Store', 'Thumbs.db'];
async function fromEvent(evt) {
  return isDragEvt(evt) && evt.dataTransfer ? getDataTransferFiles(evt.dataTransfer, evt.type) : getInputFiles(evt);
}
function isDragEvt(value) {
  return !!value.dataTransfer;
}
function toFileWithPath(file, path) {
  const f = withMimeType(file);
  if (typeof f.path !== 'string') {
    const {
      webkitRelativePath
    } = file;
    Object.defineProperty(f, 'path', {
      value: typeof path === 'string' ? path : typeof webkitRelativePath === 'string' && webkitRelativePath.length > 0 ? webkitRelativePath : file.name,
      writable: false,
      configurable: false,
      enumerable: true
    });
  }
  return f;
}
function withMimeType(file) {
  const {
    name
  } = file;
  const hasExtension = name && name.lastIndexOf('.') !== -1;
  if (hasExtension && !file.type) {
    const ext = name.split('.').pop().toLowerCase();
    const type = COMMON_MIME_TYPES.get(ext);
    if (type) {
      Object.defineProperty(file, 'type', {
        value: type,
        writable: false,
        configurable: false,
        enumerable: true
      });
    }
  }
  return file;
}
function getInputFiles(evt) {
  const files = isInput(evt.target) ? evt.target.files ? fromList(evt.target.files) : [] : [];
  return files.map(file => toFileWithPath(file));
}
function isInput(value) {
  return value !== null;
}
async function getDataTransferFiles(dt, type) {
  if (dt.items) {
    const items = fromList(dt.items).filter(item => item.kind === 'file');
    if (type !== 'drop') {
      return items;
    }
    const files = await Promise.all(items.map(toFilePromises));
    return noIgnoredFiles(flatten(files));
  }
  return noIgnoredFiles(fromList(dt.files).map(file => toFileWithPath(file)));
}
function noIgnoredFiles(files) {
  return files.filter(file => FILES_TO_IGNORE.indexOf(file.name) === -1);
}
function fromList(items) {
  const files = [];

  // tslint:disable: prefer-for-of
  for (let i = 0; i < items.length; i++) {
    const file = items[i];
    files.push(file);
  }
  return files;
}
function toFilePromises(item) {
  if (typeof item.webkitGetAsEntry !== 'function') {
    return fromDataTransferItem(item);
  }
  const entry = item.webkitGetAsEntry();
  if (entry && entry.isDirectory) {
    return fromDirEntry(entry);
  }
  return fromDataTransferItem(item);
}
function flatten(items) {
  return items.reduce((acc, files) => [...acc, ...(Array.isArray(files) ? flatten(files) : [files])], []);
}
function fromDataTransferItem(item) {
  const file = item.getAsFile();
  if (!file) {
    return Promise.reject(`${item} is not a File`);
  }
  const fwp = toFileWithPath(file);
  return Promise.resolve(fwp);
}
async function fromEntry(entry) {
  return entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry);
}
function fromDirEntry(entry) {
  const reader = entry.createReader();
  return new Promise((resolve, reject) => {
    const entries = [];
    function readEntries() {
      reader.readEntries(async batch => {
        if (!batch.length) {
          // Done reading directory
          try {
            const files = await Promise.all(entries);
            resolve(files);
          } catch (err) {
            reject(err);
          }
        } else {
          const items = Promise.all(batch.map(fromEntry));
          entries.push(items);

          // Continue reading
          readEntries();
        }
      }, err => {
        reject(err);
      });
    }
    readEntries();
  });
}
async function fromFileEntry(entry) {
  return new Promise((resolve, reject) => {
    entry.file(file => {
      const fwp = toFileWithPath(file, entry.fullPath);
      resolve(fwp);
    }, err => {
      reject(err);
    });
  });
}

const initialState = {
  isFocused: false,
  isFileDialogActive: false,
  isDragActive: false,
  isDragAccept: false,
  isDragReject: false,
  draggedFiles: [],
  acceptedFiles: [],
  fileRejections: []
};
const DropzoneBase = props => {
  const {
    accept,
    disabled,
    maxSize,
    minSize,
    multiple,
    onDragEnter,
    onDragLeave,
    onDragOver,
    onDrop,
    onDropAccepted,
    onDropRejected,
    onFileDialogCancel,
    getFilesFromEvent,
    preventDropOnDocument,
    validator
  } = props;
  const rootRef = useRef(null);
  const inputRef = useRef(null);
  const [state, dispatch] = useReducer(reducer, initialState);
  const {
    isFocused,
    isFileDialogActive,
    draggedFiles
  } = state;
  const openFileDialog = useCallback(() => {
    if (inputRef.current) {
      dispatch({
        type: 'openDialog'
      });
      inputRef.current.value = '';
      inputRef.current.click();
    }
  }, [dispatch]);
  const onWindowFocus = () => {
    if (isFileDialogActive) {
      setTimeout(() => {
        if (inputRef.current) {
          const {
            files
          } = inputRef.current;
          if (!files || !files.length) {
            dispatch({
              type: 'closeDialog'
            });
            if (typeof onFileDialogCancel === 'function') {
              onFileDialogCancel();
            }
          }
        }
      }, 300);
    }
  };
  useEffect$2(() => {
    window.addEventListener('focus', onWindowFocus, false);
    return () => {
      window.removeEventListener('focus', onWindowFocus, false);
    };
  }, [inputRef, isFileDialogActive, onFileDialogCancel]);

  // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone
  const onKeyDownCb = useCallback(event => {
    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {
      return;
    }
    if (event.keyCode === 32 || event.keyCode === 13) {
      event.preventDefault();
      openFileDialog();
    }
  }, [rootRef, inputRef]);

  // Update focus state for the dropzone
  const onFocusCb = useCallback(() => {
    dispatch({
      type: 'focus'
    });
  }, []);
  const onBlurCb = useCallback(() => {
    dispatch({
      type: 'blur'
    });
  }, []);
  const dragTargetsRef = useRef([]);
  const onDocumentDrop = event => {
    // Not every event target type is element so we have to check if it is.
    if (event.target instanceof HTMLDivElement && rootRef.current && rootRef.current.contains(event.target)) {
      return;
    }
    event.preventDefault();
    dragTargetsRef.current = [];
  };
  useEffect$2(() => {
    if (preventDropOnDocument) {
      document.addEventListener('dragover', onDocumentDragOver, false);
      document.addEventListener('drop', onDocumentDrop, false);
    }
    return () => {
      if (preventDropOnDocument) {
        document.removeEventListener('dragover', onDocumentDragOver);
        document.removeEventListener('drop', onDocumentDrop);
      }
    };
  }, [rootRef, preventDropOnDocument]);
  const onDragEnterCb = useCallback(event => {
    event.preventDefault();
    event.persist();
    dragTargetsRef.current = [...dragTargetsRef.current, event.target];
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(files => {
        if (isPropagationStopped(event)) {
          return;
        }
        dispatch({
          draggedFiles: files,
          isDragActive: true,
          type: 'setDraggedFiles'
        });
        if (onDragEnter) {
          onDragEnter(event);
        }
      });
    }
  }, [getFilesFromEvent, onDragEnter]);
  const onDragOverCb = useCallback(event => {
    event.preventDefault();
    event.persist();
    if (event.dataTransfer) {
      try {
        event.dataTransfer.dropEffect = 'copy';
      } catch {} /* eslint-disable-line no-empty */
    }
    if (isEvtWithFiles(event) && onDragOver) {
      onDragOver(event);
    }
    return false;
  }, [onDragOver]);
  const onDragLeaveCb = useCallback(event => {
    event.preventDefault();
    event.persist();
    const targets = dragTargetsRef.current.filter(target => rootRef.current && rootRef.current.contains(target));
    const targetIdx = targets.indexOf(event.target);
    if (targetIdx !== -1) {
      targets.splice(targetIdx, 1);
    }
    dragTargetsRef.current = targets;
    if (targets.length > 0) {
      return;
    }
    dispatch({
      isDragActive: false,
      type: 'setDraggedFiles',
      draggedFiles: []
    });
    if (isEvtWithFiles(event) && onDragLeave) {
      onDragLeave(event);
    }
  }, [rootRef, onDragLeave]);
  const onDropCb = useCallback(event => {
    event.preventDefault();
    // Persist here because we need the event later after getFilesFromEvent() is done
    event.persist();
    dragTargetsRef.current = [];
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(files => {
        if (isPropagationStopped(event)) {
          return;
        }
        const acceptedFiles = [];
        const fileRejections = [];
        files.forEach(file => {
          const [accepted, acceptError] = fileAccepted(file, accept);
          const [sizeMatch, sizeError] = fileMatchSize(file, minSize, maxSize);
          const customErrors = validator ? validator(file) : null;
          if (accepted && sizeMatch && !customErrors) {
            acceptedFiles.push(file);
          } else {
            let errors = [acceptError, sizeError];
            if (customErrors) {
              errors = errors.concat(customErrors);
            }
            const filteredErrors = errors.filter(e => e);
            fileRejections.push({
              file,
              errors: filteredErrors
            });
          }
        });
        dispatch({
          acceptedFiles,
          fileRejections,
          type: 'setFiles'
        });
        if (onDrop) {
          onDrop(event, acceptedFiles, fileRejections);
        }
        if (fileRejections.length > 0 && onDropRejected) {
          onDropRejected(event, fileRejections);
        }
        if (acceptedFiles.length > 0 && onDropAccepted) {
          onDropAccepted(event, acceptedFiles);
        }
      });
    }
    dispatch({
      type: 'reset'
    });
  }, [multiple, accept, minSize, maxSize, getFilesFromEvent, onDrop, onDropAccepted, onDropRejected]);
  const composeDragHandler = fn => {
    return disabled ? null : fn;
  };
  const getRootProps = useMemo(() => ({
    refKey = 'ref',
    onKeyDown,
    onFocus,
    onBlur,
    onClick,
    onDragEnterCallback,
    onDragOverCallback,
    onDragLeaveCallback,
    onDropCallback,
    ...rest
  } = {}) => ({
    onDragEnter: composeDragHandler(composeEventHandlers(onDragEnterCallback, onDragEnterCb)),
    onDragOver: composeDragHandler(composeEventHandlers(onDragOverCallback, onDragOverCb)),
    onDragLeave: composeDragHandler(composeEventHandlers(onDragLeaveCallback, onDragLeaveCb)),
    onDrop: composeDragHandler(composeEventHandlers(onDropCallback, onDropCb)),
    [refKey]: rootRef,
    ...rest
  }), [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, disabled]);
  const onInputElementClick = useCallback(event => {
    event.stopPropagation();
  }, []);
  const getInputProps = useMemo(() => ({
    refKey = 'ref',
    onChange,
    onClick,
    ...rest
  } = {}) => {
    const inputProps = {
      accept,
      multiple,
      type: 'file',
      style: {
        display: 'none'
      },
      onChange: composeDragHandler(composeEventHandlers(onChange, onDropCb)),
      onClick: composeDragHandler(composeEventHandlers(onClick, onInputElementClick)),
      autoComplete: 'off',
      tabIndex: -1,
      [refKey]: inputRef
    };
    return {
      ...inputProps,
      ...rest
    };
  }, [inputRef, accept, multiple, onDropCb, disabled]);
  const fileCount = draggedFiles.length;
  const isDragAccept = fileCount > 0 && allFilesAccepted({
    accept,
    minSize,
    maxSize,
    multiple,
    files: draggedFiles
  });
  const isDragReject = fileCount > 0 && !isDragAccept;
  const fileError = isDragReject ? getFileError({
    accept,
    minSize,
    maxSize,
    multiple,
    files: draggedFiles
  }) : '';
  return {
    ...state,
    isDragAccept,
    isDragReject,
    getRootProps,
    getInputProps,
    rootRef,
    inputRef,
    draggedFiles,
    fileError,
    isFocused: isFocused && !disabled,
    open: composeDragHandler(openFileDialog)
  };
};
DropzoneBase.displayName = 'DropzoneBase';
DropzoneBase.defaultProps = {
  disabled: false,
  getFilesFromEvent: fromEvent,
  maxSize: Infinity,
  minSize: 0,
  multiple: true,
  preventDropOnDocument: true,
  validator: () => null
};

var css_248z$l = ".dropzone-module-Dropzone-xfBzQ-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--white);\n  border-radius: var(--border-radius-10);\n  width: 100%;\n  background-image: linear-gradient(to right, var(--secondary) 50%, rgba(255, 255, 255, 0) 0%),\n    linear-gradient(var(--secondary) 50%, rgba(255, 255, 255, 0) 0%),\n    linear-gradient(to right, var(--secondary) 50%, rgba(255, 255, 255, 0) 0%),\n    linear-gradient(var(--secondary) 50%, rgba(255, 255, 255, 0) 0%);\n  background-position: top, right, bottom, left;\n  background-repeat: repeat-x, repeat-y;\n  background-size: var(--spacing-40) var(--spacing-2-5), var(--spacing-2-5) var(--spacing-40);\n  transition: background-color var(--duration--moderate-01) var(--standard-productive-curve);\n  box-sizing: border-box;\n}\n\n.dropzone-module-Dropzone--active-M0Gcb-5-0-0-9 {\n  background-color: var(--primary-lightest);\n  background-image: linear-gradient(to right, var(--primary) 50%, rgba(255, 255, 255, 0) 0%),\n    linear-gradient(var(--primary) 50%, rgba(255, 255, 255, 0) 0%),\n    linear-gradient(to right, var(--primary) 50%, rgba(255, 255, 255, 0) 0%),\n    linear-gradient(var(--primary) 50%, rgba(255, 255, 255, 0) 0%);\n  background-position: top, right, bottom, left;\n  background-repeat: repeat-x, repeat-y;\n  background-size: var(--spacing-40) var(--spacing-2-5), var(--spacing-2-5) var(--spacing-40);\n  transition: background-color var(--duration--moderate-01) var(--standard-productive-curve);\n  box-sizing: border-box;\n}\n\n.dropzone-module-Dropzone-animation-qJQVf-5-0-0-9 {\n  animation-delay: var(--duration--fast-02);\n  animation-fill-mode: forwards;\n}\n\n.dropzone-module-Dropzone-animation--default-cuelA-5-0-0-9 {\n  animation: dropzone-module-dropzoneDefault-5MWv4-5-0-0-9 var(--duration--moderate-01) var(--entrance-productive-curve);\n}\n\n.dropzone-module-Dropzone-animation--active-AlfVM-5-0-0-9 {\n  animation: dropzone-module-dropzoneActive-DcbqH-5-0-0-9 var(--duration--moderate-01) var(--entrance-productive-curve);\n}\n\n@keyframes dropzone-module-dropzoneDefault-5MWv4-5-0-0-9 {\n  from {\n    opacity: 0;\n    padding-top: 20px;\n  }\n\n  to {\n    opacity: 1;\n    padding-top: var(--spacing-30);\n  }\n}\n\n@keyframes dropzone-module-dropzoneActive-DcbqH-5-0-0-9 {\n  from {\n    opacity: 0;\n    padding-top: 20px;\n  }\n\n  to {\n    opacity: 1;\n    padding-top: var(--spacing-30);\n  }\n}\n\n.dropzone-module-Dropzone-standard--default-HMghu-5-0-0-9 {\n  animation: dropzone-module-dropzoneStandardDefault-YIUej-5-0-0-9 var(--duration--moderate-01) var(--entrance-productive-curve);\n}\n\n.dropzone-module-Dropzone-standard--active-8ZfF7-5-0-0-9 {\n  animation: dropzone-module-dropzoneStandardActive-ZiJ-w-5-0-0-9 var(--duration--moderate-01) var(--entrance-productive-curve);\n}\n\n@keyframes dropzone-module-dropzoneStandardDefault-YIUej-5-0-0-9 {\n  from {\n    opacity: 0;\n    padding-top: var(--spacing-40);\n  }\n\n  to {\n    opacity: 1;\n    padding-top: var(--spacing-20);\n  }\n}\n\n@keyframes dropzone-module-dropzoneStandardActive-ZiJ-w-5-0-0-9 {\n  from {\n    opacity: 0;\n    padding-top: var(--spacing-40);\n  }\n\n  to {\n    opacity: 1;\n    padding-top: var(--spacing-20);\n  }\n}\n\n.dropzone-module-Dropzone--error-wcuXz-5-0-0-9 {\n  background: var(--alert-lightest);\n  background-image: linear-gradient(to right, var(--alert) 50%, rgba(255, 255, 255, 0) 0%),\n    linear-gradient(var(--alert) 50%, rgba(255, 255, 255, 0) 0%),\n    linear-gradient(to right, var(--alert) 50%, rgba(255, 255, 255, 0) 0%),\n    linear-gradient(var(--alert) 50%, rgba(255, 255, 255, 0) 0%);\n  background-position: top, right, bottom, left;\n  background-repeat: repeat-x, repeat-y;\n  background-size: var(--spacing-40) var(--spacing-2-5), var(--spacing-2-5) var(--spacing-40);\n}\n\n.dropzone-module-Dropzone--disabled-Z-6tQ-5-0-0-9 {\n  background-image: linear-gradient(to right, var(--secondary) 50%, rgba(255, 255, 255, 0) 0%),\n    linear-gradient(var(--secondary) 50%, rgba(255, 255, 255, 0) 0%),\n    linear-gradient(to right, var(--secondary) 50%, rgba(255, 255, 255, 0) 0%),\n    linear-gradient(var(--secondary) 50%, rgba(255, 255, 255, 0) 0%);\n  background-position: top, right, bottom, left;\n  background-repeat: repeat-x, repeat-y;\n  background-size: var(--spacing-40) var(--spacing-2-5), var(--spacing-2-5) var(--spacing-40);\n}\n\n.dropzone-module-Dropzone--standard-BLqgV-5-0-0-9 {\n  flex-direction: column;\n  height: 196px;\n  min-width: 480px;\n  padding: var(--spacing-20) var(--spacing-60) var(--spacing-40) var(--spacing-60);\n}\n\n.dropzone-module-Dropzone--compressed-REqQ2-5-0-0-9 {\n  flex-direction: row;\n  height: 124px;\n  min-width: 400px;\n  padding: var(--spacing-30) var(--spacing-60) var(--spacing-40) var(--spacing-60);\n}\n\n.dropzone-module-Dropzone--tight--XZ-s-5-0-0-9 {\n  height: 124px;\n  min-width: 320px;\n  padding: var(--spacing-30) var(--spacing-60) var(--spacing-40) var(--spacing-60);\n}\n\n.dropzone-module-DropzoneWrapper-sLmKQ-5-0-0-9 {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.dropzone-module-DropzoneWrapper--standard-0fW8S-5-0-0-9,\n.dropzone-module-DropzoneWrapper--tight-Cg0sm-5-0-0-9 {\n  align-items: center;\n}\n\n.dropzone-module-DropzoneWrapper--compressed-UKNax-5-0-0-9 {\n  align-items: start;\n}\n\n.dropzone-module-Dropzone-icon--standard-Nv5eM-5-0-0-9 {\n  margin-bottom: var(--spacing-30);\n}\n\n.dropzone-module-Dropzone-icon--compressed-lcmwS-5-0-0-9 {\n  margin-right: var(--spacing-60);\n}\n\n.dropzone-module-Dropzone-icon--disabled-8nN-d-5-0-0-9 {\n  fill: var(--inverse-lightest);\n}\n\n.dropzone-module-Dropzone-icon--default-mwP9a-5-0-0-9 {\n  fill: var(--inverse-lighter);\n}\n\n.dropzone-module-Dropzone-icon--active-qPLXO-5-0-0-9 {\n  fill: var(--primary);\n}\n\n.dropzone-module-Dropzone-icon--error-ImiCw-5-0-0-9 {\n  fill: var(--alert);\n}\n";
var styles$k = {"Dropzone":"dropzone-module-Dropzone-xfBzQ-5-0-0-9","Dropzone--active":"dropzone-module-Dropzone--active-M0Gcb-5-0-0-9","Dropzone-animation":"dropzone-module-Dropzone-animation-qJQVf-5-0-0-9","Dropzone-animation--default":"dropzone-module-Dropzone-animation--default-cuelA-5-0-0-9","dropzoneDefault":"dropzone-module-dropzoneDefault-5MWv4-5-0-0-9","Dropzone-animation--active":"dropzone-module-Dropzone-animation--active-AlfVM-5-0-0-9","dropzoneActive":"dropzone-module-dropzoneActive-DcbqH-5-0-0-9","Dropzone-standard--default":"dropzone-module-Dropzone-standard--default-HMghu-5-0-0-9","dropzoneStandardDefault":"dropzone-module-dropzoneStandardDefault-YIUej-5-0-0-9","Dropzone-standard--active":"dropzone-module-Dropzone-standard--active-8ZfF7-5-0-0-9","dropzoneStandardActive":"dropzone-module-dropzoneStandardActive-ZiJ-w-5-0-0-9","Dropzone--error":"dropzone-module-Dropzone--error-wcuXz-5-0-0-9","Dropzone--disabled":"dropzone-module-Dropzone--disabled-Z-6tQ-5-0-0-9","Dropzone--standard":"dropzone-module-Dropzone--standard-BLqgV-5-0-0-9","Dropzone--compressed":"dropzone-module-Dropzone--compressed-REqQ2-5-0-0-9","Dropzone--tight":"dropzone-module-Dropzone--tight--XZ-s-5-0-0-9","DropzoneWrapper":"dropzone-module-DropzoneWrapper-sLmKQ-5-0-0-9","DropzoneWrapper--standard":"dropzone-module-DropzoneWrapper--standard-0fW8S-5-0-0-9","DropzoneWrapper--tight":"dropzone-module-DropzoneWrapper--tight-Cg0sm-5-0-0-9","DropzoneWrapper--compressed":"dropzone-module-DropzoneWrapper--compressed-UKNax-5-0-0-9","Dropzone-icon--standard":"dropzone-module-Dropzone-icon--standard-Nv5eM-5-0-0-9","Dropzone-icon--compressed":"dropzone-module-Dropzone-icon--compressed-lcmwS-5-0-0-9","Dropzone-icon--disabled":"dropzone-module-Dropzone-icon--disabled-8nN-d-5-0-0-9","Dropzone-icon--default":"dropzone-module-Dropzone-icon--default-mwP9a-5-0-0-9","Dropzone-icon--active":"dropzone-module-Dropzone-icon--active-qPLXO-5-0-0-9","Dropzone-icon--error":"dropzone-module-Dropzone-icon--error-ImiCw-5-0-0-9"};
styleInject(css_248z$l);

const svgCode = {
  active: 'M14.6667 53.3333C13.6 53.3333 12.6667 52.9333 11.8667 52.1333C11.0667 51.3333 10.6667 50.4 10.6667 49.3333V39.8H14.6667V49.3333H49.3333V39.8H53.3333V49.3333C53.3333 50.4 52.9333 51.3333 52.1333 52.1333C51.3333 52.9333 50.4 53.3333 49.3333 53.3333H14.6667ZM30 43.1333V18.4L22 26.4L19.1333 23.5333L32 10.6666L44.8667 23.5333L42 26.4L34 18.4V43.1333H30Z',
  default: 'M14.6667 53.3334C13.6 53.3334 12.6667 52.9334 11.8667 52.1334C11.0667 51.3334 10.6667 50.4 10.6667 49.3334V39.8H14.6667V49.3334H49.3333V39.8H53.3333V49.3334C53.3333 50.4 52.9333 51.3334 52.1333 52.1334C51.3333 52.9334 50.4 53.3334 49.3333 53.3334H14.6667ZM32 43.1334L19.1333 30.2667L22 27.4L30 35.4V10.6667H34V35.4L42 27.4L44.8667 30.2667L32 43.1334Z',
  error: 'M31.9988 45.3334C32.6218 45.3334 33.1444 45.1227 33.5667 44.7012C33.9889 44.2798 34.2 43.7575 34.2 43.1346C34.2 42.5115 33.9893 41.9889 33.5679 41.5667C33.1464 41.1445 32.6242 40.9334 32.0012 40.9334C31.3782 40.9334 30.8555 41.1441 30.4333 41.5655C30.0111 41.987 29.8 42.5092 29.8 43.1322C29.8 43.7552 30.0107 44.2778 30.4321 44.7C30.8536 45.1223 31.3758 45.3334 31.9988 45.3334ZM32.2117 35.1334C32.7817 35.1334 33.2555 34.9417 33.6333 34.5584C34.0111 34.175 34.2 33.7 34.2 33.1334V20.2667C34.2 19.7 34.0072 19.225 33.6217 18.8417C33.2361 18.4584 32.7583 18.2667 32.1883 18.2667C31.6183 18.2667 31.1444 18.4584 30.7667 18.8417C30.3889 19.225 30.2 19.7 30.2 20.2667V33.1334C30.2 33.7 30.3928 34.175 30.7783 34.5584C31.1639 34.9417 31.6417 35.1334 32.2117 35.1334ZM32.0177 58.6667C28.3407 58.6667 24.8851 57.9667 21.6511 56.5667C18.417 55.1667 15.5889 53.2556 13.1667 50.8334C10.7444 48.4111 8.83333 45.5813 7.43333 42.344C6.03333 39.1066 5.33333 35.6475 5.33333 31.9667C5.33333 28.2859 6.03333 24.8268 7.43333 21.5894C8.83333 18.3521 10.7444 15.5334 13.1667 13.1334C15.5889 10.7334 18.4187 8.83337 21.6561 7.43337C24.8934 6.03337 28.3525 5.33337 32.0333 5.33337C35.7142 5.33337 39.1733 6.03337 42.4106 7.43337C45.648 8.83337 48.4667 10.7334 50.8667 13.1334C53.2667 15.5334 55.1667 18.3556 56.5667 21.6C57.9667 24.8445 58.6667 28.3052 58.6667 31.9823C58.6667 35.6594 57.9667 39.1149 56.5667 42.349C55.1667 45.583 53.2667 48.4071 50.8667 50.8211C48.4667 53.2351 45.6444 55.1463 42.4 56.5544C39.1555 57.9626 35.6948 58.6667 32.0177 58.6667Z'
};
const DropzoneIcon = props => {
  const IconStyle = {
    height: 'var(--spacing-160)',
    width: 'var(--spacing-160)'
  };
  return /*#__PURE__*/React__default.createElement("svg", {
    style: IconStyle,
    className: styles$k[`Dropzone-icon--${props.type}`],
    viewBox: "0 0 64 64",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React__default.createElement("path", {
    d: svgCode[props.name],
    className: props.disabled ? styles$k['Dropzone-icon--disabled'] : styles$k[`Dropzone-icon--${props.name}`]
  }));
};

const DropzoneActive = props => {
  const {
    type
  } = props;
  return /*#__PURE__*/React.createElement(React.Fragment, null, type !== 'tight' && /*#__PURE__*/React.createElement(DropzoneIcon, {
    name: "active",
    type: type
  }), /*#__PURE__*/React.createElement(Text, {
    appearance: "link",
    size: "large",
    weight: "strong"
  }, "Drop your files here"));
};
DropzoneActive.displayName = 'DropzoneActive';

const DropzoneError = props => {
  const {
    type,
    error
  } = props;
  return /*#__PURE__*/React.createElement(React.Fragment, null, type !== 'tight' && /*#__PURE__*/React.createElement(DropzoneIcon, {
    type: type,
    name: "error"
  }), /*#__PURE__*/React.createElement(Text, {
    appearance: "destructive",
    size: "large",
    weight: "strong"
  }, error));
};
DropzoneError.displayName = 'DropzoneError';

const Dropzone = props => {
  const {
    type,
    sizeLabel,
    className,
    formatLabel,
    sampleFileLink,
    disabled
  } = props;
  const {
    open,
    getRootProps,
    getInputProps,
    isDragActive,
    isDragReject,
    fileError
  } = DropzoneBase(props);
  const baseProps = extractBaseProps(props);
  const DropzoneClass = classNames({
    [styles$k['Dropzone']]: true,
    [styles$k[`Dropzone--${type}`]]: type,
    [styles$k['Dropzone--disabled']]: disabled,
    [styles$k['Dropzone--active']]: isDragActive,
    [styles$k['Dropzone--error']]: isDragReject,
    [styles$k['Dropzone-animation']]: true,
    [styles$k['Dropzone-animation--default']]: !isDragActive && type !== 'standard',
    [styles$k['Dropzone-animation--active']]: isDragActive && !isDragReject && type !== 'standard',
    [styles$k['Dropzone-standard--default']]: !isDragActive && type === 'standard',
    [styles$k['Dropzone-standard--active']]: isDragActive && !isDragReject && type === 'standard'
  }, className);
  const WrapperClass = classNames({
    [styles$k['DropzoneWrapper']]: true,
    [styles$k[`DropzoneWrapper--${type}`]]: true
  });
  const renderDropzone = () => {
    if (isDragReject) return /*#__PURE__*/React.createElement(DropzoneError, {
      type: type,
      error: fileErrorMessages[fileError]
    });
    if (isDragActive) return /*#__PURE__*/React.createElement(DropzoneActive, {
      type: type
    });
    const buttonAccessibilityProps = useAccessibilityProps({
      onClick: open,
      'aria-label': 'Drag your files here or click to select files'
    });
    return /*#__PURE__*/React.createElement(React.Fragment, null, type !== 'tight' && /*#__PURE__*/React.createElement(DropzoneIcon, {
      disabled: disabled,
      name: "default",
      type: type
    }), /*#__PURE__*/React.createElement("div", {
      className: WrapperClass,
      "data-test": "DesignSystem-Dropzone-Wrapper"
    }, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement(Text, {
      size: "large",
      weight: "strong",
      className: "mr-2",
      appearance: disabled ? 'disabled' : 'default'
    }, "Drag your files here or"), /*#__PURE__*/React.createElement(Text, _extends$2({
      className: "ml-2 cursor-pointer",
      size: "large",
      weight: "strong",
      appearance: disabled ? 'disabled' : 'link'
    }, buttonAccessibilityProps, {
      tabIndex: disabled ? -1 : 0
    }), "browse files"), /*#__PURE__*/React.createElement("input", getInputProps())), formatLabel && /*#__PURE__*/React.createElement(Text, {
      appearance: disabled ? 'disabled' : 'subtle'
    }, formatLabel), sizeLabel && /*#__PURE__*/React.createElement(Text, {
      appearance: disabled ? 'disabled' : 'subtle'
    }, sizeLabel), sampleFileLink && /*#__PURE__*/React.createElement("div", {
      className: "mt-5"
    }, sampleFileLink)));
  };
  return /*#__PURE__*/React.createElement("div", _extends$2({}, getRootProps(), baseProps, {
    className: DropzoneClass,
    "data-test": "DesignSystem-Dropzone"
  }), renderDropzone());
};
Dropzone.displayName = 'Dropzone';
Dropzone.defaultProps = {
  ...DropzoneBase.defaultProps,
  type: 'standard'
};

const FileUploaderFormat = props => {
  const {
    formatLabel
  } = props;
  if (formatLabel) {
    return /*#__PURE__*/React.createElement(Text, {
      size: "small",
      appearance: "subtle",
      className: "mt-4"
    }, formatLabel);
  }
  return null;
};
FileUploaderFormat.displayName = 'FileUploaderFormat';

var css_248z$k = ".fileUploader-module-FileUploader--Pv73-5-0-0-9 {\n  display: flex;\n  flex-direction: column;\n}\n\n.fileUploader-module-FileUploaderButton-qfMIr-5-0-0-9 {\n  width: -moz-fit-content;\n  width: fit-content;\n  position: relative;\n}\n\n.fileUploader-module-FileUploaderButton-input-em151-5-0-0-9 {\n  height: 100%;\n  width: 100%;\n  top: 0;\n  position: absolute;\n  opacity: 0;\n  font-size: 0;\n  z-index: 2;\n  cursor: pointer;\n}\n\n.fileUploader-module-FileUploaderItem-ukfM6-5-0-0-9 {\n  width: var(--spacing-640);\n}\n\n.fileUploader-module-FileUploaderItem-text-5ygMX-5-0-0-9 {\n  width: var(--spacing-440);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.fileUploader-module-FileUploaderItem-file-HKKiB-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: var(--spacing-05);\n  padding-bottom: var(--spacing-05);\n}\n";
var styles$j = {"FileUploader":"fileUploader-module-FileUploader--Pv73-5-0-0-9","FileUploaderButton":"fileUploader-module-FileUploaderButton-qfMIr-5-0-0-9","FileUploaderButton-input":"fileUploader-module-FileUploaderButton-input-em151-5-0-0-9","FileUploaderItem":"fileUploader-module-FileUploaderItem-ukfM6-5-0-0-9","FileUploaderItem-text":"fileUploader-module-FileUploaderItem-text-5ygMX-5-0-0-9","FileUploaderItem-file":"fileUploader-module-FileUploaderItem-file-HKKiB-5-0-0-9"};
styleInject(css_248z$k);

const FileUploaderButton = props => {
  const {
    accept,
    multiple,
    uploadButtonLabel,
    disabled,
    name,
    className,
    id,
    onChange
  } = props;
  const baseProps = extractBaseProps(props);
  const FileUploaderButtonClass = classNames({
    [styles$j['FileUploaderButton']]: true
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
    className: FileUploaderButtonClass
  }), /*#__PURE__*/React.createElement(Button, {
    type: "button",
    disabled: disabled,
    icon: "backup"
  }, uploadButtonLabel), /*#__PURE__*/React.createElement("input", {
    name: name,
    id: id,
    "data-test": "DesignSystem-FileUploaderButton--Input",
    accept: accept && accept.join(', '),
    multiple: multiple,
    disabled: disabled,
    type: "file",
    tabIndex: -1,
    className: styles$j['FileUploaderButton-input'],
    onChange: event => {
      const fileList = event.target.files ? Array.from(event.target.files) : [];
      if (onChange) onChange(fileList, event);
    }
  }));
};
FileUploaderButton.defaultProps = {
  uploadButtonLabel: 'Upload files',
  disabled: false,
  multiple: false
};
FileUploaderButton.displayName = 'FileUploaderButton';

const FileUploader = props => {
  const {
    accept,
    multiple,
    disabled,
    title,
    uploadButtonLabel,
    sizeLabel,
    formatLabel,
    sampleFileLink,
    className,
    id,
    name,
    onChange
  } = props;
  const baseProps = extractBaseProps(props);
  const FileUploaderClass = classNames({
    [styles$j['FileUploader']]: true
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
    className: FileUploaderClass,
    "data-test": "DesignSystem-FileUploader"
  }), /*#__PURE__*/React.createElement(Text, {
    weight: "medium"
  }, title), /*#__PURE__*/React.createElement(FileUploaderFormat, {
    formatLabel: formatLabel
  }), /*#__PURE__*/React.createElement(Text, {
    size: "small",
    appearance: "subtle",
    className: !formatLabel ? 'mt-4' : ''
  }, sizeLabel), sampleFileLink && /*#__PURE__*/React.createElement("div", {
    className: "mt-4"
  }, sampleFileLink), /*#__PURE__*/React.createElement(FileUploaderButton, {
    id: id,
    name: name,
    accept: accept,
    multiple: multiple,
    disabled: disabled,
    uploadButtonLabel: uploadButtonLabel,
    onChange: onChange,
    className: "mt-5"
  }));
};
FileUploader.defaultProps = Object.assign({}, FileUploaderButton.defaultProps, {
  title: 'Upload files',
  sizeLabel: 'Maximum size: 25 MB'
});
FileUploader.displayName = 'FileUploader';

const FileUploaderStatus = props => {
  const {
    progress,
    status,
    onRetry
  } = props;
  switch (status) {
    case 'uploading':
      return /*#__PURE__*/React.createElement(ProgressRing, {
        size: "small",
        value: progress,
        className: "mr-4"
      });
    case 'error':
      return /*#__PURE__*/React.createElement(Button, {
        appearance: "transparent",
        size: "regular",
        onClick: onRetry,
        icon: "refresh",
        className: "mr-2"
      });
    default:
      return null;
  }
};
FileUploaderStatus.displayName = 'FileUploaderStatus';
FileUploaderStatus.defaultProps = {
  status: 'completed',
  progress: 0
};

const FileUploaderItem = props => {
  const {
    file,
    id,
    status,
    errorMessage,
    progress,
    onClick,
    onDelete,
    onRetry,
    className
  } = props;
  const {
    name
  } = file;
  const baseProps = extractBaseProps(props);
  const FileItemClass = classNames({
    [styles$j['FileUploaderItem']]: true
  }, className);
  return (
    /*#__PURE__*/
    // TODO(a11y)
    //  eslint-disable-next-line
    React.createElement("div", _extends$2({}, baseProps, {
      "data-test": "DesignSystem-FileUploader--Item",
      className: FileItemClass,
      onClick: () => onClick && onClick(file, id)
    }), /*#__PURE__*/React.createElement("div", {
      className: styles$j['FileUploaderItem-file']
    }, /*#__PURE__*/React.createElement(Text, {
      className: styles$j['FileUploaderItem-text'],
      appearance: status === 'completed' ? 'default' : 'subtle'
    }, name), /*#__PURE__*/React.createElement("div", {
      className: "d-flex align-items-center"
    }, /*#__PURE__*/React.createElement(FileUploaderStatus, {
      file: file,
      id: id,
      status: status,
      progress: progress,
      onRetry: () => onRetry && onRetry(file, id)
    }), /*#__PURE__*/React.createElement(Button, {
      "data-test": "DesignSystem-FileUploader--CancelButton",
      appearance: "transparent",
      size: "regular",
      onClick: () => onDelete && onDelete(file, id),
      icon: "close"
    }))), status === 'error' && /*#__PURE__*/React.createElement(InlineMessage, {
      size: "small",
      appearance: "alert",
      description: errorMessage
    }))
  );
};
FileUploaderItem.defaultProps = {
  status: 'completed',
  progress: 0,
  errorMessage: 'Network Error'
};
FileUploaderItem.displayName = 'FileUploaderItem';

const FileUploaderList = props => {
  const {
    fileList,
    onClick,
    onDelete,
    onRetry,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const FileListClass = classNames({
    [styles$j['FileUploaderList']]: true
  }, className);
  if (fileList.length === 0) return null;
  return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
    className: FileListClass,
    "data-test": "DesignSystem-FileUploader--List"
  }), fileList.map((fileName, i) => /*#__PURE__*/React.createElement(FileUploaderItem, _extends$2({
    key: i,
    onDelete: onDelete,
    onRetry: onRetry,
    onClick: onClick
  }, fileName))));
};
FileUploaderList.defaultProps = {
  fileList: []
};
FileUploaderList.displayName = 'FileUploaderList';

const resizeCol = ({
  updateColumnSchema
}, name, el) => {
  const elX = el?.getBoundingClientRect().x;
  function resizable(ev) {
    ev.preventDefault();
    if (elX) {
      updateColumnSchema(name, {
        width: ev.pageX - elX
      });
    }
  }
  window.addEventListener('mousemove', resizable);
  window.addEventListener('mouseup', () => {
    window.removeEventListener('mousemove', resizable);
  });
};
const sortColumn = ({
  sortingList,
  updateSortingList
}, name, type) => {
  let newSortingList = [...sortingList];
  const index = newSortingList.findIndex(l => l.name === name);
  if (index !== -1) {
    newSortingList = [...newSortingList.slice(0, index), ...newSortingList.slice(index + 1)];
  }
  if (type !== 'unsort') newSortingList.push({
    name,
    type
  });
  updateSortingList(newSortingList);
};
const pinColumn = ({
  updateColumnSchema
}, name, type) => {
  const schemaUpdate = {
    pinned: type !== 'unpin' ? type : undefined
  };
  updateColumnSchema(name, schemaUpdate);
};
const hideColumn = ({
  updateColumnSchema
}, name, value) => {
  const schemaUpdate = {
    hidden: value
  };
  updateColumnSchema(name, schemaUpdate);
};
function getWidth({
  ref,
  withCheckbox
}, width) {
  const isPercent = typeof width === 'string' && width.slice(-1) === '%';
  if (isPercent) {
    const checkboxCell = ref.querySelector(`.${gridStyles['Grid-cell--checkbox']}`);
    const checkboxWidth = withCheckbox ? checkboxCell?.clientWidth || 28 : 0;
    const gridWidth = ref.clientWidth - checkboxWidth;
    return gridWidth * (+width.slice(0, -1) / 100);
  }
  return width;
}
function getCellSize(cellType) {
  const sizes = {
    AVATAR: {
      minWidth: 48
    },
    AVATAR_WITH_TEXT: {
      width: 256
    },
    AVATAR_WITH_META_LIST: {
      width: 256
    },
    ICON: {
      minWdth: 48
    },
    STATUS_HINT: {
      width: 96
    },
    WITH_META_LIST: {
      width: 176
    },
    DEFAULT: {
      width: 176
    }
  };
  return sizes[cellType];
}

const updateBatchData = (data, rowIndexes, dataUpdate, selectDisabledRow) => {
  const updatedData = [...data];
  for (const rowIndex of rowIndexes) {
    if (data[rowIndex].disabled && selectDisabledRow || !data[rowIndex].disabled) {
      updatedData[rowIndex] = {
        ...updatedData[rowIndex],
        ...dataUpdate
      };
    }
  }
  return updatedData;
};
function translateData(schema, data) {
  const newData = {
    ...data
  };
  if (schema.translate) {
    const translatedData = schema.translate(data);
    newData[schema.name] = translatedData !== null && typeof translatedData === 'object' ? {
      ...newData[schema.name],
      ...translatedData
    } : translatedData;
  }
  if (newData[schema.name] === null || typeof newData[schema.name] !== 'object') {
    newData[schema.name] = {
      title: newData[schema.name]
    };
  }
  return newData;
}
const filterData = (schema = [], data = [], filterList) => {
  let filteredData = data;
  if (filterList) {
    Object.keys(filterList).forEach(schemaName => {
      const filters = filterList[schemaName];
      const sIndex = schema.findIndex(s => s.name === schemaName);
      const {
        onFilterChange
      } = schema[sIndex];
      if (filters.length && onFilterChange) {
        filteredData = filteredData.filter(d => onFilterChange(d, filters));
      }
    });
  }
  return filteredData;
};
const sortData = (schema = [], data = [], sortingList) => {
  const sortedData = [...data];
  sortingList?.forEach(l => {
    const sIndex = schema.findIndex(s => s.name === l.name);
    if (sIndex !== -1) {
      const defaultComparator = (a, b) => {
        const aData = translateData(schema[sIndex], a);
        const bData = translateData(schema[sIndex], b);
        return aData[l.name].title.localeCompare(bData[l.name].title);
      };
      const {
        comparator = defaultComparator
      } = schema[sIndex];
      sortedData.sort(comparator);
      if (l.type === 'desc') sortedData.reverse();
    }
  });
  return sortedData;
};
const paginateData = (data = [], page, pageSize) => {
  const start = (page - 1) * pageSize;
  const end = start + pageSize;
  const paginatedData = data.slice(start, end);
  return paginatedData;
};

const moveToIndex = (arr, from, to) => {
  if (from === to) return arr;
  let newArr = arr;
  if (from < to) {
    newArr = [...arr.slice(0, from), ...arr.slice(from + 1, to + 1), arr[from], ...arr.slice(to + 1)];
  } else {
    newArr = [...arr.slice(0, to), arr[from], ...arr.slice(to, from), ...arr.slice(from + 1)];
  }
  return newArr;
};
const getTotalPages = (totalRecords, pageSize) => Math.ceil(totalRecords / pageSize);
const getSelectAll = (tableData, selectDisabledRow, clearSelection) => {
  if (clearSelection) {
    return {
      indeterminate: false,
      checked: false
    };
  }
  const data = tableData.filter(d => d.disabled && selectDisabledRow || !d.disabled);
  if (data.length) {
    const anyUnSelected = data.some(d => !d._selected);
    const allUnSelected = data.every(d => !d._selected);
    const indeterminate = data.length >= 0 && anyUnSelected && !allUnSelected;
    const checked = !indeterminate && !allUnSelected;
    return {
      indeterminate,
      checked
    };
  }
  return {
    indeterminate: false,
    checked: false
  };
};
const hasSchema = schema => schema && !!schema.length;
const getSchema = (schema, loading, loaderSchema) => {
  let response = schema;
  if (!hasSchema(schema) && loading) {
    response = loaderSchema;
  }
  return response;
};
const getPluralSuffix = count => count > 1 ? 's' : '';

const defaultProps$1 = {
  showHead: true,
  loaderSchema: [],
  schema: [],
  data: [],
  totalRecords: 0,
  type: 'data',
  size: 'standard',
  page: 1,
  pageSize: 15,
  loading: false,
  error: false,
  sortingList: [],
  filterList: {},
  showFilters: true,
  infiniteScrollOptions: {
    fetchRowsCount: 200,
    fetchThreshold: 'balanced'
  },
  virtualRowOptions: {
    buffer: 10,
    visibleRows: 200
  }
};

const context = /*#__PURE__*/React.createContext({
  ...defaultProps$1,
  ref: null
});
const GridProvider = context.Provider;

const HeaderCell = props => {
  const context$1 = React.useContext(context);
  const {
    schema,
    setIsDragged,
    colIndex,
    onSelectAll,
    onMenuChange,
    onFilterChange,
    updateColumnSchema,
    reorderColumn
  } = props;
  const headProps = {
    schema,
    colIndex,
    onSelectAll,
    onMenuChange,
    onFilterChange,
    updateColumnSchema,
    reorderColumn,
    setIsDragged
  };
  const {
    loading,
    draggable,
    showMenu,
    sortingList,
    filterList,
    headCellTooltip,
    showFilters,
    schema: schemaProp
  } = context$1;
  const {
    sorting = true,
    name,
    filters,
    pinned
  } = schema;
  const isValidSchema = hasSchema(schemaProp);
  const listIndex = sortingList.findIndex(l => l.name === name);
  const sorted = listIndex !== -1 ? sortingList[listIndex].type : null;
  const el = /*#__PURE__*/React.createRef();
  const sortOptions = [{
    label: 'Sort Ascending',
    value: 'sortAsc',
    icon: 'arrow_upward'
  }, {
    label: 'Sort Descending',
    value: 'sortDesc',
    icon: 'arrow_downward'
  }];
  const pinOptions = [{
    label: 'Pin Left',
    value: 'pinLeft',
    icon: 'skip_previous'
  }, {
    label: 'Pin Right',
    value: 'pinRight',
    icon: 'skip_next'
  }];
  const unpinOption = {
    label: 'Unpin',
    value: 'unpin',
    icon: 'replay'
  };
  if (pinned === 'left') pinOptions[0] = unpinOption;
  if (pinned === 'right') pinOptions[1] = unpinOption;
  const hideOptions = [{
    label: 'Hide Column',
    value: 'hide',
    icon: 'cancel'
  }];
  const unsortOption = {
    label: 'Unsort',
    value: 'unsort',
    icon: 'unfold_more'
  };
  if (sorted === 'asc') sortOptions[0] = unsortOption;
  if (sorted === 'desc') sortOptions[1] = unsortOption;
  let options = [...pinOptions, ...hideOptions];
  if (sorting) options = [...sortOptions, ...options];
  const classes = classNames({
    [gridStyles['Grid-headCell']]: true,
    [gridStyles['Grid-headCell--draggable']]: draggable
  });
  const filterOptions = filters ? filters.map(f => ({
    ...f,
    selected: filterList[name] && filterList[name].findIndex(fl => fl === f.value) !== -1
  })) : [];
  const renderLabel = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
    weight: "strong",
    className: "ellipsis--noWrap"
  }, schema.displayName), sorting && /*#__PURE__*/React.createElement("div", {
    className: gridStyles['Grid-sortingIcons']
  }, sorted ? sorted === 'asc' ? /*#__PURE__*/React.createElement(Icon, {
    name: "arrow_upward"
  }) : /*#__PURE__*/React.createElement(Icon, {
    name: "arrow_downward"
  }) : /*#__PURE__*/React.createElement(Icon, {
    name: "unfold_more"
  })));
  return /*#__PURE__*/React.createElement("div", {
    key: name,
    className: classes,
    ref: el
  }, /*#__PURE__*/React.createElement("div", {
    className: gridStyles['Grid-cellContent'],
    "data-test": "DesignSystem-Grid-cellContent",
    onClick: () => {
      if (!loading && sorting) {
        if (sorted === 'asc') onMenuChange(name, 'sortDesc');
        if (sorted === 'desc') onMenuChange(name, 'unsort');
        if (!sorted) onMenuChange(name, 'sortAsc');
      }
    }
  }, loading && !isValidSchema ? /*#__PURE__*/React.createElement(Placeholder, {
    withImage: false
  }, /*#__PURE__*/React.createElement(PlaceholderParagraph, {
    length: "medium"
  })) : !schema.headerCellRenderer && headCellTooltip ? /*#__PURE__*/React.createElement(Tooltip, {
    position: "top-start",
    triggerClass: "w-100 overflow-hidden",
    tooltip: schema.displayName
  }, renderLabel()) : schema.headerCellRenderer && !headCellTooltip ? schema.headerCellRenderer(headProps) : renderLabel()), showFilters && filters && /*#__PURE__*/React.createElement(React.Fragment, null, loading && !isValidSchema ? /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement(Placeholder, null)) : /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Dropdown, {
    menu: true,
    showApplyButton: true,
    withCheckbox: true,
    triggerOptions: {
      customTrigger: () => /*#__PURE__*/React.createElement(Button, {
        icon: "filter_list",
        appearance: "transparent"
      })
    },
    options: filterOptions,
    align: 'left',
    onChange: selected => onFilterChange(name, selected),
    minWidth: 176
  }))), showMenu && /*#__PURE__*/React.createElement(React.Fragment, null, loading && !isValidSchema ? /*#__PURE__*/React.createElement("span", {
    className: "ml-4"
  }, /*#__PURE__*/React.createElement(Placeholder, null)) : /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Dropdown, {
    key: `${name}-${sorted}-${pinned}`,
    menu: true,
    optionType: "WITH_ICON",
    triggerOptions: {
      customTrigger: () => /*#__PURE__*/React.createElement(Button, {
        icon: "more_vert_filled",
        appearance: "transparent"
      })
    },
    options: options,
    align: 'left',
    onChange: selected => onMenuChange(name, selected),
    minWidth: 176
  }))), schema.resizable &&
  /*#__PURE__*/
  //TODO(a11y)
  //eslint-disable-next-line
  React.createElement("span", {
    className: gridStyles['Grid-cellResize'],
    onMouseDown: () => {
      resizeCol({
        updateColumnSchema
      }, name, el.current);
      setIsDragged(false);
    }
  }));
};
const BodyCell = props => {
  const context$1 = React.useContext(context);
  const {
    data,
    schema,
    expandedState,
    rowIndex,
    colIndex,
    nestedRowData
  } = props;
  const {
    size,
    loading,
    nestedRows
  } = context$1;
  const [expanded, setExpanded] = expandedState;
  const {
    verticalAlign
  } = schema;
  const cellProps = {
    rowIndex,
    colIndex,
    size,
    schema,
    data,
    loading,
    expanded
  };
  const cellClass = classNames({
    [gridStyles['Grid-cellContent']]: true,
    ['align-items-start']: verticalAlign === 'top',
    ['align-items-end']: verticalAlign === 'bottom'
  });
  return /*#__PURE__*/React.createElement("div", {
    className: cellClass,
    "data-test": "DesignSystem-Grid-bodyCell"
  }, colIndex === 0 && nestedRows && /*#__PURE__*/React.createElement(React.Fragment, null, nestedRowData ? /*#__PURE__*/React.createElement(Icon, {
    className: gridStyles['Grid-nestedRowTrigger'],
    "data-test": "DesignSystem-Grid-nestedRowTrigger",
    name: expanded ? 'keyboard_arrow_up' : 'keyboard_arrow_down',
    size: 20,
    appearance: 'default',
    onClick: e => {
      if (nestedRowData) {
        e.stopPropagation();
        setExpanded(!expanded);
      }
    }
  }) : /*#__PURE__*/React.createElement("span", {
    className: gridStyles['Grid-nestedRowPlaceholder']
  })), schema.cellRenderer ? schema.cellRenderer(cellProps) : /*#__PURE__*/React.createElement(GridCell, _extends$2({
    key: `${rowIndex}-${colIndex}`
  }, cellProps)));
};
const Cell = props => {
  const context$1 = React.useContext(context);
  const {
    isHead,
    firstCell,
    schema,
    data,
    rowIndex,
    colIndex,
    expandedState,
    onSelectAll,
    onMenuChange,
    onFilterChange,
    updateColumnSchema,
    reorderColumn,
    nestedRowData
  } = props;
  const {
    draggable,
    separator,
    nestedRows,
    ref,
    withCheckbox
  } = context$1;
  const {
    name,
    hidden,
    pinned,
    cellType = 'DEFAULT'
  } = schema;
  const {
    width,
    minWidth = 96,
    maxWidth = 800
  } = getCellSize(cellType);
  const [isDragged, setIsDragged] = React.useState(false);
  const cellClass = classNames({
    [gridStyles['Grid-cell']]: true,
    [gridStyles['Grid-cell--head']]: isHead,
    [gridStyles['Grid-cell--dragged']]: isDragged && draggable,
    [gridStyles['Grid-cell--body']]: !isHead,
    [gridStyles['Grid-cell--separator']]: !firstCell && (schema.separator !== undefined ? schema.separator : separator),
    [gridStyles['Grid-cell--nestedRow']]: !isHead && colIndex === 0 && nestedRows
  });
  if (hidden) return null;
  return /*#__PURE__*/React.createElement("div", {
    key: `${rowIndex}-${colIndex}`,
    className: cellClass,
    draggable: isHead && draggable,
    onDragStart: e => {
      if (draggable) {
        setIsDragged(true);
        e.dataTransfer.setData('name', name);
        if (pinned) e.dataTransfer.setData('type', pinned);
      }
    },
    onDrag: () => {
      setIsDragged(false);
    },
    onDragOver: e => e.preventDefault(),
    onMouseUpCapture: () => {
      setIsDragged(false);
    },
    onDragEnd: e => {
      e.preventDefault();
      setIsDragged(false);
    },
    onDrop: e => {
      if (draggable) {
        setIsDragged(false);
        const from = {
          name: e.dataTransfer.getData('name'),
          type: e.dataTransfer.getData('type')
        };
        const to = {
          name,
          type: pinned || ''
        };
        if (from.type === to.type && reorderColumn) reorderColumn(from.name, to.name);
      }
    },
    style: {
      width: getWidth({
        ref,
        withCheckbox
      }, schema.width || width),
      minWidth: getWidth({
        ref,
        withCheckbox
      }, schema.minWidth || minWidth),
      maxWidth: getWidth({
        ref,
        withCheckbox
      }, schema.maxWidth || maxWidth)
    }
  }, isHead ? /*#__PURE__*/React.createElement(HeaderCell, {
    colIndex: colIndex,
    schema: schema,
    onSelectAll: onSelectAll,
    onMenuChange: onMenuChange,
    onFilterChange: onFilterChange,
    updateColumnSchema: updateColumnSchema,
    reorderColumn: reorderColumn,
    setIsDragged: setIsDragged
  }) : /*#__PURE__*/React.createElement(BodyCell, {
    rowIndex: rowIndex,
    colIndex: colIndex,
    data: data,
    schema: schema,
    expandedState: expandedState,
    nestedRowData: nestedRowData
  }));
};

const GridHead = props => {
  const context$1 = React.useContext(context);
  const {
    schema,
    onSelectAll,
    onMenuChange,
    onFilterChange,
    updateColumnSchema,
    reorderColumn
  } = props;
  const {
    withCheckbox,
    loading,
    selectAll
  } = context$1;
  const pinnedSchema = schema.filter(s => !s.hidden && s.pinned);
  const leftPinnedSchema = pinnedSchema.filter(s => !s.hidden && s.pinned === 'left');
  const rightPinnedSchema = pinnedSchema.filter(s => !s.hidden && s.pinned === 'right');
  const unpinnedSchema = schema.filter(s => !s.hidden && !s.pinned);
  const CheckboxClass = classNames({
    [gridStyles['Grid-cell']]: true,
    [gridStyles['Grid-cell--head']]: true,
    [gridStyles['Grid-cell--checkbox']]: true
  });
  const RowClass = classNames({
    [gridStyles['Grid-row']]: true,
    [gridStyles['Grid-row--head']]: true
  });
  const renderCheckbox = show => {
    if (!show || !withCheckbox) return null;
    return /*#__PURE__*/React.createElement("div", {
      className: CheckboxClass
    }, loading ? /*#__PURE__*/React.createElement(Placeholder, null) : /*#__PURE__*/React.createElement(Checkbox, _extends$2({}, selectAll, {
      onChange: onSelectAll
    })));
  };
  const renderSchema = (currSchema, shouldRenderCheckbox, pinned) => {
    if (currSchema.length) {
      const classes = classNames({
        [gridStyles['Grid-cellGroup']]: true,
        [gridStyles['Grid-cellGroup--pinned']]: pinned,
        [gridStyles[`Grid-cellGroup--pinned-${pinned}`]]: pinned,
        [gridStyles['Grid-cellGroup--main']]: !pinned
      });
      return /*#__PURE__*/React.createElement("div", {
        className: classes
      }, renderCheckbox(shouldRenderCheckbox), currSchema.map((s, index) => {
        let cI = pinned === 'left' ? index : leftPinnedSchema.length + index;
        if (pinned === 'right') cI += unpinnedSchema.length;
        return /*#__PURE__*/React.createElement(Cell, {
          key: `${cI}`,
          firstCell: !index,
          colIndex: cI,
          isHead: true,
          schema: s,
          onSelectAll: onSelectAll,
          onMenuChange: onMenuChange,
          onFilterChange: onFilterChange,
          updateColumnSchema: updateColumnSchema,
          reorderColumn: reorderColumn
        });
      }));
    }
    return null;
  };
  return /*#__PURE__*/React.createElement("div", {
    className: gridStyles['Grid-head'],
    "data-test": "DesignSystem-GridHead-wrapper"
  }, /*#__PURE__*/React.createElement("div", {
    className: RowClass
  }, renderSchema(leftPinnedSchema, !!leftPinnedSchema.length, 'left'), renderSchema(unpinnedSchema, !leftPinnedSchema.length && !!unpinnedSchema.length), renderSchema(rightPinnedSchema, false, 'right')));
};

const GridNestedRow = props => {
  const context$1 = React.useContext(context);
  const {
    schema,
    loading,
    nestedRowRenderer
  } = context$1;
  const {
    data,
    rowIndex,
    expanded
  } = props;
  if (nestedRowRenderer) return nestedRowRenderer({
    data,
    schema,
    loading,
    rowIndex,
    expanded
  });
  // return (
  //   <Text>{JSON.stringify(data)}</Text>
  // )

  // const {
  //   schema: propSchema
  // } = _this.props;

  // if (data._expanded) {
  //   const showHead = data._expanded.showHead;
  //   const schema = data._expanded.schema || propSchema;
  //   let gridData = data._expanded.data;
  //   if (!gridData) {
  //     const {
  //       _uid,
  //       _expanded,
  //       ...rest
  //     } = data;
  //     gridData = [rest];
  //   }

  //   return (
  //     <div className="Grid-expandedRow">
  //       <Grid
  //         key={'expanedRow'}
  //         showHead={showHead}
  //         data={gridData}
  //         schema={schema}
  //         totalRecords={gridData.length}
  //       />
  //     </div>
  //   );
  // }
  return null;
};

const GridRow = props => {
  const context$1 = React.useContext(context);
  const {
    type,
    onRowClick,
    loading,
    withCheckbox,
    nestedRows,
    checkboxAlignment
  } = context$1;
  const {
    schema,
    data,
    rowIndex: rI,
    onSelect,
    className
  } = props;
  const {
    _expandNestedRow
  } = data;
  const rowRef = React.useRef(null);
  const [expanded, setExpanded] = React.useState(_expandNestedRow || false);
  const rowClasses = classNames(gridStyles['Grid-row'], gridStyles['Grid-row--body'], {
    [gridStyles['Grid-row--selected']]: data._selected,
    [gridStyles['Grid-row--disabled']]: data.disabled
  });
  const onClickHandler = React.useCallback(() => {
    if (type === 'resource' && !loading) {
      if (onRowClick) {
        onRowClick(data, rI);
      }
    }
  }, [data, rI]);
  const pinnedSchema = schema.filter(s => !s.hidden && s.pinned);
  const leftPinnedSchema = pinnedSchema.filter(s => !s.hidden && s.pinned === 'left');
  const rightPinnedSchema = pinnedSchema.filter(s => !s.hidden && s.pinned === 'right');
  const unpinnedSchema = schema.filter(s => !s.hidden && !s.pinned);
  const nestedProps = {
    data,
    rowIndex: rI,
    expanded
  };
  const nestedRowData = GridNestedRow(nestedProps);
  const renderCheckbox = show => {
    if (!show || !withCheckbox) return null;
    const CheckboxClass = classNames(gridStyles['Grid-cell'], gridStyles['Grid-cell--body'], gridStyles['Grid-cell--checkbox'], {
      ['align-items-start']: checkboxAlignment === 'top',
      ['align-items-end']: checkboxAlignment === 'bottom'
    });
    return (
      /*#__PURE__*/
      // TODO(a11y)
      // eslint-disable-next-line
      React.createElement("div", {
        className: CheckboxClass,
        onClick: e => e.stopPropagation(),
        "data-test": "DesignSystem-Grid-cellCheckbox"
      }, loading ? /*#__PURE__*/React.createElement(Placeholder, null) : /*#__PURE__*/React.createElement(Checkbox, {
        checked: !!data._selected,
        onChange: event => {
          onSelect(rI, event.target.checked);
        }
      }))
    );
  };
  const renderSchema = (currSchema, shouldRenderCheckbox, pinned) => {
    if (currSchema.length) {
      const classes = classNames({
        [gridStyles['Grid-cellGroup']]: true,
        [gridStyles['Grid-cellGroup--pinned']]: pinned,
        [gridStyles[`Grid-cellGroup--pinned-${pinned}`]]: pinned,
        [gridStyles['Grid-cellGroup--main']]: !pinned
      });
      return /*#__PURE__*/React.createElement("div", {
        className: classes,
        "data-test": "DesignSystem-Grid-cellGroup"
      }, renderCheckbox(shouldRenderCheckbox), currSchema.map((s, index) => {
        let cI = pinned === 'left' ? index : leftPinnedSchema.length + index;
        if (pinned === 'right') cI += unpinnedSchema.length;
        return /*#__PURE__*/React.createElement(Cell, {
          key: `${rI}-${cI}`,
          rowIndex: rI,
          colIndex: cI,
          firstCell: !index,
          schema: s,
          data: data,
          expandedState: [expanded, setExpanded],
          nestedRowData: nestedRowData
        });
      }));
    }
    return null;
  };
  const wrapperClasses = classNames(className, {
    [gridStyles['Grid-rowWrapper']]: true
  });
  return /*#__PURE__*/React.createElement("div", {
    className: wrapperClasses,
    "data-test": "DesignSystem-Grid-rowWrapper"
  }, /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-Grid-row",
    className: rowClasses,
    onClick: onClickHandler,
    ref: rowRef
  }, renderSchema(leftPinnedSchema, !!leftPinnedSchema.length, 'left'), renderSchema(unpinnedSchema, !leftPinnedSchema.length && !!unpinnedSchema.length), renderSchema(rightPinnedSchema, false, 'right')), nestedRows && expanded && /*#__PURE__*/React.createElement("div", {
    className: gridStyles['Grid-nestedRow']
  }, nestedRowData));
};
GridRow.defaultProps = {
  data: {}
};

const isElementInView = (container, element) => {
  const containerTop = container.offsetTop;
  const elementRect = element.getBoundingClientRect();
  const elementTop = elementRect.top;
  const elementHeight = elementRect.height;
  return elementHeight - (containerTop - elementTop) > 0;
};
const VirtualList = props => {
  const {
    buffer = 10,
    length = 200,
    offset: initialOffset = 0,
    minItemHeight,
    totalLength,
    renderItem,
    onScroll,
    ...rest
  } = props;
  const [offset, setOffset] = useState$3(initialOffset);
  const [avgRowHeight, setAvgRowHeight] = useState$3(minItemHeight);
  const [init, setInit] = useState$3(false);
  const listRef = useRef(null);
  const lastScrollTop = useRef(0);
  useEffect$2(() => {
    updateOffset(initialOffset);
  }, [initialOffset]);
  const updateOffset = useCallback(prevOffset => {
    const offsetDiff = prevOffset - offset;
    if (listRef.current) {
      const el = listRef.current;
      const items = el.querySelectorAll('.VS-item');
      let heightAdded = 0;
      let currOffset = prevOffset;
      const start = Math.min(offset, buffer);
      const end = start + offsetDiff;
      for (let i = Math.min(items.length, end) - 1; i >= start; i--) {
        const inView = isElementInView(el, items[i]);
        if (inView) {
          currOffset--;
          const rowHeight = items[i].clientHeight;
          heightAdded += rowHeight;
        } else {
          break;
        }
      }
      if (items.length < end) {
        const diff = end - items.length;
        heightAdded += diff * minItemHeight;
        currOffset -= diff;
      }
      const newAvgRowHeight = currOffset === 0 ? minItemHeight : (avgRowHeight * prevOffset - heightAdded) / currOffset;
      setOffset(currOffset);
      setAvgRowHeight(Math.max(minItemHeight, newAvgRowHeight));
    }
  }, [offset, buffer, avgRowHeight, minItemHeight]);
  const onScrollHandler = useCallback(event => {
    if (listRef.current) {
      const el = listRef.current;
      const {
        scrollTop
      } = el;
      const direction = Math.floor(scrollTop - lastScrollTop.current);
      if (direction === 0) return;
      const items = el.querySelectorAll('.VS-item');
      let newOffset = offset;
      let newAvgRowHeight = avgRowHeight;
      const start = Math.min(offset, buffer);

      // cursor scrolls down
      if (direction > 0) {
        if (offset < totalLength - length) {
          let heightAdded = 0;
          for (let i = start; i < items.length; i++) {
            const inView = isElementInView(el, items[i]);
            const rowHeight = items[i].clientHeight;
            if (!inView) {
              heightAdded += rowHeight;
              newOffset++;
            } else {
              break;
            }
          }
          if (heightAdded < direction) {
            const heightLeft = direction - heightAdded;
            const offsetToBeAdded = Math.floor(heightLeft / minItemHeight);
            newOffset += offsetToBeAdded;
            heightAdded += offsetToBeAdded * minItemHeight;
          }
          newAvgRowHeight = newOffset > 0 ? (offset * avgRowHeight + heightAdded) / newOffset : minItemHeight;
          setOffset(Math.min(newOffset, totalLength - length));
          setAvgRowHeight(Math.max(minItemHeight, newAvgRowHeight));
        }
      } else {
        const scrollDiff = items[start]?.getBoundingClientRect().y - el?.getBoundingClientRect().y;
        if (scrollDiff > 0) {
          const offsetDiff = Math.floor(scrollDiff / minItemHeight) || 1;
          const newOffset = offset - offsetDiff;
          if (newOffset < totalLength - (length + buffer)) {
            setOffset(Math.max(0, newOffset));
          }
        }
      }
      lastScrollTop.current = scrollTop;
      if (onScroll) onScroll(event, el);
    }
  }, [offset, avgRowHeight, buffer, length, minItemHeight, totalLength, onScroll]);
  const renderItems = (start, end) => {
    return Array.from({
      length: end - start + 1
    }, (_, index) => {
      const rowIndex = start + index;
      const component = renderItem(rowIndex);
      return /*#__PURE__*/React__default.cloneElement(component, {
        key: rowIndex,
        className: ['VS-item', component.props.className].join(' ').trim()
      });
    });
  };
  const start = Math.max(0, offset - buffer);
  const end = Math.min(offset + (length + buffer) - 1, totalLength - 1);
  const topPadding = Math.max(0, start * avgRowHeight);
  const bottomPadding = Math.max(0, (totalLength - end - 1) * avgRowHeight);
  return /*#__PURE__*/React__default.createElement("div", _extends$2({}, rest, {
    ref: el => {
      listRef.current = el;
      if (!init) setInit(true);
    },
    onScroll: onScrollHandler
  }), init && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("div", {
    style: {
      flexShrink: 0,
      height: topPadding
    }
  }), renderItems(start, end), /*#__PURE__*/React__default.createElement("div", {
    style: {
      flexShrink: 0,
      height: bottomPadding
    }
  })));
};

const GridBody = props => {
  const context$1 = React.useContext(context);
  const {
    data,
    ref,
    loading,
    withPagination,
    page,
    pageSize,
    totalRecords,
    size
  } = context$1;
  const listRef = React.useRef(null);
  const {
    schema,
    prevPageInfo,
    updatePrevPageInfo,
    onSelect,
    virtualRowOptions,
    infiniteScrollOptions,
    enableInfiniteScroll,
    onScroll,
    fetchDataOnScroll,
    enableRowVirtualization
  } = props;
  const {
    buffer,
    visibleRows
  } = virtualRowOptions;
  const [isLoadingMore, setIsLoadingMore] = React.useState(false);
  const [currentPage, setCurrentPage] = React.useState(2);
  const [hasMoreData, setHasMoreData] = React.useState(true);
  const [error, setError] = React.useState(false);
  const [retryDataFetch, setRetryDataFetch] = React.useState(false);
  const endReached = React.useRef(false);
  const {
    fetchRowsCount,
    fetchThreshold,
    fetchErrorRenderer,
    retryFetchRenderer
  } = infiniteScrollOptions;
  React.useEffect(() => {
    const gridBodyEl = ref.querySelector('.Grid-body');
    const gridHeadEl = ref.querySelector('.Grid-head');
    if (gridBodyEl && gridHeadEl) {
      window.requestAnimationFrame(() => {
        if (prevPageInfo.page === page) {
          gridBodyEl.scrollTop = prevPageInfo.scrollTop;
        }
        gridBodyEl.scrollLeft = gridHeadEl.scrollLeft;
      });
    }
    return () => {
      if (gridBodyEl) {
        updatePrevPageInfo({
          page,
          scrollTop: gridBodyEl.scrollTop
        });
      }
    };
  }, []);
  const totalPages = Math.ceil(totalRecords / pageSize);
  const isLastPage = withPagination && page === totalPages;
  const dataLength = isLastPage ? totalRecords - (page - 1) * pageSize : loading ? pageSize : withPagination ? Math.min(totalRecords, pageSize) : totalRecords;
  const renderRow = React.useCallback((rowIndex, item) => {
    return /*#__PURE__*/React.createElement(GridRow, {
      key: rowIndex,
      rowIndex: rowIndex,
      data: !item ? data[rowIndex] : item,
      schema: schema,
      onSelect: onSelect
    });
  }, [data, schema, onSelect]);
  const minRowHeight = {
    comfortable: 40,
    standard: 40,
    compressed: 32,
    tight: 24
  };
  const getArrayList = () => {
    if (loading && !data.length) {
      return [...Array(dataLength).map(x => x)];
    }
    return data;
  };
  const fetchNextRows = React.useCallback(async () => {
    const {
      fetchRowsCount
    } = infiniteScrollOptions || {};
    if (fetchDataOnScroll && !isLoadingMore && hasMoreData && !error) {
      setIsLoadingMore(true);
      try {
        const dataList = await fetchDataOnScroll?.({
          page: currentPage + 1,
          rowsCount: fetchRowsCount
        });
        if (dataList?.length === 0) {
          setHasMoreData(false);
        }
        setCurrentPage(prevPage => prevPage + 1);
        setError(false);
      } catch (error) {
        setError(true);
      } finally {
        setIsLoadingMore(false);
      }
    }
  }, [isLoadingMore, hasMoreData, currentPage, fetchRowsCount, error]);
  const thresholdMapper = {
    early: 0.5,
    balanced: 0.75,
    lazy: 0.9,
    'at-end': 0
  };
  const onScrollHandler = (event, listRef) => {
    if (enableInfiniteScroll && infiniteScrollOptions && !withPagination) {
      const {
        fetchThreshold
      } = infiniteScrollOptions;
      const {
        scrollTop,
        scrollHeight,
        clientHeight
      } = listRef;
      const hasEndReached = fetchThreshold === 'at-end' && scrollTop + clientHeight >= scrollHeight;
      const hasThresholdReached = fetchThreshold !== 'at-end' && scrollTop + clientHeight >= scrollHeight * thresholdMapper[fetchThreshold];

      // Check if user has scrolled to the threshold
      if (hasEndReached || hasThresholdReached) {
        if (!endReached.current) {
          endReached.current = true;
          fetchNextRows();
        }
      } else if (!hasEndReached && !hasThresholdReached) {
        endReached.current = false;
      }
    }
    if (onScroll) {
      onScroll(event);
    }
  };
  const memoizedVirtualScroll = React.useMemo(() => /*#__PURE__*/React.createElement(VirtualList, {
    buffer: buffer,
    className: gridStyles['Grid-body'],
    length: visibleRows,
    minItemHeight: minRowHeight[size],
    totalLength: dataLength,
    renderItem: renderRow,
    onScroll: onScrollHandler
  }), [dataLength, renderRow, minRowHeight, size]);
  const handleOnScroll = event => {
    if (!enableRowVirtualization) {
      onScrollHandler(event.nativeEvent, listRef.current);
    }
  };
  const retryRowsFetch = async () => {
    setError(false);
    setRetryDataFetch(true);
    setIsLoadingMore(true);
    try {
      const dataList = await fetchDataOnScroll?.({
        page: currentPage + 1,
        rowsCount: fetchRowsCount
      });
      if (dataList?.length === 0) {
        setHasMoreData(false);
      }
      setCurrentPage(prevPage => prevPage + 1);
      setError(false);
    } catch (error) {
      setError(true);
    } finally {
      setIsLoadingMore(false);
      setRetryDataFetch(false);
    }
  };
  const errorTemplate = () => {
    if (fetchErrorRenderer) {
      return fetchErrorRenderer(retryRowsFetch);
    }
    return /*#__PURE__*/React.createElement("div", {
      className: "d-flex justify-content-center align-items-center my-5"
    }, /*#__PURE__*/React.createElement(Text, {
      appearance: "subtle"
    }, "Failed to load data. Please try again."), /*#__PURE__*/React.createElement(Button, {
      size: "tiny",
      icon: "refresh",
      onClick: retryRowsFetch,
      className: "ml-6"
    }, "Try again"));
  };
  const retryFetchTemplate = () => {
    if (retryFetchRenderer) {
      return retryFetchRenderer();
    }
    return /*#__PURE__*/React.createElement("div", {
      className: "d-flex justify-content-center align-items-center my-5"
    }, /*#__PURE__*/React.createElement(Text, {
      appearance: "subtle"
    }, "Loading data, please wait..."), /*#__PURE__*/React.createElement(Button, {
      size: "tiny",
      icon: "refresh",
      disabled: isLoadingMore,
      className: "ml-6"
    }, "Try again"));
  };
  return /*#__PURE__*/React.createElement("div", {
    className: gridStyles['Grid-body'],
    onScroll: event => handleOnScroll(event),
    ref: listRef
  }, enableRowVirtualization ? memoizedVirtualScroll : getArrayList().map((item, i) => {
    return renderRow(i, item);
  }), error && errorTemplate(), retryDataFetch && retryFetchTemplate(), isLoadingMore && /*#__PURE__*/React.createElement(ProgressBar, {
    state: "indeterminate",
    className: "position-absolute bottom-0",
    size: "small"
  }));
};

class Grid extends React.Component {
  constructor(props) {
    super(props);
    _defineProperty$1(this, "gridRef", null);
    _defineProperty$1(this, "isHeadSyncing", false);
    _defineProperty$1(this, "isBodySyncing", false);
    _defineProperty$1(this, "syncScroll", type => () => {
      const gridHeadEl = this.gridRef.querySelector(`.${gridStyles['Grid-head']}`);
      const gridBodyEl = this.gridRef.querySelector(`.${gridStyles['Grid-body']}`);
      this.adjustPaddingRight();
      if (type === 'head') {
        if (!this.isBodySyncing) {
          this.isHeadSyncing = true;
          gridBodyEl.scrollLeft = gridHeadEl.scrollLeft;
        }
      } else if (type === 'body') {
        if (!this.isHeadSyncing) {
          this.isBodySyncing = true;
          gridHeadEl.scrollLeft = gridBodyEl.scrollLeft;
        }
      }
      setTimeout(() => {
        this.isHeadSyncing = false;
        this.isBodySyncing = false;
      }, 0);
    });
    _defineProperty$1(this, "updateRenderedSchema", newSchema => {
      const {
        updateSchema
      } = this.props;
      if (updateSchema) {
        updateSchema(newSchema);
      }
    });
    _defineProperty$1(this, "updateColumnSchema", (name, schemaUpdate) => {
      const {
        schema
      } = this.props;
      const newSchema = [...schema];
      const ind = newSchema.findIndex(s => s.name === name);
      newSchema[ind] = {
        ...newSchema[ind],
        ...schemaUpdate
      };
      this.updateRenderedSchema(newSchema);
    });
    _defineProperty$1(this, "reorderColumn", (from, to) => {
      const {
        schema
      } = this.props;
      const fromInd = schema.findIndex(s => s.name === from);
      const toInd = schema.findIndex(s => s.name === to);
      const newSchema = moveToIndex(schema, fromInd, toInd);
      this.updateRenderedSchema(newSchema);
    });
    _defineProperty$1(this, "updateSortingList", sortingList => {
      const {
        updateSortingList
      } = this.props;
      if (updateSortingList) {
        updateSortingList(sortingList);
      }
    });
    _defineProperty$1(this, "updateFilterList", filterList => {
      const {
        updateFilterList
      } = this.props;
      if (updateFilterList) {
        updateFilterList(filterList);
      }
    });
    _defineProperty$1(this, "onMenuChange", (name, selected) => {
      const {
        sortingList
      } = this.props;
      switch (selected) {
        case 'sortAsc':
          sortColumn({
            sortingList,
            updateSortingList: this.updateSortingList
          }, name, 'asc');
          break;
        case 'sortDesc':
          sortColumn({
            sortingList,
            updateSortingList: this.updateSortingList
          }, name, 'desc');
          break;
        case 'unsort':
          sortColumn({
            sortingList,
            updateSortingList: this.updateSortingList
          }, name, 'unsort');
          break;
        case 'pinLeft':
          pinColumn({
            updateColumnSchema: this.updateColumnSchema
          }, name, 'left');
          break;
        case 'pinRight':
          pinColumn({
            updateColumnSchema: this.updateColumnSchema
          }, name, 'right');
          break;
        case 'unpin':
          pinColumn({
            updateColumnSchema: this.updateColumnSchema
          }, name, 'unpin');
          break;
        case 'hide':
          hideColumn({
            updateColumnSchema: this.updateColumnSchema
          }, name, true);
          break;
      }
    });
    _defineProperty$1(this, "onFilterChange", (name, selected) => {
      const {
        filterList
      } = this.props;
      const newFilterList = {
        ...filterList,
        [name]: selected
      };
      this.updateFilterList(newFilterList);
    });
    _defineProperty$1(this, "onSelect", (rowIndex, selected) => {
      const {
        onSelect
      } = this.props;
      if (onSelect) {
        onSelect(rowIndex, selected);
      }
    });
    _defineProperty$1(this, "onSelectAll", event => {
      const {
        onSelectAll
      } = this.props;
      if (onSelectAll) {
        onSelectAll(event.target.checked, undefined, true);
      }
    });
    _defineProperty$1(this, "updatePrevPageInfo", value => {
      this.setState({
        prevPageInfo: value
      });
    });
    const pageInfo = {
      page: 1,
      scrollTop: 0
    };
    this.state = {
      init: false,
      prevPageInfo: pageInfo
    };
  }
  componentDidMount() {
    this.setState({
      init: true
    });
    window.addEventListener('resize', this.forceRerender.bind(this));
  }
  forceRerender() {
    this.forceUpdate();
  }
  componentWillUnmount() {
    this.removeScrollListeners();
    window.removeEventListener('resize', this.forceRerender.bind(this));
  }
  componentDidUpdate(prevProps, prevState) {
    if (prevState.init !== this.state.init) {
      this.addScrollListeners();
    }
    if (prevProps.page !== this.props.page || prevProps.error !== this.props.error) {
      this.removeScrollListeners();
      this.addScrollListeners();
    }
  }
  addScrollListeners() {
    const gridHeadEl = this.gridRef.querySelector(`.${gridStyles['Grid-head']}`);
    const gridBodyEl = this.gridRef.querySelector(`.${gridStyles['Grid-body']}`);
    if (gridHeadEl && gridBodyEl) {
      gridHeadEl.addEventListener('scroll', this.syncScroll('head'));
      gridBodyEl.addEventListener('scroll', this.syncScroll('body'));
    }
  }
  removeScrollListeners() {
    const gridHeadEl = this.gridRef.querySelector(`.${gridStyles['Grid-head']}`);
    const gridBodyEl = this.gridRef.querySelector(`.${gridStyles['Grid-body']}`);
    if (gridHeadEl && gridBodyEl) {
      gridHeadEl.removeEventListener('scroll', this.syncScroll('head'));
      gridBodyEl.removeEventListener('scroll', this.syncScroll('body'));
    }
  }
  adjustPaddingRight() {
    const gridHeadEl = this.gridRef.querySelector(`.${gridStyles['Grid-head']}`);
    const gridBodyEl = this.gridRef.querySelector(`.${gridStyles['Grid-body']}`);
    if (gridHeadEl && gridBodyEl) {
      const hasVerticalScrollbar = gridBodyEl.scrollHeight > gridBodyEl.clientHeight;
      const scrollbarWidth = gridBodyEl.offsetWidth - gridBodyEl.clientWidth;
      gridHeadEl.style.paddingRight = hasVerticalScrollbar ? `${scrollbarWidth}px` : '0px';
    }
  }
  render() {
    const baseProps = extractBaseProps(this.props);
    const {
      init,
      prevPageInfo
    } = this.state;
    const {
      type,
      size,
      showHead,
      className,
      page,
      loading,
      loaderSchema,
      virtualRowOptions,
      infiniteScrollOptions,
      enableInfiniteScroll,
      enableRowVirtualization,
      onScroll,
      fetchDataOnScroll,
      error,
      errorTemplate
    } = this.props;
    const schema = getSchema(this.props.schema, loading, loaderSchema);
    const classes = classNames({
      [gridStyles.Grid]: 'true',
      [gridStyles[`Grid--${type}`]]: type,
      [gridStyles[`Grid--${size}`]]: size
    }, className);
    return /*#__PURE__*/React.createElement("div", _extends$2({
      "data-test": "DesignSystem-Grid"
    }, baseProps, {
      className: classes,
      ref: el => {
        this.gridRef = el;
      }
    }), init && /*#__PURE__*/React.createElement(GridProvider, {
      value: {
        ...this.props,
        ref: this.gridRef
      }
    }, showHead && /*#__PURE__*/React.createElement(GridHead, {
      schema: schema,
      onSelectAll: this.onSelectAll?.bind(this),
      onMenuChange: this.onMenuChange.bind(this),
      onFilterChange: this.onFilterChange.bind(this),
      updateColumnSchema: this.updateColumnSchema.bind(this),
      reorderColumn: this.reorderColumn.bind(this)
    }), !loading && error ? errorTemplate && (typeof errorTemplate === 'function' ? errorTemplate({}) : errorTemplate) : /*#__PURE__*/React.createElement(GridBody, {
      key: `${page}`,
      schema: schema,
      prevPageInfo: prevPageInfo,
      updatePrevPageInfo: this.updatePrevPageInfo.bind(this),
      onSelect: this.onSelect.bind(this),
      enableRowVirtualization: enableRowVirtualization,
      virtualRowOptions: virtualRowOptions,
      infiniteScrollOptions: infiniteScrollOptions,
      enableInfiniteScroll: enableInfiniteScroll,
      onScroll: onScroll,
      fetchDataOnScroll: fetchDataOnScroll
    })));
  }
}
_defineProperty$1(Grid, "defaultProps", void 0);
Grid.defaultProps = defaultProps$1;

// export interface ImageProps {
//   src: string;
//   size?: number;
// }

// export interface StatusProps extends PartialCellProps {
//   appearanceMapper?: GridProps['statusMapper'];
// }

// export const Image = (props: ImageProps) => {
//   const {
//     src,
//     size
//   } = props;

//   const style = {
//     height: `${size}px`,
//     width: `${size}px`,
//   };

//   return (
//     <img className="Image" src={src} style={style} />
//   );
// };

// const ImageCell = (props: PartialCellProps) => {
//   const {
//     schema,
//     loading
//   } = props;

//   const src = schema.image;
//   const size = 32;

//   if (loading) {
//     return (
//       <Placeholder imageSize={'medium'} round={true} />
//     );
//   }

//   return (
//     <Image
//       src={src || ''}
//       size={size}
//     />
//   );
// };

const renderTitle = props => {
  const {
    tooltip,
    cellData
  } = props;
  const children = cellData.title;
  if (children !== undefined && children !== null) {
    if (tooltip) {
      return /*#__PURE__*/React.createElement(Tooltip, {
        tooltip: children,
        position: 'top-start',
        triggerClass: "w-100 overflow-hidden"
      }, /*#__PURE__*/React.createElement(Text, {
        className: "w-100 ellipsis"
      }, children));
    }
    return /*#__PURE__*/React.createElement(Text, {
      className: "w-100 ellipsis"
    }, children);
  }
  return null;
};
const renderMetaList = props => {
  const {
    cellData
  } = props;
  const {
    metaList
  } = cellData;
  if (metaList) {
    return /*#__PURE__*/React.createElement("div", {
      className: gridStyles['GridCell-metaList'],
      "data-test": "DesignSystem-GridCell-metaList"
    }, metaList.map((list, index) => /*#__PURE__*/React.createElement(Text, {
      key: index,
      className: "ellipsis d-flex align-items-center",
      appearance: 'subtle',
      size: "small"
    }, list)));
  }
  return null;
};
const renderAvatar = props => {
  const {
    cellData
  } = props;
  const {
    firstName,
    lastName,
    title
  } = cellData;
  if (firstName || lastName) {
    return /*#__PURE__*/React.createElement(Avatar, {
      className: "m-0 mr-5",
      firstName: firstName,
      lastName: lastName
    });
  }
  if (title) {
    return /*#__PURE__*/React.createElement(Avatar, {
      className: "m-0 mr-5"
    }, title);
  }
  return null;
};
const renderIcon = props => {
  const {
    cellData
  } = props;
  const {
    title,
    icon
  } = cellData;
  const iconName = icon || title;
  if (iconName) {
    return /*#__PURE__*/React.createElement(Icon, {
      name: iconName
    });
  }
  return null;
};
const renderStatusHint = props => {
  const {
    cellData
  } = props;
  const {
    statusAppearance
  } = cellData;
  const children = cellData.title;
  if (children) {
    return /*#__PURE__*/React.createElement(StatusHint, {
      appearance: statusAppearance,
      className: "overflow-hidden"
    }, children);
  }
  return null;
};
const GridCell = props => {
  const {
    size,
    schema,
    // rowIndex,
    loading
  } = props;
  const data = !loading ? translateData(schema, props.data) : {};
  const {
    name,
    cellType = 'DEFAULT',
    align = 'left',
    tooltip
  } = schema;
  const cellData = data[name];
  const cellClass = classNames({
    [gridStyles['GridCell']]: true
  });
  const defaultCellClass = classNames({
    [gridStyles[`GridCell--align-${align}`]]: true,
    [gridStyles['GridCell--default']]: true
  }, cellClass);
  const metaListClass = classNames({
    [gridStyles['GridCell--metaList']]: true
  }, cellClass);
  const avatarCellClass = classNames({
    [gridStyles['GridCell--avatar']]: true,
    [gridStyles[`GridCell--align-${align}`]]: true
  }, cellClass);
  const avatarWithTextCellClass = classNames({
    [gridStyles['GridCell--avatarWithText']]: true
  }, cellClass);
  const iconCellClass = classNames({
    [gridStyles['GridCell--icon']]: true,
    [gridStyles[`GridCell--align-${align}`]]: true
  }, cellClass);
  const statusHintCellClass = classNames({
    [gridStyles['GridCell--statusHint']]: true,
    [gridStyles[`GridCell--align-${align}`]]: true
  }, cellClass);
  switch (cellType) {
    case 'DEFAULT':
      return /*#__PURE__*/React.createElement("div", {
        className: defaultCellClass
      }, loading ? /*#__PURE__*/React.createElement(PlaceholderParagraph, {
        length: "medium",
        "data-test": "DesignSystem-GridCell-placeHolder"
      }) : renderTitle({
        tooltip,
        cellData
      }));
    case 'WITH_META_LIST':
      return /*#__PURE__*/React.createElement("div", {
        className: metaListClass
      }, loading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PlaceholderParagraph, {
        length: "medium",
        "data-test": "DesignSystem-GridCell-withMetaList"
      }), /*#__PURE__*/React.createElement(PlaceholderParagraph, {
        length: "large",
        size: "xxs"
      })) : /*#__PURE__*/React.createElement(React.Fragment, null, renderTitle({
        tooltip,
        cellData
      }), renderMetaList({
        cellData
      })));
    case 'AVATAR':
      if (loading) {
        return /*#__PURE__*/React.createElement(Placeholder, {
          className: gridStyles[`GridCell--align-${align}`],
          imageSize: 'medium',
          round: true
        });
      }
      return /*#__PURE__*/React.createElement("div", {
        className: avatarCellClass,
        "data-test": "DesignSystem-GridCell-avatar"
      }, size !== 'tight' && renderAvatar({
        cellData
      }));
    case 'AVATAR_WITH_TEXT':
      if (loading) {
        return /*#__PURE__*/React.createElement(Placeholder, {
          imageSize: 'medium',
          round: true
        }, /*#__PURE__*/React.createElement(PlaceholderParagraph, {
          className: "ml-3",
          length: "medium"
        }));
      }
      return /*#__PURE__*/React.createElement("div", {
        className: `${cellClass}   `,
        "data-test": "DesignSystem-GridCell-avatarWithText"
      }, size !== 'tight' && renderAvatar({
        cellData
      }), renderTitle({
        tooltip,
        cellData
      }));
    case 'AVATAR_WITH_META_LIST':
      if (loading) {
        return /*#__PURE__*/React.createElement(Placeholder, {
          imageSize: 'medium',
          round: true
        }, /*#__PURE__*/React.createElement(PlaceholderParagraph, {
          className: "ml-3",
          length: "medium"
        }), /*#__PURE__*/React.createElement(PlaceholderParagraph, {
          className: "ml-3",
          length: "large"
        }));
      }
      return /*#__PURE__*/React.createElement("div", {
        className: avatarWithTextCellClass,
        "data-test": "DesignSystem-GridCell-avatarWithMetaList"
      }, size !== 'tight' && renderAvatar({
        cellData
      }), /*#__PURE__*/React.createElement("div", {
        className: gridStyles['GridCell-metaListWrapper']
      }, renderTitle({
        tooltip,
        cellData
      }), renderMetaList({
        cellData
      })));
    case 'ICON':
      if (loading) {
        return /*#__PURE__*/React.createElement(Placeholder, {
          className: gridStyles[`GridCell--align-${align}`],
          imageSize: 'small',
          round: true
        });
      }
      return /*#__PURE__*/React.createElement("div", {
        className: iconCellClass,
        "data-test": "DesignSystem-GridCell-icon"
      }, renderIcon({
        cellData
      }));
    case 'STATUS_HINT':
      return /*#__PURE__*/React.createElement("div", {
        className: statusHintCellClass
      }, loading ? /*#__PURE__*/React.createElement(Placeholder, {
        className: "w-75 flex-grow-0",
        imageSize: 'small',
        round: true
      }, /*#__PURE__*/React.createElement(PlaceholderParagraph, {
        length: "large"
      })) : renderStatusHint({
        cellData
      }));
  }
  return null;
};
GridCell.displayName = 'GridCell';

const DraggableDropdown = props => {
  const {
    options,
    onChange
  } = props;
  const [open, setOpen] = React.useState(false);
  const [tempOptions, setTempOptions] = React.useState(options);
  const [triggerWidth, setTriggerWidth] = React.useState('var(--spacing-440)');
  React.useEffect(() => {
    setTempOptions(options);
  }, [open]);
  const handleParentChange = e => {
    setTempOptions(tempOptions.map(option => ({
      ...option,
      selected: e.target.checked
    })));
  };
  const handleChildChange = (e, index) => {
    const newOptions = [...tempOptions];
    newOptions[index] = {
      ...newOptions[index],
      selected: e.target.checked
    };
    setTempOptions(newOptions);
  };
  const onToggleHandler = newOpen => {
    setOpen(newOpen);
  };
  const onCancelHandler = () => {
    setOpen(false);
  };
  const onApplyHandler = () => {
    setOpen(false);
    if (onChange) onChange(tempOptions);
  };
  return /*#__PURE__*/React.createElement("div", {
    className: dropdownStyles['Dropdown']
  }, /*#__PURE__*/React.createElement(Popover, {
    open: open,
    onToggle: onToggleHandler,
    trigger: /*#__PURE__*/React.createElement(Button, {
      type: "button",
      ref: el => {
        setTriggerWidth(`${el?.clientWidth}px`);
      },
      size: "tiny",
      appearance: "transparent",
      icon: "keyboard_arrow_down_filled",
      iconAlign: "right"
    }, `Showing ${options.filter(option => option.selected).length} of ${options.length} column${getPluralSuffix(options.length)}`),
    triggerClass: "w-100",
    customStyle: {
      width: triggerWidth
    },
    className: gridStyles['Header-draggableDropdown']
  }, /*#__PURE__*/React.createElement("div", {
    className: gridStyles['Dropdown-wrapper']
  }, /*#__PURE__*/React.createElement("div", {
    className: "OptionWrapper"
  }, /*#__PURE__*/React.createElement(Checkbox, {
    className: dropdownStyles['OptionCheckbox'],
    label: "Select All",
    checked: tempOptions.every(option => option.selected),
    indeterminate: tempOptions.some(option => option.selected) && tempOptions.some(option => !option.selected),
    onChange: handleParentChange
  })), tempOptions.map((option, index) => {
    return /*#__PURE__*/React.createElement("div", {
      "data-test": "DesignSystem-Table-Header--draggableDropdownOption",
      key: option.value,
      className: "OptionWrapper d-flex flex-space-between align-items-center cursor-pointer",
      draggable: true,
      onDragStart: e => {
        e.dataTransfer.setData('index', `${index}`);
      },
      onDragOver: e => e.preventDefault(),
      onDrop: e => {
        const from = +e.dataTransfer.getData('index');
        const to = index;
        if (from !== to) setTempOptions(moveToIndex(tempOptions, from, to));
      }
    }, /*#__PURE__*/React.createElement(Checkbox, {
      className: dropdownStyles['OptionCheckbox'],
      name: option.value,
      label: option.label,
      checked: tempOptions[index].selected,
      onChange: e => handleChildChange(e, index)
    }), /*#__PURE__*/React.createElement(Icon, {
      name: "drag_handle",
      className: "mr-4"
    }));
  })), /*#__PURE__*/React.createElement("div", {
    className: dropdownStyles['Dropdown-buttonWrapper']
  }, /*#__PURE__*/React.createElement(Button, {
    type: "button",
    className: "mr-4",
    size: "tiny",
    onClick: onCancelHandler
  }, "Cancel"), /*#__PURE__*/React.createElement(Button, {
    type: "button",
    appearance: "primary",
    size: "tiny",
    onClick: onApplyHandler
  }, "Apply"))));
};

var css_248z$j = ".table-module-Table--qR8j-5-0-0-9 {\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  z-index: 1;\n}\n\n.table-module-Table-grid-4jCRZ-5-0-0-9 {\n  height: 100%;\n  overflow: hidden;\n  z-index: 1;\n}\n\n.table-module-Table-pagination-8llhn-5-0-0-9 {\n  display: flex;\n  justify-content: center;\n  background: var(--white);\n  padding: var(--spacing-20) 0;\n  border-top: var(--border);\n}\n\n.table-module-Table-Header--Divider--qPHO-5-0-0-9 {\n  height: var(--spacing-60);\n}\n\n.table-module-Table-Header-Label--hide-z7HVq-5-0-0-9 {\n  animation: table-module-fadeOut-9yrts-5-0-0-9 var(--duration--fast-02) var(--exit-productive-curve);\n  animation-fill-mode: forwards;\n}\n\n.table-module-Table-Header-Label--show-bh0tC-5-0-0-9 {\n  animation: table-module-fadeIn-YCXL6-5-0-0-9 var(--duration--moderate-01) var(--entrance-productive-curve);\n  animation-fill-mode: forwards;\n}\n";
var tableStyles = {"Table":"table-module-Table--qR8j-5-0-0-9","Table-grid":"table-module-Table-grid-4jCRZ-5-0-0-9","Table-pagination":"table-module-Table-pagination-8llhn-5-0-0-9","Table-Header--Divider":"table-module-Table-Header--Divider--qPHO-5-0-0-9","Table-Header-Label--hide":"table-module-Table-Header-Label--hide-z7HVq-5-0-0-9","Table-Header-Label--show":"table-module-Table-Header-Label--show-bh0tC-5-0-0-9"};
styleInject(css_248z$j);

const Header = props => {
  const {
    loading,
    error,
    data,
    displayData,
    schema,
    withSearch,
    showHead,
    withPagination,
    page,
    pageSize,
    withCheckbox,
    children,
    // updateData,
    updateSchema,
    filterList = {},
    updateFilterList,
    totalRecords = 0,
    onSelectAll,
    searchPlaceholder,
    selectAll,
    searchTerm,
    updateSearchTerm,
    globalActionRenderer,
    dynamicColumn,
    allowSelectAll,
    showFilters,
    customSelectionLabel,
    selectedRowsRef,
    selectedAllRef,
    onClearSelection,
    onSelectAllRows,
    selectionActionRenderer,
    uniqueColumnName,
    totalRowsCount,
    enableInfiniteScroll
  } = props;
  const [selectAllRecords, setSelectAllRecords] = React.useState(false);
  const [flag, setFlag] = React.useState(true);
  const customLabel = customSelectionLabel ? customSelectionLabel : 'item';
  const selectedCount = data.filter(d => d._selected).length;
  const startIndex = (page - 1) * pageSize + 1;
  const endIndex = Math.min(page * pageSize, totalRecords);
  const selectedRowsCount = selectedAllRef?.current === true ? totalRecords : selectedRowsRef?.current?.length || 0;
  const showSelectedRowLabel = withCheckbox && (selectedCount || selectedRowsCount > 0);
  const [showSelectedLabel, setShowSelectedLabel] = React.useState(true);
  const [animateSelectedLabel, setAnimateSelectedLabel] = React.useState(false);
  const [animateUnSelectedLabel, setAnimateUnSelectedLabel] = React.useState(false);
  React.useEffect(() => {
    if (showSelectedRowLabel) {
      setAnimateUnSelectedLabel(true);
      setAnimateSelectedLabel(false);
    } else {
      setAnimateUnSelectedLabel(false);
      setAnimateSelectedLabel(true);
    }
  }, [showSelectedRowLabel]);
  const onUnSelectAnimationEnd = () => {
    showSelectedRowLabel ? setShowSelectedLabel(true) : setShowSelectedLabel(false);
    setAnimateSelectedLabel(true);
    setAnimateUnSelectedLabel(false);
  };
  const onSelectAnimationEnd = () => {
    showSelectedRowLabel ? setShowSelectedLabel(true) : setShowSelectedLabel(false);
    setAnimateSelectedLabel(false);
    setAnimateUnSelectedLabel(true);
  };
  const unselectedRowLabelClass = classNames({
    [tableStyles['Table-Header-Label--hide']]: animateUnSelectedLabel && showSelectedRowLabel,
    [tableStyles['Table-Header-Label--show']]: animateUnSelectedLabel && !showSelectedRowLabel
  });
  const selectedRowLabelClass = classNames({
    [tableStyles['Table-Header-Label--hide']]: animateSelectedLabel && !showSelectedRowLabel,
    [tableStyles['Table-Header-Label--show']]: animateSelectedLabel && showSelectedRowLabel
  });
  React.useEffect(() => {
    setFlag(!flag);
  }, [schema]);
  React.useEffect(() => {
    if (selectAll && selectAll.checked) {
      if (onSelectAll) onSelectAll(true, selectAllRecords);
    }
  }, [selectAllRecords]);
  React.useEffect(() => {
    if (selectAll && !selectAll.checked) setSelectAllRecords(false);
  }, [selectAll]);
  const filterSchema = schema.filter(s => s.filters);
  const onSearchChange = e => {
    const value = e.target.value;
    if (updateSearchTerm) {
      updateSearchTerm(value);
    }
  };
  const onFilterChange = (name, filters) => {
    const newFilterList = {
      ...filterList,
      [name]: filters
    };
    if (updateFilterList) {
      updateFilterList(newFilterList);
    }
  };
  const columnOptions = schema.map(s => ({
    label: s.displayName,
    value: s.name,
    selected: !s.hidden
  }));
  const onDynamicColumnUpdate = options => {
    const newSchema = options.map(option => ({
      ...schema.find(colSchema => colSchema.name === option.value),
      hidden: !option.selected
      /* tslint:disable:no-object-literal-type-assertion */
    }));
    /* tslint:enable:no-object-literal-type-assertion */

    if (updateSchema) updateSchema(newSchema);
  };
  const getUnSelectedRowLabel = () => {
    if (error) {
      return `Showing 0 ${customLabel}s`;
    } else if (withPagination) {
      return `Showing ${startIndex}-${endIndex} of ${totalRecords} ${customLabel}${getPluralSuffix(totalRecords)}`;
    } else if (enableInfiniteScroll && totalRowsCount) {
      return `Showing ${totalRecords} of ${totalRowsCount} ${customLabel}${getPluralSuffix(totalRecords)}`; // here
    }
    return `Showing ${totalRecords} ${customLabel}${getPluralSuffix(totalRecords)}`; // here
  };
  const getSelectedRowLabel = () => {
    if (selectedRowsCount > 0 && uniqueColumnName && withCheckbox) {
      return `Selected ${selectedRowsCount} ${customLabel}${getPluralSuffix(selectedRowsCount)}`;
    } else if (selectedCount && !uniqueColumnName && withCheckbox) {
      return `Selected ${selectedCount} ${customLabel}${getPluralSuffix(selectedCount)}`;
    } else if (withPagination) {
      return `Showing ${startIndex}-${endIndex} of ${totalRecords} ${customLabel}${getPluralSuffix(totalRecords)}`;
    }
    return `Showing ${totalRecords} ${customLabel}${getPluralSuffix(totalRecords)}`;
  };
  const headerClasses = classNames(gridStyles['Header-content'], gridStyles['Header-content--bottom']);
  const tableDividerClasses = classNames(tableStyles['Table-Header--Divider'], 'mx-4');
  return /*#__PURE__*/React.createElement("div", {
    className: gridStyles['Header']
  }, /*#__PURE__*/React.createElement("div", {
    className: gridStyles['Header-content']
  }, /*#__PURE__*/React.createElement("div", {
    className: "d-flex w-100"
  }, withSearch && /*#__PURE__*/React.createElement("div", {
    className: gridStyles['Header-search']
  }, /*#__PURE__*/React.createElement(Input, {
    "data-test": "DesignSystem-Table-Header--withSearch",
    name: "GridHeader-search",
    icon: "search",
    placeholder: searchPlaceholder,
    onChange: onSearchChange,
    value: searchTerm,
    onClear: () => updateSearchTerm && updateSearchTerm(''),
    disabled: loading && !hasSchema(schema),
    autoComplete: "off"
  })), showFilters && filterSchema.length > 0 && /*#__PURE__*/React.createElement("div", {
    className: gridStyles['Header-dropdown']
  }, /*#__PURE__*/React.createElement("div", {
    className: gridStyles['Header-filters']
  }, filterSchema.map(s => {
    const {
      name,
      displayName,
      filters
    } = s;
    const filterOptions = filters ? filters.map(f => ({
      ...f,
      selected: filterList[name] && filterList[name].findIndex(fl => fl === f.value) !== -1
    })) : [];
    return /*#__PURE__*/React.createElement(Dropdown, {
      key: name,
      withCheckbox: true,
      className: "my-0 mx-3",
      showApplyButton: true,
      inlineLabel: displayName,
      icon: 'filter_list',
      options: filterOptions,
      onChange: selected => onFilterChange(name, selected)
    });
  }))), children && /*#__PURE__*/React.createElement("div", {
    className: gridStyles['Header-actions']
  }, children)), globalActionRenderer && /*#__PURE__*/React.createElement("div", {
    className: gridStyles['Header-global-actions']
  }, globalActionRenderer(displayData))), /*#__PURE__*/React.createElement("div", {
    className: headerClasses
  }, /*#__PURE__*/React.createElement("div", {
    className: gridStyles['Header-label']
  }, !showHead && withCheckbox && !loading && /*#__PURE__*/React.createElement(Checkbox, _extends$2({
    className: "mr-4"
  }, selectAll, {
    onChange: event => {
      if (onSelectAll) onSelectAll(event.target.checked);
    }
  })), /*#__PURE__*/React.createElement(React.Fragment, null, showSelectedLabel ? /*#__PURE__*/React.createElement("span", {
    className: selectedRowLabelClass,
    onAnimationEnd: onSelectAnimationEnd
  }, /*#__PURE__*/React.createElement(Label, null, getSelectedRowLabel())) : /*#__PURE__*/React.createElement("span", {
    className: unselectedRowLabelClass,
    onAnimationEnd: onUnSelectAnimationEnd
  }, /*#__PURE__*/React.createElement(Label, null, getUnSelectedRowLabel())), selectedRowsCount > 0 && allowSelectAll && showSelectedLabel && /*#__PURE__*/React.createElement("div", {
    className: selectedRowLabelClass
  }, /*#__PURE__*/React.createElement("div", {
    className: "ml-4 d-flex"
  }, /*#__PURE__*/React.createElement(Button, {
    "data-test": "DesignSystem-Table-Header--selectAllItemsButton",
    size: "tiny",
    disabled: selectedRowsCount === totalRecords,
    onClick: onSelectAllRows
  }, `Select ${totalRecords} ${customLabel}s`), /*#__PURE__*/React.createElement(Button, {
    "data-test": "DesignSystem-Table-Header--clearSelectionItemsButton",
    size: "tiny",
    className: "ml-4",
    onClick: onClearSelection
  }, "Clear selection"), selectionActionRenderer && /*#__PURE__*/React.createElement(Divider, {
    vertical: true,
    className: tableDividerClasses
  }))), selectionActionRenderer && selectedRowsCount > 0 && showSelectedLabel && /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-Table-Header--ActionRenderer",
    className: selectedRowLabelClass
  }, selectionActionRenderer(selectedRowsRef?.current, selectedAllRef?.current)))), dynamicColumn && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(DraggableDropdown, {
    options: columnOptions,
    onChange: onDynamicColumnUpdate
  }))));
};
Header.defaultProps = {
  schema: [],
  data: [],
  searchPlaceholder: 'Search',
  dynamicColumn: true,
  showFilters: true
};

const isElementPresent = (list, uniqueColumnName, value) => {
  const arr = list?.filter(item => item[uniqueColumnName] === value);
  return arr.length > 0;
};
const getUpdatedData = (data, selectedList, uniqueColumnName, isCancelSelection, isSelectAll) => {
  const updatedData = data.map(item => {
    if (isSelectAll || item._selected && !isCancelSelection || uniqueColumnName && item[uniqueColumnName] && selectedList && isElementPresent(selectedList, uniqueColumnName, item[uniqueColumnName]) && !isCancelSelection) {
      item._selected = true;
    } else if (isCancelSelection) {
      item._selected = false;
    } else {
      item._selected = false;
    }
    return item;
  });
  return updatedData;
};
const uniqueByKey = (arr, key) => {
  const list = new Set();
  return arr.filter(obj => {
    const value = obj[key];
    if (list.has(value)) {
      return false;
    } else {
      list.add(value);
      return true;
    }
  });
};
const removeDuplicate = (data, uniqueColumnName) => {
  if (uniqueColumnName) {
    return uniqueByKey(data, uniqueColumnName);
  }
  return data;
};

const defaultErrorTemplate = props => {
  const {
    errorType = 'DEFAULT'
  } = props;
  const errorMessages = {
    FAILED_TO_FETCH: 'Failed to fetch data',
    NO_RECORDS_FOUND: 'No results found',
    DEFAULT: 'No results found'
  };
  return /*#__PURE__*/React.createElement(Heading, null, errorMessages[errorType]);
};
const defaultProps = {
  type: 'data',
  size: 'standard',
  showHead: true,
  showMenu: true,
  multipleSorting: true,
  headerOptions: {},
  withPagination: true,
  paginationType: 'jump',
  page: 1,
  pageSize: 15,
  draggable: true,
  data: [],
  displayData: [],
  schema: [],
  loading: false,
  error: false,
  loaderSchema: [],
  sortingList: [],
  filterList: {},
  filterPosition: 'GRID',
  searchDebounceDuration: 750,
  pageJumpDebounceDuration: 750,
  errorTemplate: defaultErrorTemplate,
  infiniteScrollOptions: {
    fetchRowsCount: 50,
    fetchThreshold: 'balanced'
  }
};
class Table extends React.Component {
  constructor(_props) {
    super(_props);
    _defineProperty$1(this, "debounceUpdate", void 0);
    _defineProperty$1(this, "selectedRowsRef", /*#__PURE__*/React.createRef());
    _defineProperty$1(this, "clearSelectionRef", /*#__PURE__*/React.createRef());
    _defineProperty$1(this, "selectAllRef", /*#__PURE__*/React.createRef());
    _defineProperty$1(this, "updateData", searchUpdate => {
      if (this.state.async) {
        this.setState({
          loading: true
        });
      }
      if (searchUpdate) {
        this.debounceUpdate();
      } else {
        this.updateDataFn();
      }
    });
    _defineProperty$1(this, "fetchDataOnScroll", async props => {
      const {
        sortingList,
        filterList,
        searchTerm
      } = this.state;
      const {
        fetchData,
        uniqueColumnName
      } = this.props;
      const {
        page,
        rowsCount
      } = props;
      const opts = {
        page,
        pageSize: rowsCount,
        sortingList,
        filterList,
        searchTerm
      };
      if (fetchData) {
        try {
          const res = await fetchData(opts);
          this.setState(prevState => {
            const newList = [...prevState.data, ...res.data];
            const dataReplica = JSON.parse(JSON.stringify(newList));
            const preSelectedRows = newList.filter(item => item._selected);
            if (this.clearSelectionRef.current) {
              this.selectedRowsRef.current = [];
            } else {
              this.selectedRowsRef.current = this.selectedRowsRef.current ? removeDuplicate([...this.selectedRowsRef.current, ...preSelectedRows], uniqueColumnName) : removeDuplicate([...preSelectedRows], uniqueColumnName);
            }
            const selectedData = getUpdatedData(dataReplica, this.selectedRowsRef.current, uniqueColumnName, this.clearSelectionRef.current, this.selectAllRef.current);
            return {
              data: selectedData,
              totalRecords: selectedData.length,
              totalRowsCount: res.totalRowsCount || this.state.totalRowsCount,
              loading: false,
              error: !selectedData.length
            };
          });
          return res.data;
        } catch (error) {
          throw new Error('Failed to fetch data');
        }
      }
      return [];
    });
    _defineProperty$1(this, "updateDataFn", () => {
      const {
        fetchData,
        pageSize,
        withPagination,
        data: dataProp,
        onSearch,
        uniqueColumnName,
        enableInfiniteScroll,
        infiniteScrollOptions
      } = this.props;
      const {
        async,
        page,
        sortingList,
        filterList,
        searchTerm
      } = this.state;
      this.onSelect(-1, false);
      const opts = {
        page,
        pageSize: enableInfiniteScroll && infiniteScrollOptions ? infiniteScrollOptions.fetchRowsCount * 2 : pageSize,
        sortingList,
        filterList,
        searchTerm
      };
      if (!withPagination && !enableInfiniteScroll) {
        delete opts.page;
        delete opts.pageSize;
      }
      if (async) {
        if (fetchData) {
          fetchData(opts).then(res => {
            if (!res.searchTerm || res.searchTerm && res.searchTerm === this.state.searchTerm) {
              const data = res.data;
              const dataReplica = JSON.parse(JSON.stringify(data));
              const schema = this.state.schema.length ? this.state.schema : res.schema;
              const preSelectedRows = data.filter(item => item._selected);
              if (this.clearSelectionRef.current) {
                this.selectedRowsRef.current = [];
              } else {
                this.selectedRowsRef.current = this.selectedRowsRef.current ? removeDuplicate([...this.selectedRowsRef.current, ...preSelectedRows], uniqueColumnName) : removeDuplicate([...preSelectedRows], uniqueColumnName);
              }
              const selectedData = getUpdatedData(dataReplica, this.selectedRowsRef.current, uniqueColumnName, this.clearSelectionRef.current, this.selectAllRef.current);
              this.setState({
                data: selectedData,
                displayData: data,
                schema,
                selectAll: getSelectAll(selectedData, this.props.selectDisabledRow, this.clearSelectionRef.current),
                totalRecords: res.count,
                totalRowsCount: res.totalRowsCount || this.state.totalRowsCount,
                loading: false,
                error: !data.length,
                errorType: 'NO_RECORDS_FOUND'
              });
            }
          }).catch(() => {
            this.setState({
              loading: false,
              error: true,
              errorType: 'FAILED_TO_FETCH'
            });
          });
        }
      } else {
        const {
          schema
        } = this.state;
        const filteredData = filterData(schema, dataProp, filterList);
        const searchedData = onSearch && opts.searchTerm !== undefined ? onSearch(filteredData, opts.searchTerm) : filteredData;
        const sortedData = sortData(schema, searchedData, sortingList);
        let renderedData = sortedData;
        const totalRecords = sortedData.length;
        if (withPagination && page && pageSize) {
          renderedData = paginateData(renderedData, page, pageSize);
        }
        const renderedSchema = this.state.schema.length ? this.state.schema : schema;
        const preSelectedRows = renderedData.filter(item => item._selected);
        const renderedDataReplica = JSON.parse(JSON.stringify(renderedData));
        if (this.clearSelectionRef.current) {
          this.selectedRowsRef.current = [];
        } else {
          this.selectedRowsRef.current = this.selectedRowsRef.current ? removeDuplicate([...this.selectedRowsRef.current, ...preSelectedRows], uniqueColumnName) : removeDuplicate([...preSelectedRows], uniqueColumnName);
        }
        const selectedData = getUpdatedData(renderedDataReplica, this.selectedRowsRef.current, uniqueColumnName, this.clearSelectionRef.current, this.selectAllRef.current);
        this.setState({
          totalRecords,
          error: !renderedData.length,
          errorType: 'NO_RECORDS_FOUND',
          selectAll: getSelectAll(renderedData, this.props.selectDisabledRow, this.clearSelectionRef.current),
          schema: renderedSchema,
          displayData: sortedData,
          data: selectedData,
          totalRowsCount: sortedData.length
        });
      }
    });
    _defineProperty$1(this, "onSelect", (rowIndexes, selected) => {
      const {
        data
      } = this.state;
      const {
        onSelect,
        uniqueColumnName
      } = this.props;
      if (this.selectAllRef.current && rowIndexes !== -1 && !selected) {
        this.selectAllRef.current = false;
        this.selectedRowsRef.current = [];
        const indexes = Array.from({
          length: data.length
        }, (_, i) => i);
        const newData = updateBatchData(data, indexes, {
          _selected: false
        }, this.props.selectDisabledRow);
        this.setState({
          data: newData,
          selectAll: {
            checked: false,
            indeterminate: false
          }
        });
        if (onSelect) {
          if (this.props.uniqueColumnName) {
            onSelect(indexes, selected, this.selectedRowsRef.current, this.selectAllRef.current);
          } else {
            // To avoid breaking the current selection flow
            onSelect(indexes, selected, rowIndexes === -1 ? [] : newData.filter(d => d._selected));
          }
        }
        return;
      }
      const indexes = [rowIndexes];
      const rowData = data[rowIndexes];
      let selectedItemList = rowIndexes === -1 ? [] : [rowData];
      let newData = data;
      if (rowIndexes >= 0) {
        newData = updateBatchData(data, indexes, {
          _selected: selected
        }, this.props.selectDisabledRow);
        this.resetClearSelection();
        this.setState({
          data: newData,
          selectAll: getSelectAll(newData, this.props.selectDisabledRow, this.clearSelectionRef.current)
        });
        if (this.selectedRowsRef.current && selected) {
          selectedItemList = [{
            ...rowData,
            _selected: selected
          }, ...this.selectedRowsRef.current];
        }
        if (!selected && uniqueColumnName) {
          selectedItemList = this.selectedRowsRef.current.filter(item => item[uniqueColumnName] !== rowData[uniqueColumnName]);
        }
        this.selectedRowsRef.current = removeDuplicate(selectedItemList, uniqueColumnName);
      } else if (rowIndexes === -1 && this.selectedRowsRef.current) {
        selectedItemList = this.selectedRowsRef.current;
      }
      if (onSelect) {
        if (this.props.uniqueColumnName) {
          onSelect(indexes, selected, rowIndexes === -1 && selectedItemList?.length === 0 ? [] : this.selectedRowsRef.current, this.selectAllRef.current);
        } else {
          // To avoid breaking the current selection flow
          onSelect(indexes, selected, rowIndexes === -1 ? [] : newData.filter(d => d._selected));
        }
      }
    });
    _defineProperty$1(this, "onSelectAll", (selected, selectAll, headerCheckbox) => {
      const {
        onSelect,
        uniqueColumnName
      } = this.props;
      const {
        data
      } = this.state;
      const indexes = Array.from({
        length: data.length
      }, (_, i) => i);
      const newData = updateBatchData(data, indexes, {
        _selected: selected
      }, this.props.selectDisabledRow);
      const selectedIndex = [];
      newData.forEach((item, key) => {
        if (item._selected) {
          selectedIndex.push(key);
        }
      });
      let selectedData = [];
      if (selected) {
        this.resetClearSelection();
        selectedData = selectAll === undefined ? [...(this.selectedRowsRef.current || []), ...newData.filter(d => d._selected)] : this.selectedRowsRef.current;
      } else if (!selected && headerCheckbox && uniqueColumnName) {
        this.selectAllRef.current = false;
        this.selectedRowsRef.current = [...(this.selectedRowsRef.current || []), ...newData];
        this.selectedRowsRef.current = this.selectedRowsRef.current.filter(item1 => {
          return !newData.some(item2 => item1[uniqueColumnName] === item2[uniqueColumnName]);
        });
      } else {
        this.selectedRowsRef.current = [];
        this.selectAllRef.current = false;
      }
      if (!(headerCheckbox && !selected)) {
        this.selectedRowsRef.current = removeDuplicate(selectedData, uniqueColumnName);
      }
      if (onSelect) {
        if (this.props.uniqueColumnName) {
          if (headerCheckbox && !selected) {
            onSelect(selectedIndex, selected, removeDuplicate(this.selectedRowsRef.current, uniqueColumnName), this.selectAllRef.current);
          } else {
            onSelect(selectedIndex, selected, removeDuplicate(selectedData, uniqueColumnName), this.selectAllRef.current);
          }
        } else {
          onSelect(selectedIndex, selected, newData.filter(d => d._selected), selectAll);
        }
      }
      this.setState({
        data: newData,
        selectAll: getSelectAll(newData, this.props.selectDisabledRow)
      });
    });
    _defineProperty$1(this, "onPageChange", newPage => {
      this.setState({
        page: newPage
      });
    });
    _defineProperty$1(this, "updateSchema", newSchema => {
      this.setState({
        schema: newSchema
      });
    });
    _defineProperty$1(this, "updateSortingList", newSortingList => {
      const {
        multipleSorting
      } = this.props;
      this.setState({
        sortingList: multipleSorting ? [...newSortingList] : newSortingList.slice(-1),
        page: 1
      });
    });
    _defineProperty$1(this, "updateFilterList", newFilterList => {
      this.setState({
        filterList: newFilterList,
        page: 1
      });
    });
    _defineProperty$1(this, "updateSearchTerm", newSearchTerm => {
      this.setState({
        searchTerm: newSearchTerm,
        page: 1
      });
    });
    _defineProperty$1(this, "onClearSelection", () => {
      this.selectedRowsRef.current = [];
      this.clearSelectionRef.current = true;
      this.selectAllRef.current = false;
      this.onSelectAll(false);
      this.setState({
        selectAll: getSelectAll([], this.props.selectDisabledRow, this.clearSelectionRef.current)
      });
    });
    _defineProperty$1(this, "resetClearSelection", () => {
      this.clearSelectionRef.current = false;
    });
    _defineProperty$1(this, "onSelectAllRows", () => {
      this.selectAllRef.current = this.props.uniqueColumnName ? true : false;
      this.onSelectAll(true, true);
    });
    const _async = 'fetchData' in this.props;
    const _data = _props.data || [];
    const _schema = _props.schema || [];
    this.state = {
      async: _async,
      data: !_async ? _data : [],
      displayData: !_async ? _data : [],
      schema: !_async ? _schema : [],
      page: _props.page,
      sortingList: _props.sortingList,
      filterList: _props.filterList,
      totalRecords: !_async ? _data.length : 0,
      loading: !_async ? _props.loading : true,
      error: !_async ? _props.error : false,
      errorType: _props.errorType,
      selectAll: getSelectAll([]),
      searchTerm: undefined,
      totalRowsCount: !_async ? _data.length : 0
    };
    this.debounceUpdate = debounce$1(_props.searchDebounceDuration, this.updateDataFn);
  }
  componentDidMount() {
    this.updateData();
  }
  componentDidUpdate(prevProps, prevState) {
    if (!this.state.async) {
      if (prevProps.error !== this.props.error) {
        const {
          data = [],
          schema = []
        } = this.props;
        this.setState({
          data,
          displayData: data,
          schema,
          error: this.props.error || false,
          errorType: this.props.errorType,
          page: 1,
          totalRecords: data.length || 0,
          selectAll: getSelectAll([]),
          totalRowsCount: data.length || 0
        });
      }
      if (prevProps.loading !== this.props.loading) {
        const {
          data = [],
          schema = []
        } = this.props;
        this.setState({
          data,
          displayData: data,
          schema,
          loading: this.props.loading || false,
          error: this.props.error || false,
          errorType: this.props.errorType,
          page: 1,
          totalRecords: data.length || 0,
          selectAll: getSelectAll([]),
          totalRowsCount: data.length || 0
        }, () => {
          this.updateData();
        });
      }
    }
    if (prevState.page !== this.state.page) {
      const {
        onPageChange
      } = this.props;
      if (onPageChange) onPageChange(this.state.page);
    }
    if (prevState.page !== this.state.page || prevState.filterList !== this.state.filterList || prevState.sortingList !== this.state.sortingList || prevState.searchTerm !== this.state.searchTerm) {
      if (!this.props.loading) {
        const searchUpdate = prevState.searchTerm !== this.state.searchTerm;
        this.updateData(searchUpdate);
      }
    }
  }
  render() {
    const {
      showHead,
      type,
      size,
      headCellTooltip,
      separator,
      draggable,
      nestedRows,
      nestedRowRenderer,
      withHeader,
      headerOptions,
      withCheckbox,
      showMenu,
      withPagination,
      paginationType,
      pageSize,
      pageJumpDebounceDuration,
      onRowClick,
      loaderSchema,
      errorTemplate,
      className,
      filterPosition,
      uniqueColumnName,
      checkboxAlignment,
      virtualRowOptions,
      enableInfiniteScroll,
      infiniteScrollOptions,
      onScroll
    } = this.props;
    const baseProps = extractBaseProps(this.props);
    const {
      children: headerChildren,
      ...headerAttr
    } = headerOptions;
    const classes = className ? ` ${className}` : '';
    const {
      totalRecords
    } = this.state;
    const totalPages = getTotalPages(totalRecords, pageSize);
    const tableClass = classNames(tableStyles['Table'], classes);
    return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
      className: tableClass,
      "data-test": "DesignSystem-Table-wrapper"
    }), withHeader && /*#__PURE__*/React.createElement("div", {
      "data-test": "DesignSystem-Table-header"
    }, /*#__PURE__*/React.createElement(Header, _extends$2({}, this.state, {
      updateSchema: this.updateSchema,
      updateFilterList: this.updateFilterList,
      updateSearchTerm: this.updateSearchTerm,
      showHead: showHead,
      onSelectAll: this.onSelectAll,
      withCheckbox: withCheckbox,
      withPagination: withPagination,
      pageSize: pageSize,
      showFilters: filterPosition === 'HEADER',
      selectedRowsRef: this.selectedRowsRef,
      onClearSelection: this.onClearSelection,
      onSelectAllRows: this.onSelectAllRows,
      selectedAllRef: this.selectAllRef,
      uniqueColumnName: uniqueColumnName,
      enableInfiniteScroll: enableInfiniteScroll
    }, headerAttr), headerChildren)), /*#__PURE__*/React.createElement("div", {
      className: tableStyles['Table-grid']
    }, /*#__PURE__*/React.createElement(Grid, _extends$2({}, this.state, {
      key: this.state.searchTerm,
      updateData: this.updateData,
      updateSchema: this.updateSchema,
      updateSortingList: this.updateSortingList,
      updateFilterList: this.updateFilterList,
      withCheckbox: withCheckbox,
      checkboxAlignment: checkboxAlignment,
      onSelect: this.onSelect,
      onSelectAll: this.onSelectAll,
      showMenu: showMenu,
      showHead: showHead,
      type: type,
      size: size,
      headCellTooltip: headCellTooltip,
      separator: separator,
      draggable: draggable,
      nestedRows: nestedRows,
      nestedRowRenderer: nestedRowRenderer,
      withPagination: withPagination && totalPages > 1,
      pageSize: pageSize,
      loaderSchema: loaderSchema,
      errorTemplate: errorTemplate && errorTemplate({
        errorType: this.state.errorType
      }),
      onRowClick: onRowClick,
      showFilters: filterPosition === 'GRID',
      fetchDataOnScroll: this.fetchDataOnScroll,
      virtualRowOptions: virtualRowOptions,
      enableRowVirtualization: this.props.enableRowVirtualization,
      enableInfiniteScroll: enableInfiniteScroll,
      infiniteScrollOptions: infiniteScrollOptions,
      onScroll: onScroll
    }))), withPagination && !this.state.loading && !this.state.error && totalPages > 1 && /*#__PURE__*/React.createElement("div", {
      className: tableStyles['Table-pagination']
    }, /*#__PURE__*/React.createElement(Pagination, {
      page: this.state.page,
      totalPages: getTotalPages(totalRecords, pageSize),
      type: paginationType,
      onPageChange: this.onPageChange,
      pageJumpDebounceDuration: pageJumpDebounceDuration
    })));
  }
}
_defineProperty$1(Table, "defaultProps", defaultProps);

/**
 * List component has been deprecated, please use [Listbox](https://mds.innovaccer.com/?path=/docs/components-listbox-all--all) component instead.
 *
 * **`List` is a pattern of `Table` with no Head Cells.**
 *
 * Please refer to stories of Table for examples. Simply replace `Table` with `List` to use it.
 */
const List = props => {
  return /*#__PURE__*/React.createElement(Table, _extends$2({}, props, {
    showHead: false,
    filterPosition: 'HEADER'
  }));
};
List.defaultProps = defaultProps;

var css_248z$i = "/* Navigation */\n\n.navigation-module-Navigation-fsK-Z-5-0-0-9 {\n  display: flex;\n}\n\n.navigation-module-Navigation--horizontal-Nlczj-5-0-0-9 {\n  flex-grow: 1;\n  justify-content: center;\n}\n\n.navigation-module-Navigation--vertical-JMMGv-5-0-0-9 {\n  flex-direction: column;\n  height: 100%;\n  width: var(--spacing-640);\n}\n\n.navigation-module-Navigation--collapsed-ubuOj-5-0-0-9 {\n  width: -moz-fit-content;\n  width: fit-content;\n}\n\n.navigation-module-Navigation-body-zfrYs-5-0-0-9 {\n  height: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding-right: var(--spacing-20);\n}\n\n.navigation-module-Navigation-menu-Afh6p-5-0-0-9 {\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.navigation-module-Navigation-menu--horizontal-DbG8C-5-0-0-9 {\n  height: var(--spacing-80);\n  padding-right: var(--spacing-30);\n  padding-left: var(--spacing-30);\n  border-radius: var(--border-radius-40);\n  margin: 0 var(--spacing-2-5);\n}\n\n.navigation-module-Navigation-menu--disabled-6BCHc-5-0-0-9 {\n  pointer-events: none;\n}\n\n.navigation-module-Navigation-menu-Afh6p-5-0-0-9:hover {\n  background-color: var(--secondary-light);\n}\n\n.navigation-module-Navigation-menu--active-vLg2d-5-0-0-9,\n.navigation-module-Navigation-menu--active-vLg2d-5-0-0-9:hover {\n  background: var(--primary-lightest);\n}\n\n.navigation-module-Navigation-menu--vertical-SD8c9-5-0-0-9 {\n  /* padding-top: var(--spacing-10); */\n  /* padding-bottom: var(--spacing-10); */\n  padding-left: var(--spacing-20);\n  margin-top: var(--spacing-10);\n  margin-bottom: var(--spacing-10);\n  /* margin-right: var(--spacing-20); */\n  border-radius: 0px var(--border-radius-40) var(--border-radius-40) 0px;\n}\n\n.navigation-module-Navigation-menu--rounded-RK5tK-5-0-0-9 {\n  border-radius: var(--border-radius-40);\n}\n\n.navigation-module-Navigation-menu--subMenu-1Xkhm-5-0-0-9 {\n  padding-top: var(--spacing-05);\n  padding-bottom: var(--spacing-05);\n  padding-left: 40px;\n  margin-top: 0;\n}\n\n.navigation-module-Navigation-menuIcon-mI-8A-5-0-0-9 {\n  padding: 8px;\n  border-radius: 50%;\n  cursor: pointer;\n}\n\n.navigation-module-Navigation-menuIcon--active-4-aoZ-5-0-0-9 {\n  background: var(--primary-lightest);\n}\n\n.navigation-module-Navigation-menuLabel-qZLzA-5-0-0-9 {\n  display: flex;\n  flex-grow: 1;\n  overflow: hidden;\n}\n\n.navigation-module-Navigation-menu-Afh6p-5-0-0-9 .navigation-module-Text-4ez7T-5-0-0-9 {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.navigation-module-Navigation-horizontalPills-CubKV-5-0-0-9 {\n  margin-right: var(--spacing-10);\n}\n\n.navigation-module-Navigation-horizontalPills--disabled-mMjCG-5-0-0-9 {\n  opacity: var(--opacity-10);\n}\n\n.navigation-module-Navigation-footer-Ia0x--5-0-0-9 {\n  display: flex;\n  align-items: center;\n  padding: var(--spacing-10) var(--spacing-20);\n}\n\n.navigation-module-Navigation-footer--border--gDQG-5-0-0-9 {\n  border-top: var(--border);\n}\n\n.navigation-module-Navigation--collapsed-ubuOj-5-0-0-9 .navigation-module-Navigation-menuIcon--footer-I0MsK-5-0-0-9 {\n  transform: rotate(180deg);\n}\n";
var styles$i = {"Navigation":"navigation-module-Navigation-fsK-Z-5-0-0-9","Navigation--horizontal":"navigation-module-Navigation--horizontal-Nlczj-5-0-0-9","Navigation--vertical":"navigation-module-Navigation--vertical-JMMGv-5-0-0-9","Navigation--collapsed":"navigation-module-Navigation--collapsed-ubuOj-5-0-0-9","Navigation-body":"navigation-module-Navigation-body-zfrYs-5-0-0-9","Navigation-menu":"navigation-module-Navigation-menu-Afh6p-5-0-0-9","Navigation-menu--horizontal":"navigation-module-Navigation-menu--horizontal-DbG8C-5-0-0-9","Navigation-menu--disabled":"navigation-module-Navigation-menu--disabled-6BCHc-5-0-0-9","Navigation-menu--active":"navigation-module-Navigation-menu--active-vLg2d-5-0-0-9","Navigation-menu--vertical":"navigation-module-Navigation-menu--vertical-SD8c9-5-0-0-9","Navigation-menu--rounded":"navigation-module-Navigation-menu--rounded-RK5tK-5-0-0-9","Navigation-menu--subMenu":"navigation-module-Navigation-menu--subMenu-1Xkhm-5-0-0-9","Navigation-menuIcon":"navigation-module-Navigation-menuIcon-mI-8A-5-0-0-9","Navigation-menuIcon--active":"navigation-module-Navigation-menuIcon--active-4-aoZ-5-0-0-9","Navigation-menuLabel":"navigation-module-Navigation-menuLabel-qZLzA-5-0-0-9","Text":"navigation-module-Text-4ez7T-5-0-0-9","Navigation-horizontalPills":"navigation-module-Navigation-horizontalPills-CubKV-5-0-0-9","Navigation-horizontalPills--disabled":"navigation-module-Navigation-horizontalPills--disabled-mMjCG-5-0-0-9","Navigation-footer":"navigation-module-Navigation-footer-Ia0x--5-0-0-9","Navigation-footer--border":"navigation-module-Navigation-footer--border--gDQG-5-0-0-9","Navigation-menuIcon--footer":"navigation-module-Navigation-menuIcon--footer-I0MsK-5-0-0-9"};
styleInject(css_248z$i);

const {
  useState: useState$1
} = React;
const VerticalNavigation = props => {
  const {
    menus,
    active,
    onClick,
    expanded,
    rounded,
    onToggle,
    footer,
    autoCollapse
  } = props;
  const [menuState, setMenuState] = useState$1({});
  React.useEffect(() => {
    if (props.active) {
      const currMenu = getMenu(menus, props.active);
      if (currMenu) updateMenuState(currMenu, true);
    }
  }, [props.active]);
  const updateMenuState = (menu, val) => {
    const currMenu = getMenu(menus, menu);
    if (currMenu) {
      const nameSplit = currMenu.name.split('.');
      if (nameSplit.length > 1 || currMenu.subMenu) {
        const name = nameSplit[0];
        if (autoCollapse) {
          setMenuState({
            [name]: val || !menuState[name]
          });
        } else {
          const menuData = {
            ...menuState
          };
          menuData[name] = val !== undefined ? val : !menuData[name];
          setMenuState(menuData);
        }
      } else {
        if (autoCollapse) {
          if (!expanded) setMenuState({});
        }
      }
    }
  };
  const onClickHandler = menu => {
    if (!menu.disabled) {
      if (menu.subMenu) {
        if (!expanded) {
          if (onClick) onClick(menu.subMenu[0]);
        } else {
          updateMenuState(menu);
        }
      } else {
        if (onClick) onClick(menu);
      }
    }
  };
  const list = menus.map((menu, index) => {
    const activeMenu = expanded && !menuState[menu.name] && isMenuActive(menus, menu, active);
    const activeMenuIcon = !expanded && isMenuActive(menus, menu, active) || activeMenu;
    const menuClasses = classNames({
      [styles$i['Navigation-menu']]: true,
      [styles$i['Navigation-menu--vertical']]: true,
      [styles$i['Navigation-menu--active']]: activeMenu,
      [styles$i['Navigation-menu--rounded']]: expanded && rounded
    });
    const menuIconClasses = classNames({
      [styles$i['Navigation-menuIcon']]: true,
      [styles$i['Navigation-menuIcon--active']]: activeMenuIcon
    });
    return /*#__PURE__*/React.createElement("div", {
      key: index,
      "data-test": "DesignSystem-Navigation-VerticalNavigation--menuWrapper"
    }, /*#__PURE__*/React.createElement("div", {
      "data-test": "DesignSystem-Navigation-VerticalNavigation--menuItem",
      className: menuClasses,
      onClick: () => onClickHandler(menu)
    }, menu.icon && /*#__PURE__*/React.createElement(Icon, {
      "data-test": "DesignSystem-Navigation-VerticalNavigation--menuIcon",
      className: menuIconClasses,
      name: menu.icon,
      appearance: getIconAppearance(activeMenuIcon, menu.disabled)
    }), expanded && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("span", {
      className: styles$i['Navigation-menuLabel']
    }, /*#__PURE__*/React.createElement(Text, {
      appearance: getTextAppearance(activeMenu, menu.disabled),
      className: "ellipsis--noWrap"
    }, menu.label)), menu.subMenu && menu.subMenu.length > 0 && /*#__PURE__*/React.createElement(Icon, {
      "data-test": "DesignSystem-Navigation-VerticalNavigation--expandedSubMenuIcon",
      className: "mx-4",
      name: menuState[menu.name] ? 'keyboard_arrow_up' : 'keyboard_arrow_down',
      appearance: "subtle"
    }))), /*#__PURE__*/React.createElement("div", {
      className: styles$i['Navigation-subMenu']
    }, menuState[menu.name] && menu.subMenu && expanded && menu.subMenu.map((subMenu, ind) => {
      const isActive = isMenuActive(menus, subMenu, active);
      const subMenuClasses = classNames(menuClasses, {
        [styles$i['Navigation-menu--subMenu']]: true,
        [styles$i['Navigation-menu--active']]: isActive
      });
      return (
        /*#__PURE__*/
        // TODO(a11y)
        // eslint-disable-next-line
        React.createElement("div", {
          "data-test": "DesignSystem-Navigation-VerticalNavigation--subMenu",
          key: ind,
          className: subMenuClasses,
          onClick: () => onClickHandler(subMenu)
        }, /*#__PURE__*/React.createElement(Text, {
          appearance: getTextAppearance(isActive, subMenu.disabled),
          className: "ellipsis--noWrap"
        }, subMenu.label))
      );
    })));
  });
  const footerClasses = classNames(styles$i['Navigation-footer'], styles$i['Navigation-footer--border']);
  const IconClassName = classNames(styles$i['Navigation-menuIcon'], styles$i['Navigation-menuIcon--footer']);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: styles$i['Navigation-body']
  }, list), footer && /*#__PURE__*/React.createElement("div", {
    className: footerClasses
  }, /*#__PURE__*/React.createElement(Icon, {
    className: IconClassName,
    name: "menu_open",
    size: 16,
    onClick: () => onToggle && onToggle(!expanded)
  })));
};
VerticalNavigation.defaultProps = {
  expanded: true,
  autoCollapse: true,
  rounded: false
};

/**
 * ####NOTE: Navigation will be deprecated soon. VerticalNav and HorizontalNav will be supported.
 */

const Navigation = props => {
  const {
    type,
    align,
    menus,
    active,
    onClick,
    expanded,
    rounded,
    onToggle,
    footer,
    autoCollapse,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$i['Navigation']]: true,
    [styles$i[`Navigation--${type}`]]: type,
    ['justify-content-center']: type === 'horizontal' && align === 'center',
    ['justify-content-start']: type === 'horizontal' && align === 'left',
    [styles$i['Navigation--collapsed']]: !expanded
  }, className);
  const renderNavigation = () => {
    return type === 'horizontal' ? /*#__PURE__*/React.createElement(HorizontalNav, {
      menus: menus,
      active: active,
      onClick: onClick
    }) : /*#__PURE__*/React.createElement(VerticalNavigation, {
      menus: menus,
      active: active,
      autoCollapse: autoCollapse,
      expanded: expanded,
      rounded: rounded,
      footer: footer,
      onToggle: onToggle,
      onClick: onClick
    });
  };
  return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
    className: classes
  }), renderNavigation());
};
Navigation.defaultProps = {
  type: 'horizontal',
  align: 'center',
  expanded: true,
  autoCollapse: true,
  rounded: false
};

const Status = props => {
  const {
    status,
    meta,
    navigationPosition,
    navigation,
    tabs
  } = props;
  const statusClasses = classNames({
    [styles$14['PageHeader-statusWrapper']]: true,
    'mb-3': navigationPosition === 'bottom' && navigation || tabs
  });
  return /*#__PURE__*/React.createElement(React.Fragment, null, (status || meta) && /*#__PURE__*/React.createElement("div", {
    className: statusClasses,
    "data-test": "DesignSystem-PageHeader--Status"
  }, status, meta));
};
const Action = props => {
  const {
    actions,
    navigation,
    stepper
  } = props;
  return /*#__PURE__*/React.createElement(React.Fragment, null, actions ? /*#__PURE__*/React.createElement(Column, {
    size: "4",
    sizeXL: "4",
    sizeM: "4",
    "data-test": "DesignSystem-PageHeader--Actions"
  }, /*#__PURE__*/React.createElement("div", {
    className: styles$14['PageHeader-actionsWrapper']
  }, actions)) : (navigation || stepper) && /*#__PURE__*/React.createElement(Column, {
    size: "4",
    sizeXL: "4",
    sizeM: "4",
    "data-test": "DesignSystem-PageHeader--Actions"
  }, /*#__PURE__*/React.createElement("div", {
    className: styles$14['PageHeader-actionsWrapper']
  })));
};
const Nav = props => {
  const {
    navigation,
    stepper
  } = props;
  if (!navigation && !stepper) {
    return null;
  }
  return /*#__PURE__*/React.createElement("div", {
    className: styles$14['PageHeader-navigationWrapper'],
    "data-test": "DesignSystem-PageHeader--Nav"
  }, navigation || stepper);
};
const CenterNav = props => {
  const {
    colSize,
    breadcrumbs,
    navigationPosition
  } = props;
  return /*#__PURE__*/React.createElement(React.Fragment, null, (!breadcrumbs || navigationPosition === 'center') && colSize === '4' && /*#__PURE__*/React.createElement(Column, {
    size: "4",
    sizeXL: "4",
    sizeM: "4",
    "data-test": "DesignSystem-PageHeader--CenterNav"
  }, /*#__PURE__*/React.createElement(Nav, props)));
};
const BackButton = props => {
  const {
    button
  } = props;
  return /*#__PURE__*/React.createElement(React.Fragment, null, button && /*#__PURE__*/React.createElement("div", {
    className: "mr-5 my-3",
    "data-test": "DesignSystem-PageHeader--Button"
  }, button));
};
const Title = props => {
  const {
    badge,
    title
  } = props;
  return /*#__PURE__*/React.createElement("div", {
    className: styles$14['PageHeader-titleWrapper'],
    "data-test": "DesignSystem-PageHeader--Title"
  }, /*#__PURE__*/React.createElement(Heading, {
    className: styles$14['PageHeader-title']
  }, title), badge);
};

const PageHeader = props => {
  const {
    title,
    navigation,
    stepper,
    actions,
    tabs,
    breadcrumbs,
    badge,
    separator,
    status,
    meta,
    navigationPosition,
    className,
    button
  } = props;
  const baseProps = extractBaseProps(props);
  const wrapperClasses = classNames({
    [styles$14['PageHeader-wrapper']]: true,
    [styles$14['PageHeader-wrapper--withTabs']]: tabs
  }, className);
  const classes = classNames(styles$14.PageHeader);
  const colSize = (navigation || stepper) && navigationPosition === 'center' ? '4' : actions ? '8' : '12';
  const centerNavProps = {
    colSize,
    breadcrumbs,
    navigationPosition,
    navigation,
    stepper
  };
  const statusProps = {
    status,
    meta,
    navigationPosition,
    navigation,
    tabs
  };
  return /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-PageHeader"
  }, /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
    className: wrapperClasses
  }), breadcrumbs && /*#__PURE__*/React.createElement("div", {
    className: "pl-6",
    "data-test": "DesignSystem-PageHeader--Breadcrumbs"
  }, breadcrumbs), /*#__PURE__*/React.createElement("div", {
    className: "d-flex pl-6"
  }, /*#__PURE__*/React.createElement(BackButton, {
    button: button
  }), /*#__PURE__*/React.createElement("div", {
    className: classes
  }, /*#__PURE__*/React.createElement(Row, {
    className: "w-100"
  }, /*#__PURE__*/React.createElement(Column, {
    size: colSize,
    sizeXL: colSize,
    sizeM: colSize
  }, /*#__PURE__*/React.createElement(Title, {
    badge: badge,
    title: title
  })), /*#__PURE__*/React.createElement(CenterNav, centerNavProps), /*#__PURE__*/React.createElement(Action, {
    actions: actions,
    navigation: navigation,
    stepper: stepper
  })), /*#__PURE__*/React.createElement(Status, statusProps))), /*#__PURE__*/React.createElement("div", {
    className: "pl-3"
  }, navigationPosition === 'bottom' && /*#__PURE__*/React.createElement(Nav, {
    navigation: navigation,
    stepper: stepper
  }), tabs && /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-PageHeader--Tabs"
  }, tabs))), separator && /*#__PURE__*/React.createElement(Divider, {
    appearance: "header"
  }));
};
PageHeader.defaultProps = {
  navigationPosition: 'center',
  separator: true
};

var css_248z$h = ".fileList-module-FileIcon-01qzb-5-0-0-9 {\n  padding: var(--spacing-20);\n  border-radius: var(--border-radius-full);\n}\n.fileList-module-FileItem-HpCE9-5-0-0-9:not(:last-child) {\n  border-bottom: var(--border);\n  width: 100%;\n  box-sizing: border-box;\n}\n.fileList-module-FileItem-HpCE9-5-0-0-9 {\n  padding-top: var(--spacing-20);\n  padding-bottom: var(--spacing-20);\n  padding-left: var(--spacing-30);\n  padding-right: var(--spacing-20);\n}\n.fileList-module-FileItem-fileContent-vusoO-5-0-0-9 {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 0;\n}\n.fileList-module-FileItem-actions-zH5Wo-5-0-0-9 {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n}\n.fileList-module-FileItem-file-jkZDb-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.fileList-module-FileItem-size-Jn3i4-5-0-0-9 {\n  margin-right: var(--spacing-20);\n  margin-left: var(--spacing-20);\n  flex-shrink: 0;\n}\n.fileList-module-FileItem-text-JzD0s-5-0-0-9 {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-right: var(--spacing-20);\n  margin-left: var(--spacing-30);\n}\n.fileList-module-FileItem-error-srZSs-5-0-0-9 {\n  margin-left: 40px;\n}\n\n.fileList-module-FileIcon--image-8GeUP-5-0-0-9 {\n  background: var(--alert-lightest);\n  color: var(--alert);\n}\n.fileList-module-FileIcon--audio-pU4It-5-0-0-9 {\n  background: var(--accent1-lightest);\n  color: var(--accent1);\n}\n.fileList-module-FileIcon--video-Yhyeo-5-0-0-9 {\n  background: var(--accent2-lightest);\n  color: var(--accent2);\n}\n.fileList-module-FileIcon--application-GCdsE-5-0-0-9 {\n  background: var(--accent3-lightest);\n  color: var(--accent3);\n}\n.fileList-module-FileIcon--others-EgUIw-5-0-0-9 {\n  background: var(--success-lightest);\n  color: var(--success);\n}\n.fileList-module-FileIcon--animate-uQCYr-5-0-0-9 {\n  animation: fileList-module-fadeIn-CVtFA-5-0-0-9 var(--duration--moderate-01) var(--entrance-productive-curve);\n}\n\n@keyframes fileList-module-fadeIn-CVtFA-5-0-0-9 {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n";
var styles$h = {"FileIcon":"fileList-module-FileIcon-01qzb-5-0-0-9","FileItem":"fileList-module-FileItem-HpCE9-5-0-0-9","FileItem-fileContent":"fileList-module-FileItem-fileContent-vusoO-5-0-0-9","FileItem-actions":"fileList-module-FileItem-actions-zH5Wo-5-0-0-9","FileItem-file":"fileList-module-FileItem-file-jkZDb-5-0-0-9","FileItem-size":"fileList-module-FileItem-size-Jn3i4-5-0-0-9","FileItem-text":"fileList-module-FileItem-text-JzD0s-5-0-0-9","FileItem-error":"fileList-module-FileItem-error-srZSs-5-0-0-9","FileIcon--image":"fileList-module-FileIcon--image-8GeUP-5-0-0-9","FileIcon--audio":"fileList-module-FileIcon--audio-pU4It-5-0-0-9","FileIcon--video":"fileList-module-FileIcon--video-Yhyeo-5-0-0-9","FileIcon--application":"fileList-module-FileIcon--application-GCdsE-5-0-0-9","FileIcon--others":"fileList-module-FileIcon--others-EgUIw-5-0-0-9","FileIcon--animate":"fileList-module-FileIcon--animate-uQCYr-5-0-0-9","fadeIn":"fileList-module-fadeIn-CVtFA-5-0-0-9"};
styleInject(css_248z$h);

const {
  useEffect,
  useState
} = React;
const IconMapping$1 = {
  audio: 'audiotrack',
  image: 'image',
  video: 'movie',
  application: 'insert_drive_file',
  others: 'text_snippet'
};
const FileIcon = props => {
  const {
    progress,
    status,
    file
  } = props;
  const [animate, setAnimate] = useState(false);
  const type = file.type.split('/')[0] || 'others';
  const fileType = IconMapping$1[type] ? type : 'others';
  const iconClass = classNames({
    [styles$h['FileIcon']]: true,
    [styles$h['FileIcon--animate']]: animate,
    [styles$h[`FileIcon--${fileType}`]]: true
  });
  const uploadingIconClass = classNames({
    [styles$h['FileIcon']]: true,
    [styles$h['FileIcon--uploading']]: true
  });
  useEffect(() => {
    if (status === 'completed') {
      setAnimate(true);
    } else {
      setAnimate(false);
    }
  }, [status]);
  if (status === 'uploading') {
    return /*#__PURE__*/React.createElement(ProgressRing, {
      size: "small",
      value: progress || 0,
      className: uploadingIconClass,
      "data-test": "DesignSystem-FileListItem--ProgressRing"
    });
  }
  return /*#__PURE__*/React.createElement(Icon, {
    name: IconMapping$1[fileType],
    className: iconClass,
    "data-test": "DesignSystem-FileListItem--Icon"
  });
};
FileIcon.displayName = 'FileIcon';
FileIcon.defaultProps = {
  progress: 0,
  status: 'completed'
};

const FileListItem = props => {
  const {
    progress,
    errorMessage,
    onClick,
    className,
    actions,
    fileItem,
    file,
    status,
    fileSize
  } = props;
  const {
    name
  } = file;
  const baseProps = extractBaseProps(props);
  const FileItemClass = classNames({
    [styles$h['FileItem']]: true
  }, className);
  const onClickHandler = () => {
    if (onClick) {
      onClick(fileItem);
    }
  };
  return (
    /*#__PURE__*/
    // TODO(a11y)
    //  eslint-disable-next-line
    React.createElement("div", _extends$2({}, baseProps, {
      className: FileItemClass,
      onClick: onClickHandler,
      "data-test": "DesignSystem-FileListItem"
    }), /*#__PURE__*/React.createElement("div", {
      className: styles$h['FileItem-file']
    }, /*#__PURE__*/React.createElement("div", {
      className: styles$h['FileItem-fileContent']
    }, /*#__PURE__*/React.createElement(FileIcon, {
      file: file,
      status: status,
      progress: progress
    }), /*#__PURE__*/React.createElement(Text, {
      "data-test": "DesignSystem-FileListItem--Name",
      className: styles$h['FileItem-text'],
      appearance: status === 'completed' ? 'default' : 'subtle',
      weight: "medium"
    }, name)), /*#__PURE__*/React.createElement("div", {
      className: styles$h['FileItem-actions']
    }, /*#__PURE__*/React.createElement(Text, {
      className: styles$h['FileItem-size'],
      size: "small",
      appearance: 'subtle',
      "data-test": "DesignSystem-FileListItem--Size"
    }, fileSize || file.size), !!actions && actions)), status === 'error' && /*#__PURE__*/React.createElement(InlineMessage, {
      size: "small",
      appearance: "alert",
      description: errorMessage,
      className: styles$h['FileItem-error']
    }))
  );
};
FileListItem.defaultProps = {
  progress: 0,
  errorMessage: 'Network Error'
};
FileListItem.displayName = 'FileListItem';

const FileList = props => {
  const {
    fileList,
    onClick,
    actionRenderer,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  if (fileList.length === 0) return null;
  return /*#__PURE__*/React.createElement(Card, _extends$2({}, baseProps, {
    shadow: 'none',
    className: className
  }), fileList.map((fileItem, index) => /*#__PURE__*/React.createElement(FileListItem, _extends$2({
    key: index,
    onClick: onClick,
    actions: actionRenderer && actionRenderer(fileItem),
    fileItem: fileItem
  }, fileItem))));
};
FileList.defaultProps = {
  fileList: []
};
FileList.displayName = 'FileList';

const KEY_CODE = {
  backspace: 'Backspace',
  left: 'ArrowLeft',
  up: 'ArrowUp',
  right: 'ArrowRight',
  down: 'ArrowDown',
  e: 'e',
  E: 'E'
};
const VerificationCodeInput = props => {
  const {
    type = 'number',
    fields = 4,
    placeholder = '_',
    autoFocus = true,
    onComplete,
    onChange,
    onFocus,
    onBlur,
    className,
    value,
    ...rest
  } = props;
  const initialValues = useMemo(() => {
    if (props.value && props.value.length) {
      return props.value.split('');
    }
    return Array(fields).fill('');
  }, []);
  const initialRefs = useMemo(() => {
    return [...Array(fields)].map(() => {
      return /*#__PURE__*/React__default.createRef();
    });
  }, []);
  const [values, setValues] = useState$3(initialValues);
  const [refs] = useState$3(initialRefs);
  useEffect$2(() => {
    if (refs[0] && refs[0].current && autoFocus) {
      refs[0].current.focus({
        preventScroll: true
      });
    }
  }, []);
  useEffect$2(() => {
    const completeValue = values.join('');
    const isComplete = completeValue.length === fields;
    isComplete && onComplete?.(completeValue);
    onChange?.(completeValue);
  }, [values]);
  const onChangeHandler = e => {
    const index = parseInt(e.target.dataset.id, 10);
    const fieldValue = e.target.value;
    let nextRef;
    const newValues = [...values];
    if (!fieldValue) {
      return;
    }
    if (fieldValue.length > 1) {
      let nextIndex = fieldValue.length + index - 1;
      if (nextIndex >= fields) {
        nextIndex = fields - 1;
      }
      nextRef = refs[nextIndex];
      const split = fieldValue.split('');
      split.forEach((item, i) => {
        const cursor = index + i;
        if (cursor < fields) {
          newValues[cursor] = item;
        }
      });
      setValues(newValues);
    } else {
      nextRef = refs[index + 1];
      newValues[index] = fieldValue;
      setValues(newValues);
    }
    if (nextRef && nextRef.current) {
      nextRef.current.focus({
        preventScroll: true
      });
      nextRef.current.select();
    }
  };
  const onFocusHandler = e => {
    e.target.select();
    e.target.placeholder = '';
    if (onFocus) {
      onFocus(e);
    }
  };
  const onBlurHandler = e => {
    e.target.placeholder = placeholder;
    if (onBlur) {
      onBlur(e);
    }
  };
  const onKeyDown = e => {
    const index = parseInt(e.currentTarget.dataset.id, 10);
    const prevIndex = index - 1;
    const nextIndex = index + 1;
    const prev = refs[prevIndex];
    const nextRef = refs[nextIndex];
    switch (e.key) {
      case KEY_CODE.backspace:
        {
          e.preventDefault();
          const vals = [...values];
          if (values[index]) {
            vals[index] = '';
            setValues(vals);
          } else if (prev && prev.current) {
            vals[prevIndex] = '';
            prev.current.focus({
              preventScroll: true
            });
            setValues(vals);
          }
          break;
        }
      case KEY_CODE.left:
        {
          e.preventDefault();
          if (prev && prev.current) {
            prev.current.focus({
              preventScroll: true
            });
          }
          break;
        }
      case KEY_CODE.right:
        {
          e.preventDefault();
          if (nextRef && nextRef.current) {
            nextRef.current.focus({
              preventScroll: true
            });
          }
          break;
        }
      case KEY_CODE.up:
      case KEY_CODE.down:
      case KEY_CODE.e:
      case KEY_CODE.E:
        {
          if (type === 'number') {
            e.preventDefault();
          }
          break;
        }
    }
  };
  const wrapperClassNames = i => classNames({
    [styles$V['VerificationCodeInput-Input']]: true,
    'ml-4': i > 0
  }, className);
  return /*#__PURE__*/React__default.createElement("div", {
    "data-test": "DesignSystem-VerificationCodeInput",
    className: styles$V['VerificationCodeInput']
  }, values.map((val, index) => /*#__PURE__*/React__default.createElement(Input, _extends$2({
    key: index,
    className: wrapperClassNames(index),
    size: "large",
    minWidth: "40px",
    value: val,
    placeholder: placeholder,
    onChange: onChangeHandler,
    onKeyDown: onKeyDown,
    onFocus: onFocusHandler,
    onBlur: onBlurHandler,
    "data-id": index,
    ref: refs[index],
    type: type
  }, rest))));
};
VerificationCodeInput.displayName = 'VerificationCodeInput';
VerificationCodeInput.defaultProps = {
  type: 'number',
  fields: 4
};

var css_248z$g = ".inlineMessage-module-InlineMessage-eYA4x-5-0-0-9 {\n  display: flex;\n  flex-direction: row;\n  overflow: hidden;\n  border-radius: var(--border-radius-10);\n  background-color: var(--white);\n  align-items: flex-start;\n}\n\n.inlineMessage-module-InlineMessage-icon--regular-ULMAr-5-0-0-9 {\n  padding-top: var(--spacing-05);\n  padding-bottom: var(--spacing-05);\n  margin-right: var(--spacing-20);\n}\n\n.inlineMessage-module-InlineMessage-icon--small-DcwRS-5-0-0-9 {\n  padding-top: var(--spacing-2-5);\n  padding-bottom: var(--spacing-2-5);\n  margin-right: var(--spacing-10);\n}\n\n.inlineMessage-module-InlineMessage-text--warning-zlHbs-5-0-0-9,\n.inlineMessage-module-InlineMessage-icon--warning-UwGi4-5-0-0-9 {\n  color: var(--accent1);\n}\n\n.inlineMessage-module-InlineMessage-text--alert-rUpLF-5-0-0-9 {\n  color: var(--alert);\n}\n\n.inlineMessage-module-InlineMessage-text--info-7X-lv-5-0-0-9 {\n  color: var(--primary);\n}\n\n.inlineMessage-module-InlineMessage-text--success-UX2Vn-5-0-0-9 {\n  color: var(--success);\n}\n";
var styles$g = {"InlineMessage":"inlineMessage-module-InlineMessage-eYA4x-5-0-0-9","InlineMessage-icon--regular":"inlineMessage-module-InlineMessage-icon--regular-ULMAr-5-0-0-9","InlineMessage-icon--small":"inlineMessage-module-InlineMessage-icon--small-DcwRS-5-0-0-9","InlineMessage-text--warning":"inlineMessage-module-InlineMessage-text--warning-zlHbs-5-0-0-9","InlineMessage-icon--warning":"inlineMessage-module-InlineMessage-icon--warning-UwGi4-5-0-0-9","InlineMessage-text--alert":"inlineMessage-module-InlineMessage-text--alert-rUpLF-5-0-0-9","InlineMessage-text--info":"inlineMessage-module-InlineMessage-text--info-7X-lv-5-0-0-9","InlineMessage-text--success":"inlineMessage-module-InlineMessage-text--success-UX2Vn-5-0-0-9"};
styleInject(css_248z$g);

const IconMapping = {
  success: 'check_circle',
  info: 'info',
  warning: 'warning',
  alert: 'error'
};
const InlineMessage = props => {
  const {
    appearance,
    className,
    description,
    size
  } = props;
  const baseProps = extractBaseProps(props);
  const InlineMessageClass = classNames({
    [styles$g['InlineMessage']]: true
  }, className);
  const IconClass = classNames({
    [styles$g['InlineMessage-icon--warning']]: appearance === 'warning',
    [styles$g['InlineMessage-icon--small']]: size === 'small',
    [styles$g['InlineMessage-icon--regular']]: size === 'regular'
  });
  const DescriptionClass = classNames({
    [styles$g[`InlineMessage-text--${appearance}`]]: appearance
  });
  const IconSize = size === 'small' ? 14 : 16;
  const TextWeight = size === 'small' ? 'medium' : undefined;
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-InlineMessage"
  }, baseProps, {
    className: InlineMessageClass
  }), appearance !== 'default' && /*#__PURE__*/React.createElement(Icon, {
    "data-test": "DesignSystem-InlineMessage--Icon",
    name: IconMapping[appearance],
    appearance: appearance,
    className: IconClass,
    size: IconSize
  }), /*#__PURE__*/React.createElement(Text, {
    size: size,
    weight: TextWeight,
    className: DescriptionClass,
    "data-test": "DesignSystem-InlineMessage--Description"
  }, description));
};
InlineMessage.displayName = 'InlineMessage';
InlineMessage.defaultProps = {
  appearance: 'default',
  description: '',
  size: 'regular'
};

var css_248z$f = ".choiceList-module-ChoiceList-haiz--5-0-0-9 {\n  margin: 0;\n  padding: 0;\n  border: none;\n}\n\n.choiceList-module-ChoiceList-checkbox--vertical-cGAam-5-0-0-9 {\n  margin-top: var(--spacing-10);\n}\n\n.choiceList-module-ChoiceList-radio--vertical-9uLgh-5-0-0-9 {\n  margin-top: var(--spacing-10);\n}\n\n.choiceList-module-ChoiceList--alignHorizontal-7FzTE-5-0-0-9 {\n  display: flex;\n}\n\n.choiceList-module-ChoiceList-checkbox--horizontal-RqiZg-5-0-0-9 {\n  margin-left: var(--spacing-60);\n}\n\n.choiceList-module-ChoiceList-radio--horizontal-67SGD-5-0-0-9 {\n  margin-left: var(--spacing-60);\n}\n";
var styles$f = {"ChoiceList":"choiceList-module-ChoiceList-haiz--5-0-0-9","ChoiceList-checkbox--vertical":"choiceList-module-ChoiceList-checkbox--vertical-cGAam-5-0-0-9","ChoiceList-radio--vertical":"choiceList-module-ChoiceList-radio--vertical-9uLgh-5-0-0-9","ChoiceList--alignHorizontal":"choiceList-module-ChoiceList--alignHorizontal-7FzTE-5-0-0-9","ChoiceList-checkbox--horizontal":"choiceList-module-ChoiceList-checkbox--horizontal-RqiZg-5-0-0-9","ChoiceList-radio--horizontal":"choiceList-module-ChoiceList-radio--horizontal-67SGD-5-0-0-9"};
styleInject(css_248z$f);

const renderCheckbox = (list, handleOnChange, ChoiceListDisabled, size, alignment, selected, wrapLabel) => {
  return list.map((item, checkboxIndex) => {
    const {
      name,
      value,
      helpText,
      disabled,
      label
    } = item;
    return /*#__PURE__*/React.createElement(Checkbox, {
      key: checkboxIndex,
      label: label,
      onChange: handleOnChange,
      disabled: disabled || ChoiceListDisabled,
      helpText: helpText,
      size: size,
      name: name,
      value: value,
      defaultChecked: selected.length !== 0 && selected.includes(value),
      className: getCheckboxClassName(alignment, checkboxIndex),
      wrapLabel: wrapLabel
    });
  });
};
const renderRadio = (list, handleOnChange, ChoiceListDisabled, size, alignment, selected) => {
  return list.map((item, radioIndex) => {
    const {
      name,
      value,
      helpText,
      disabled,
      label
    } = item;
    return /*#__PURE__*/React.createElement(Radio, {
      key: radioIndex,
      label: label,
      onChange: handleOnChange,
      disabled: disabled || ChoiceListDisabled,
      helpText: helpText,
      size: size,
      name: name,
      value: value,
      defaultChecked: selected.length !== 0 && selected.includes(value),
      className: getRadioClassName(alignment, radioIndex)
    });
  });
};
const getCheckboxClassName = (alignment, index) => {
  const ChoiceListCheckboxClass = classNames({
    [styles$f[`ChoiceList-checkbox--${alignment}`]]: true,
    ['ml-0']: index === 0 && alignment === 'horizontal',
    ['mt-4']: alignment === 'horizontal'
  });
  return ChoiceListCheckboxClass;
};
const getRadioClassName = (alignment, index) => {
  const ChoiceListRadioClass = classNames({
    [styles$f[`ChoiceList-radio--${alignment}`]]: true,
    ['ml-0']: index === 0 && alignment === 'horizontal',
    ['mt-4']: alignment === 'horizontal'
  });
  return ChoiceListRadioClass;
};
const ChoiceList = props => {
  const {
    title,
    choices,
    alignment = 'vertical',
    allowMultiple = false,
    onChange,
    disabled = false,
    size = 'regular',
    className,
    wrapLabel
  } = props;
  const {
    selected = []
  } = props;
  let selectedChoiceValue = selected && selected || [];
  const ChoiceListClass = classNames({
    [styles$f['ChoiceList']]: true
  }, className);
  const ChoiceListVerticalClass = classNames({
    [styles$f['ChoiceList--alignVertical']]: true
  });
  const ChoiceHorizontalClass = classNames({
    [styles$f['ChoiceList--alignHorizontal']]: true
  });
  const handleOnChange = e => {
    if (e.target.checked && allowMultiple) {
      if (!selectedChoiceValue.includes(e.target.value)) {
        selectedChoiceValue = [...selectedChoiceValue, e.target.value];
      }
    } else if (!e.target.checked && allowMultiple) {
      selectedChoiceValue = selectedChoiceValue.filter(el => el !== e.target.value);
    }
    if (!allowMultiple) {
      if (!selectedChoiceValue.includes(e.target.value)) {
        selectedChoiceValue = [];
        selectedChoiceValue = [...selectedChoiceValue, e.target.value];
      }
    }
    if (onChange) onChange(e, selectedChoiceValue);
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("fieldset", {
    className: ChoiceListClass,
    "data-test": "DesignSystem-ChoiceList-Wrapper"
  }, title && title.trim() && /*#__PURE__*/React.createElement(Label, {
    withInput: true
  }, title.trim()), allowMultiple ? /*#__PURE__*/React.createElement("div", {
    className: `${alignment === 'horizontal' ? ChoiceHorizontalClass : ChoiceListVerticalClass}`
  }, renderCheckbox(choices, handleOnChange, disabled, size, alignment, selected, wrapLabel)) : /*#__PURE__*/React.createElement("div", {
    className: `${alignment === 'horizontal' ? ChoiceHorizontalClass : ChoiceListVerticalClass}`
  }, renderRadio(choices, handleOnChange, disabled, size, alignment, selected))));
};
ChoiceList.displayName = 'ChoiceList';
ChoiceList.defaultProps = {
  alignment: 'vertical',
  size: 'regular',
  allowMultiple: false,
  disabled: false
};

var css_248z$e = ".divider-module-Divider-Fo0Gy-5-0-0-9 {\n  border: none;\n  margin: 0;\n}\n\n.divider-module-Divider--vertical-Cdk22-5-0-0-9 {\n  width: 1px;\n  background: var(--secondary-light);\n}\n\n.divider-module-Divider--horizontal-3Z0nC-5-0-0-9 {\n  height: 1px;\n}\n\n.divider-module-Divider--basic-BqnEq-5-0-0-9 {\n  background: var(--secondary-light);\n}\n\n.divider-module-Divider--header-GMLJV-5-0-0-9 {\n  background: var(--secondary-dark);\n}\n";
var styles$e = {"Divider":"divider-module-Divider-Fo0Gy-5-0-0-9","Divider--vertical":"divider-module-Divider--vertical-Cdk22-5-0-0-9","Divider--horizontal":"divider-module-Divider--horizontal-3Z0nC-5-0-0-9","Divider--basic":"divider-module-Divider--basic-BqnEq-5-0-0-9","Divider--header":"divider-module-Divider--header-GMLJV-5-0-0-9"};
styleInject(css_248z$e);

const Divider = props => {
  const {
    vertical,
    appearance,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const DividerClass = classNames({
    [styles$e['Divider']]: true,
    [styles$e['Divider--horizontal']]: !vertical,
    [styles$e['Divider--vertical']]: vertical,
    [styles$e['Divider--basic']]: !vertical && appearance !== 'header',
    [styles$e['Divider--header']]: !vertical && appearance === 'header'
  }, className);
  return /*#__PURE__*/React.createElement("hr", _extends$2({
    "data-test": "DesignSystem-Divider"
  }, baseProps, {
    className: DividerClass
  }));
};
Divider.displayName = 'Divider';
Divider.defaultProps = {
  appearance: 'basic',
  vertical: false
};

const HelpText = props => {
  const {
    error,
    message,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    'mt-3': true
  }, className);
  if (!message) return null;
  if (error) {
    return /*#__PURE__*/React.createElement(InlineMessage, {
      size: "small",
      className: classes,
      appearance: "alert",
      description: message
    });
  }
  return /*#__PURE__*/React.createElement("div", _extends$2({}, baseProps, {
    className: classes
  }), /*#__PURE__*/React.createElement(Text, {
    appearance: "subtle",
    size: "small",
    weight: "medium"
  }, message));
};
HelpText.displayName = 'HelpText';

var css_248z$d = ".linkButton-module-LinkButton--eCyD-5-0-0-9 {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  position: relative;\n  vertical-align: middle;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  border: 0;\n  text-align: center;\n  padding: 0;\n  background: transparent;\n  font-weight: var(--font-weight-medium);\n  font-family: var(--font-family);\n  border-radius: var(--border-radius-10);\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.linkButton-module-LinkButton--iconAlign-right-BjcDC-5-0-0-9 {\n  flex-direction: row-reverse;\n}\n\n.linkButton-module-LinkButton-icon-Id1IM-5-0-0-9 {\n  line-height: inherit;\n  display: flex;\n  align-items: center;\n}\n\n.linkButton-module-LinkButton-icon--left-uCKUJ-5-0-0-9 {\n  margin-right: var(--spacing-10);\n}\n\n.linkButton-module-LinkButton-icon--right-wxMEa-5-0-0-9 {\n  margin-left: var(--spacing-10);\n}\n\n.linkButton-module-LinkButton--regular-QoGvH-5-0-0-9 {\n  line-height: var(--font-height);\n  font-size: var(--font-size);\n}\n\n.linkButton-module-LinkButton--tiny-21d67-5-0-0-9 {\n  line-height: var(--font-height-s);\n  font-size: var(--font-size-s);\n}\n\n.linkButton-module-LinkButton--default-1cpsS-5-0-0-9 {\n  color: var(--primary);\n}\n\n.linkButton-module-LinkButton--default-1cpsS-5-0-0-9:hover {\n  color: var(--primary-dark);\n}\n\n.linkButton-module-LinkButton--default-1cpsS-5-0-0-9:active {\n  color: var(--primary-darker);\n}\n\n.linkButton-module-LinkButton--default-1cpsS-5-0-0-9:focus,\n.linkButton-module-LinkButton--default-1cpsS-5-0-0-9:focus-visible {\n  outline: 0;\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n}\n\n.linkButton-module-LinkButton--default-1cpsS-5-0-0-9:disabled {\n  cursor: not-allowed;\n  pointer-events: none;\n  color: var(--primary-lighter);\n}\n\n/* Subtle Appearance */\n\n.linkButton-module-LinkButton--subtle-I8NtR-5-0-0-9 {\n  color: var(--inverse-lighter);\n}\n\n.linkButton-module-LinkButton--subtle-I8NtR-5-0-0-9:hover {\n  color: var(--inverse-light);\n}\n\n.linkButton-module-LinkButton--subtle-I8NtR-5-0-0-9:active {\n  color: var(--inverse);\n}\n\n.linkButton-module-LinkButton--subtle-I8NtR-5-0-0-9:focus,\n.linkButton-module-LinkButton--subtle-I8NtR-5-0-0-9:focus-visible {\n  outline: 0;\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n}\n\n.linkButton-module-LinkButton--subtle-I8NtR-5-0-0-9:disabled {\n  cursor: not-allowed;\n  pointer-events: none;\n  color: var(--inverse-lightest);\n}\n";
var styles$d = {"LinkButton":"linkButton-module-LinkButton--eCyD-5-0-0-9","LinkButton--iconAlign-right":"linkButton-module-LinkButton--iconAlign-right-BjcDC-5-0-0-9","LinkButton-icon":"linkButton-module-LinkButton-icon-Id1IM-5-0-0-9","LinkButton-icon--left":"linkButton-module-LinkButton-icon--left-uCKUJ-5-0-0-9","LinkButton-icon--right":"linkButton-module-LinkButton-icon--right-wxMEa-5-0-0-9","LinkButton--regular":"linkButton-module-LinkButton--regular-QoGvH-5-0-0-9","LinkButton--tiny":"linkButton-module-LinkButton--tiny-21d67-5-0-0-9","LinkButton--default":"linkButton-module-LinkButton--default-1cpsS-5-0-0-9","LinkButton--subtle":"linkButton-module-LinkButton--subtle-I8NtR-5-0-0-9"};
styleInject(css_248z$d);

const sizeMapping = {
  tiny: 12,
  regular: 16
};
const LinkButton = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    children,
    type,
    className,
    disabled,
    tabIndex,
    icon,
    subtle,
    size,
    iconAlign,
    iconType,
    ...rest
  } = props;
  const buttonClass = classNames({
    [styles$d['LinkButton']]: true,
    [styles$d[`LinkButton--${size}`]]: size,
    [styles$d['LinkButton--default']]: !subtle,
    [styles$d['LinkButton--subtle']]: subtle,
    [styles$d[`LinkButton--iconAlign-${iconAlign}`]]: children && iconAlign,
    [`${className}`]: className
  });
  const iconClass = classNames({
    [styles$d['LinkButton-icon']]: true,
    [styles$d[`LinkButton-icon--${iconAlign}`]]: children && iconAlign
  });
  return /*#__PURE__*/React.createElement("button", _extends$2({
    ref: ref,
    type: type,
    "data-test": "DesignSystem-LinkButton",
    className: buttonClass,
    disabled: disabled,
    tabIndex: tabIndex
  }, rest), /*#__PURE__*/React.createElement(React.Fragment, null, icon && /*#__PURE__*/React.createElement("div", {
    className: iconClass
  }, /*#__PURE__*/React.createElement(Icon, {
    "data-test": "DesignSystem-LinkButton--Icon",
    name: icon,
    type: iconType,
    size: size && sizeMapping[size]
  })), children));
});
LinkButton.displayName = 'LinkButton';
LinkButton.defaultProps = {
  size: 'regular',
  type: 'button',
  iconAlign: 'left'
};

var css_248z$c = ".actionCard-module-ActionCard-VTzbo-5-0-0-9 {\n  border-radius: var(--border-radius-10);\n  width: 100%;\n}\n\n.actionCard-module-ActionCard--default-ehk9Y-5-0-0-9 {\n  cursor: pointer;\n  border: var(--border-width-2-5) solid var(--secondary-dark);\n}\n\n.actionCard-module-ActionCard--default-ehk9Y-5-0-0-9:hover {\n  box-shadow: var(--shadow-l);\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.actionCard-module-ActionCard--default-ehk9Y-5-0-0-9:focus,\n.actionCard-module-ActionCard--default-ehk9Y-5-0-0-9:focus-visible {\n  outline: none;\n  border: var(--border-width-2-5) solid var(--secondary-dark);\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n}\n\n.actionCard-module-ActionCard--default-ehk9Y-5-0-0-9:active {\n  box-shadow: var(--shadow-m);\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.actionCard-module-ActionCard--disabled-Xbnn0-5-0-0-9 {\n  cursor: not-allowed;\n  position: relative;\n  border: var(--border-width-2-5) solid var(--secondary-lighter);\n}\n\n.actionCard-module-ActionCard-overlay--disabled-N4msm-5-0-0-9 {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 2;\n  opacity: var(--opacity-10);\n  background: var(--secondary-lightest);\n}\n";
var styles$c = {"ActionCard":"actionCard-module-ActionCard-VTzbo-5-0-0-9","ActionCard--default":"actionCard-module-ActionCard--default-ehk9Y-5-0-0-9","ActionCard--disabled":"actionCard-module-ActionCard--disabled-Xbnn0-5-0-0-9","ActionCard-overlay--disabled":"actionCard-module-ActionCard-overlay--disabled-N4msm-5-0-0-9"};
styleInject(css_248z$c);

const ActionCard = props => {
  const {
    children,
    disabled,
    className,
    zIndex,
    onClick,
    ...rest
  } = props;
  const classes = classNames({
    [styles$c['ActionCard']]: true,
    [styles$c['ActionCard--default']]: !disabled,
    [styles$c['ActionCard--disabled']]: disabled
  }, className);
  const onKeyDownHandler = event => {
    if (event.key === 'Enter' && onClick && !disabled) {
      onClick(event);
    }
  };
  const onClickHandler = event => {
    if (!disabled && onClick) {
      onClick(event);
    }
  };
  return /*#__PURE__*/React.createElement("div", _extends$2({
    tabIndex: disabled ? -1 : 0,
    role: "link",
    "data-test": "DesignSystem-ActionCard",
    className: classes,
    onClick: onClickHandler,
    onKeyDown: onKeyDownHandler
  }, rest), disabled && /*#__PURE__*/React.createElement("div", {
    style: {
      zIndex
    },
    "data-test": "DesignSystem-ActionCard-Overlay",
    className: styles$c['ActionCard-overlay--disabled']
  }), children);
};
ActionCard.displayName = 'ActionCard';

const selectedCardValues = new Map();
function useMultiSelect() {
  const [selectedCardIds, setSelectedCardIds] = React.useState([]);
  const isCardSelected = id => {
    return selectedCardIds.includes(id);
  };
  const updateCardSelection = (id, value) => {
    let idList = [...selectedCardIds];
    if (isCardSelected(id)) {
      idList = selectedCardIds.filter(cardKey => id !== cardKey);
      selectedCardValues.delete(id);
    } else {
      idList.push(id);
      selectedCardValues.set(id, value);
    }
    setSelectedCardIds(idList);
  };
  return {
    selectedCardIds,
    selectedCardValues,
    isCardSelected,
    updateCardSelection
  };
}

function useSingleSelect() {
  const [selectedCardIds, setSelectedCardIds] = React.useState([]);
  const [selectedCardValues, setSelectedCardValues] = React.useState([]);
  const isCardSelected = id => {
    return selectedCardIds.includes(id);
  };
  const updateCardSelection = (id, value) => {
    let idList = [...selectedCardIds];
    let valueList = [...selectedCardValues];
    if (selectedCardIds.includes(id)) {
      idList = [];
      valueList = [];
    } else {
      idList = [id];
      valueList = value ? [value] : [];
    }
    setSelectedCardIds(idList);
    setSelectedCardValues(valueList);
  };
  return {
    selectedCardIds,
    selectedCardValues,
    isCardSelected,
    updateCardSelection
  };
}

var css_248z$b = ".selectionCard-module-Selection-card-qn7-q-5-0-0-9 {\n  border-radius: var(--border-radius-10);\n  position: relative;\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.selectionCard-module-Selection-card--default-hU2T--5-0-0-9 {\n  cursor: pointer;\n  box-shadow: inset 0 0 0 var(--spacing-2-5) var(--secondary-dark);\n}\n\n.selectionCard-module-Selection-card--default-hU2T--5-0-0-9:hover {\n  box-shadow: inset 0 0 0 var(--spacing-05) var(--inverse-lightest);\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.selectionCard-module-Selection-card--default-hU2T--5-0-0-9:focus,\n.selectionCard-module-Selection-card--default-hU2T--5-0-0-9:focus-visible {\n  outline: none;\n  box-shadow: var(--shadow-spread) var(--secondary-shadow), inset 0 0 0 var(--spacing-2-5) var(--secondary-dark);\n}\n\n.selectionCard-module-Selection-card--default-hU2T--5-0-0-9:active {\n  box-shadow: inset 0 0 0 var(--spacing-05) var(--primary);\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.selectionCard-module-Selection-card--disabled-abVC--5-0-0-9 {\n  cursor: not-allowed;\n  outline: none;\n}\n\n.selectionCard-module-Selection-card--default-disabled-duc48-5-0-0-9 {\n  box-shadow: inset 0 0 0 var(--spacing-2-5) var(--secondary-lighter);\n}\n\n/* selected states */\n\n.selectionCard-module-Selection-card--selected-RWlWc-5-0-0-9 {\n  box-shadow: inset 0 0 0 var(--spacing-05) var(--primary);\n}\n\n.selectionCard-module-Selection-card--selected-RWlWc-5-0-0-9:hover {\n  box-shadow: inset 0 0 0 var(--spacing-05) var(--primary-dark);\n}\n\n.selectionCard-module-Selection-card--selected-RWlWc-5-0-0-9:focus,\n.selectionCard-module-Selection-card--selected-RWlWc-5-0-0-9:focus-visible {\n  outline: none;\n  box-shadow: var(--shadow-spread) var(--primary-shadow), inset 0 0 0 var(--spacing-05) var(--primary);\n}\n\n.selectionCard-module-Selection-card--selected-RWlWc-5-0-0-9:active {\n  box-shadow: inset 0 0 0 var(--spacing-05) var(--primary-darker);\n}\n\n.selectionCard-module-Selection-card--selected-disabled-pIKi1-5-0-0-9 {\n  box-shadow: inset 0 0 0 var(--spacing-2-5) var(--primary-lighter);\n}\n\n/* overlay classes */\n\n.selectionCard-module-Selection-card-overlay-9BMzm-5-0-0-9 {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 2;\n  position: absolute;\n  pointer-events: none;\n  border-radius: var(--border-radius-10);\n}\n\n.selectionCard-module-Selection-card--default-hU2T--5-0-0-9:active .selectionCard-module-Selection-card-overlay-9BMzm-5-0-0-9 {\n  background-color: var(--primary);\n  opacity: var(--opacity-3);\n}\n\n.selectionCard-module-Selection-card--default-disabled-duc48-5-0-0-9 .selectionCard-module-Selection-card-overlay-9BMzm-5-0-0-9 {\n  background-color: var(--secondary-lightest);\n  opacity: var(--opacity-10);\n}\n\n.selectionCard-module-Selection-card--selected-RWlWc-5-0-0-9 .selectionCard-module-Selection-card-overlay-9BMzm-5-0-0-9 {\n  background-color: var(--primary);\n  opacity: var(--opacity-1);\n}\n\n.selectionCard-module-Selection-card--selected-RWlWc-5-0-0-9:active .selectionCard-module-Selection-card-overlay-9BMzm-5-0-0-9 {\n  background-color: var(--primary);\n  opacity: var(--opacity-1);\n}\n\n.selectionCard-module-Selection-card--selected-disabled-pIKi1-5-0-0-9 .selectionCard-module-Selection-card-overlay-9BMzm-5-0-0-9 {\n  background-color: var(--primary-lightest);\n  opacity: var(--opacity-10);\n}\n";
var styles$b = {"Selection-card":"selectionCard-module-Selection-card-qn7-q-5-0-0-9","Selection-card--default":"selectionCard-module-Selection-card--default-hU2T--5-0-0-9","Selection-card--disabled":"selectionCard-module-Selection-card--disabled-abVC--5-0-0-9","Selection-card--default-disabled":"selectionCard-module-Selection-card--default-disabled-duc48-5-0-0-9","Selection-card--selected":"selectionCard-module-Selection-card--selected-RWlWc-5-0-0-9","Selection-card--selected-disabled":"selectionCard-module-Selection-card--selected-disabled-pIKi1-5-0-0-9","Selection-card-overlay":"selectionCard-module-Selection-card-overlay-9BMzm-5-0-0-9"};
styleInject(css_248z$b);

const SelectionCard = props => {
  const {
    children,
    onClick,
    disabled,
    id,
    cardValue,
    overlayZIndex,
    selected,
    className,
    ...rest
  } = props;
  const classes = classNames({
    [styles$b['Selection-card']]: true,
    [styles$b['Selection-card--default']]: !disabled,
    [styles$b['Selection-card--selected']]: selected && !disabled,
    [styles$b['Selection-card--disabled']]: disabled,
    [styles$b['Selection-card--default-disabled']]: disabled && !selected,
    [styles$b['Selection-card--selected-disabled']]: disabled && selected
  }, className);
  const onClickHandler = event => {
    if (!disabled && onClick) {
      onClick(event, id, cardValue);
    }
  };
  const onKeyDownHandler = event => {
    if (event.key === 'Enter' && !disabled) {
      onClickHandler(event);
    }
  };
  return /*#__PURE__*/React.createElement("div", _extends$2({
    role: "checkbox",
    "aria-checked": selected,
    tabIndex: disabled ? -1 : 0,
    onKeyDown: onKeyDownHandler,
    onClick: event => onClickHandler(event),
    className: classes,
    "data-test": "DesignSystem-SelectionCard"
  }, rest), /*#__PURE__*/React.createElement("div", {
    className: styles$b['Selection-card-overlay'],
    style: {
      zIndex: overlayZIndex
    },
    "data-test": "DesignSystem-SelectionCard-Overlay"
  }), children);
};
SelectionCard.defaultProps = {
  disabled: false,
  overlayZIndex: 2
};
SelectionCard.useMultiSelect = useMultiSelect;
SelectionCard.useSingleSelect = useSingleSelect;

function arrayMove(array, from, to) {
  array = array.slice();
  array.splice(to < 0 ? array.length + to : to, 0, array.splice(from, 1)[0]);
  return array;
}
function getTranslateOffset(element) {
  const style = window.getComputedStyle(element);
  return Math.max(parseInt(style['margin-top'], 10), parseInt(style['margin-bottom'], 10)) + element.getBoundingClientRect().height;
}
function isTouchEvent(event) {
  return event.touches && event.touches.length || event.changedTouches && event.changedTouches.length;
}
function transformItem(element, offsetY = 0, offsetX = 0) {
  if (!element) return;
  if (offsetY === null || offsetX === null) {
    element.style.removeProperty('transform');
    return;
  }
  element.style.transform = `translate(${offsetX}px, ${offsetY}px)`;
}
function setItemTransition(element, duration, timing) {
  if (element) {
    element.style['transition'] = `transform ${duration}ms${timing ? ` ${timing}` : ''}`;
  }
}

// returns the "slot" for the targetValue, aka where it should go
// in an ordered "array", it starts with -1 index
function binarySearch(array, targetValue) {
  let min = 0;
  let max = array.length - 1;
  let guess;
  while (min <= max) {
    guess = Math.floor((max + min) / 2);
    if (!array[guess + 1] || array[guess] <= targetValue && array[guess + 1] >= targetValue) {
      return guess;
    } else if (array[guess] < targetValue && array[guess + 1] < targetValue) {
      min = guess + 1;
    } else {
      max = guess - 1;
    }
  }
  return -1;
}

// A throttle function that uses requestAnimationFrame to rate limit
const schd = fn => {
  let lastArgs = [];
  let frameId = null;
  const wrapperFn = (...args) => {
    lastArgs = args;
    if (frameId) {
      return;
    }
    frameId = requestAnimationFrame(() => {
      frameId = null;
      fn(...lastArgs);
    });
  };
  wrapperFn.cancel = () => {
    if (frameId) {
      cancelAnimationFrame(frameId);
    }
  };
  return wrapperFn;
};

var css_248z$a = ".listbox-module-Listbox-SUVk--5-0-0-9 {\n  margin: 0;\n  padding: 0;\n  display: flex;\n  list-style-type: none;\n  flex-direction: column;\n}\n\n.listbox-module-Listbox-item-YQzPV-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  padding-left: var(--spacing-40);\n  padding-right: var(--spacing-40);\n}\n\n.listbox-module-Listbox-item-wrapper-fbx8s-5-0-0-9 {\n  width: 100%;\n}\n\n.listbox-module-Listbox-item-wrapper-fbx8s-5-0-0-9:last-child > .listbox-module-Listbox-divider-sZWin-5-0-0-9,\n.listbox-module-Listbox-item--draggable-3UvAw-5-0-0-9:last-child .listbox-module-Listbox-divider-sZWin-5-0-0-9 {\n  background: transparent;\n}\n\n/* Sizes */\n\n.listbox-module-Listbox-item--tight-48bRS-5-0-0-9 {\n  padding-top: var(--spacing-10);\n  padding-bottom: var(--spacing-10);\n}\n\n.listbox-module-Listbox-item--compressed-NDxwb-5-0-0-9 {\n  padding-top: var(--spacing-20);\n  padding-bottom: var(--spacing-20);\n}\n\n.listbox-module-Listbox-item--standard-q2FuW-5-0-0-9 {\n  padding-top: var(--spacing-30);\n  padding-bottom: var(--spacing-30);\n}\n\n/* Listbox type - option  */\n\n.listbox-module-Listbox-item--option-FMiJ2-5-0-0-9 {\n  cursor: pointer;\n}\n\n.listbox-module-Listbox-item--option-FMiJ2-5-0-0-9:hover {\n  background-color: var(--secondary-lightest);\n}\n\n.listbox-module-Listbox-item--option-FMiJ2-5-0-0-9:focus,\n.listbox-module-Listbox-item--option-FMiJ2-5-0-0-9:focus-visible {\n  outline: 3px auto var(--secondary-shadow);\n}\n\n.listbox-module-Listbox-item--option-FMiJ2-5-0-0-9:active {\n  background: var(--secondary-lighter);\n}\n\n.listbox-module-Listbox-item--selected-mbKE--5-0-0-9 {\n  background: rgba(220, 236, 249, 0.48);\n}\n\n.listbox-module-Listbox-item--selected-mbKE--5-0-0-9:hover {\n  background: rgba(151, 197, 240, 0.48);\n}\n\n.listbox-module-Listbox-item--selected-mbKE--5-0-0-9:focus,\n.listbox-module-Listbox-item--selected-mbKE--5-0-0-9:focus-visible {\n  outline: 3px auto rgba(0, 112, 221, 0.16);\n}\n\n.listbox-module-Listbox-item--selected-mbKE--5-0-0-9:active {\n  background: var(--primary-lighter);\n}\n\n/* Listbox type - resource  */\n\n.listbox-module-Listbox-item--resource-RGjFr-5-0-0-9 {\n  cursor: pointer;\n}\n\n.listbox-module-Listbox-item--resource-RGjFr-5-0-0-9:hover {\n  background-color: var(--secondary-lightest);\n}\n\n.listbox-module-Listbox-item--resource-RGjFr-5-0-0-9:focus,\n.listbox-module-Listbox-item--resource-RGjFr-5-0-0-9:focus-visible {\n  outline: 3px auto var(--secondary-shadow);\n}\n\n.listbox-module-Listbox-item--resource-RGjFr-5-0-0-9:active {\n  background: var(--secondary-lighter);\n}\n\n.listbox-module-Listbox-item--activated-tg1Eb-5-0-0-9 {\n  background: var(--primary-lightest);\n}\n\n/* Listbox type - description  */\n\n.listbox-module-Listbox-item--description-qiJzO-5-0-0-9:focus,\n.listbox-module-Listbox-item--description-qiJzO-5-0-0-9:focus-visible {\n  outline: none;\n}\n\n/* Listbox type - disabled  */\n\n.listbox-module-Listbox-item--disabled-x6TW2-5-0-0-9 {\n  opacity: var(--opacity-10);\n  pointer-events: none;\n}\n\n/* Listbox type - draggable  */\n\n.listbox-module-Listbox-item--draggable-3UvAw-5-0-0-9:focus {\n  outline: 3px auto var(--secondary-shadow);\n}\n\n.listbox-module-Listbox-item--drag-icon-Jt6Jw-5-0-0-9 {\n  cursor: grab;\n  margin-right: var(--spacing-20);\n}\n\n.listbox-module-Listbox-item--drag-icon-Jt6Jw-5-0-0-9:hover {\n  color: var(--inverse);\n}\n\n.listbox-module-Listbox-item--drag-icon-Jt6Jw-5-0-0-9:active {\n  color: var(--primary);\n}\n";
var styles$a = {"Listbox":"listbox-module-Listbox-SUVk--5-0-0-9","Listbox-item":"listbox-module-Listbox-item-YQzPV-5-0-0-9","Listbox-item-wrapper":"listbox-module-Listbox-item-wrapper-fbx8s-5-0-0-9","Listbox-divider":"listbox-module-Listbox-divider-sZWin-5-0-0-9","Listbox-item--draggable":"listbox-module-Listbox-item--draggable-3UvAw-5-0-0-9","Listbox-item--tight":"listbox-module-Listbox-item--tight-48bRS-5-0-0-9","Listbox-item--compressed":"listbox-module-Listbox-item--compressed-NDxwb-5-0-0-9","Listbox-item--standard":"listbox-module-Listbox-item--standard-q2FuW-5-0-0-9","Listbox-item--option":"listbox-module-Listbox-item--option-FMiJ2-5-0-0-9","Listbox-item--selected":"listbox-module-Listbox-item--selected-mbKE--5-0-0-9","Listbox-item--resource":"listbox-module-Listbox-item--resource-RGjFr-5-0-0-9","Listbox-item--activated":"listbox-module-Listbox-item--activated-tg1Eb-5-0-0-9","Listbox-item--description":"listbox-module-Listbox-item--description-qiJzO-5-0-0-9","Listbox-item--disabled":"listbox-module-Listbox-item--disabled-x6TW2-5-0-0-9","Listbox-item--drag-icon":"listbox-module-Listbox-item--drag-icon-Jt6Jw-5-0-0-9"};
styleInject(css_248z$a);

const AUTOSCROLL_ACTIVE_OFFSET = 200;
const AUTOSCROLL_SPEED_RATIO = 10;
class Draggable extends React.Component {
  constructor(props) {
    super(props);
    _defineProperty$1(this, "listRef", /*#__PURE__*/React.createRef());
    _defineProperty$1(this, "ghostRef", /*#__PURE__*/React.createRef());
    _defineProperty$1(this, "topOffsets", []);
    _defineProperty$1(this, "itemTranslateOffsets", []);
    _defineProperty$1(this, "initialYOffset", 0);
    _defineProperty$1(this, "lastScroll", 0);
    _defineProperty$1(this, "lastYOffset", 0);
    _defineProperty$1(this, "lastListYOffset", 0);
    _defineProperty$1(this, "dropTimeout", void 0);
    _defineProperty$1(this, "needle", -1);
    _defineProperty$1(this, "afterIndex", -2);
    _defineProperty$1(this, "state", {
      itemDragged: -1,
      itemDraggedOutOfBounds: -1,
      selectedItem: -1,
      initialX: 0,
      initialY: 0,
      targetX: 0,
      targetY: 0,
      targetHeight: 0,
      targetWidth: 0,
      scrollingSpeed: 0,
      scrollWindow: false
    });
    _defineProperty$1(this, "schdOnMouseMove", void 0);
    _defineProperty$1(this, "schdOnTouchMove", void 0);
    _defineProperty$1(this, "schdOnEnd", void 0);
    _defineProperty$1(this, "doScrolling", () => {
      const {
        scrollingSpeed,
        scrollWindow
      } = this.state;
      const listEl = this.listRef.current;
      window.requestAnimationFrame(() => {
        if (scrollWindow) {
          window.scrollTo(window.pageXOffset, window.pageYOffset + scrollingSpeed * 1.5);
        } else {
          listEl.scrollTop += scrollingSpeed;
        }
        if (scrollingSpeed !== 0) {
          this.doScrolling();
        }
      });
    });
    _defineProperty$1(this, "getChildren", () => {
      if (this.listRef && this.listRef.current) {
        return Array.from(this.listRef.current.children);
      }
      return [];
    });
    _defineProperty$1(this, "calculateOffsets", () => {
      this.topOffsets = this.getChildren().map(item => item.getBoundingClientRect().top);
      this.itemTranslateOffsets = this.getChildren().map(item => getTranslateOffset(item));
    });
    _defineProperty$1(this, "getTargetIndex", e => {
      return this.getChildren().findIndex(child => child === e.target || child.contains(e.target));
    });
    _defineProperty$1(this, "onMouseOrTouchStart", e => {
      if (this.dropTimeout && this.state.itemDragged > -1) {
        window.clearTimeout(this.dropTimeout);
        this.finishDrop();
      }
      const isTouch = isTouchEvent(e);
      if (!isTouch && e.button !== 0) return;
      const index = this.getTargetIndex(e);
      const listItemTouched = this.getChildren()[index];
      const isValidDragHandle = e.target?.classList.contains(styles$a['Listbox-item--drag-icon']);
      if (!isValidDragHandle) return;
      e.preventDefault();
      if (isTouch) {
        const opts = {
          passive: false
        };
        listItemTouched.style.touchAction = 'none';
        document.addEventListener('touchend', this.schdOnEnd, opts);
        document.addEventListener('touchmove', this.schdOnTouchMove, opts);
        document.addEventListener('touchcancel', this.schdOnEnd, opts);
      } else {
        document.addEventListener('mousemove', this.schdOnMouseMove);
        document.addEventListener('mouseup', this.schdOnEnd);
        const listItemDragged = this.getChildren()[this.state.itemDragged];
        if (listItemDragged && listItemDragged.style) {
          listItemDragged.style.touchAction = '';
        }
      }
      this.onStart(listItemTouched, isTouch ? e.touches[0].clientX : e.clientX, isTouch ? e.touches[0].clientY : e.clientY, index);
    });
    _defineProperty$1(this, "getYOffset", () => {
      const listScroll = this.listRef.current ? this.listRef.current.scrollTop : 0;
      return window.pageYOffset + listScroll;
    });
    _defineProperty$1(this, "onStart", (target, clientX, clientY, index) => {
      if (this.state.selectedItem > -1) {
        this.setState({
          selectedItem: -1
        });
        this.needle = -1;
      }
      const targetRect = target.getBoundingClientRect();
      const targetStyles = window.getComputedStyle(target);
      this.calculateOffsets();
      this.initialYOffset = this.getYOffset();
      this.lastYOffset = window.pageYOffset;
      this.lastListYOffset = this.listRef.current.scrollTop;
      this.setState({
        itemDragged: index,
        targetX: targetRect.left - parseInt(targetStyles['margin-left'], 10),
        targetY: targetRect.top - parseInt(targetStyles['margin-top'], 10),
        targetHeight: targetRect.height,
        targetWidth: targetRect.width,
        initialX: clientX,
        initialY: clientY
      });
    });
    _defineProperty$1(this, "onMouseMove", e => {
      e.cancelable && e.preventDefault();
      this.onMove(e.clientX, e.clientY);
    });
    _defineProperty$1(this, "onTouchMove", e => {
      e.cancelable && e.preventDefault();
      this.onMove(e.touches[0].clientX, e.touches[0].clientY);
    });
    _defineProperty$1(this, "onWheel", e => {
      if (this.state.itemDragged < 0) return;
      this.lastScroll = this.listRef.current.scrollTop += e.deltaY;
      this.moveOtherItems();
    });
    _defineProperty$1(this, "onMove", (clientX, clientY) => {
      if (this.state.itemDragged === -1) return null;
      transformItem(this.ghostRef.current, clientY - this.state.initialY, this.props.lockVertically ? 0 : clientX - this.state.initialX);
      this.autoScrolling(clientY);
      this.moveOtherItems();
      return;
    });
    _defineProperty$1(this, "moveOtherItems", () => {
      const targetRect = this.ghostRef.current.getBoundingClientRect();
      const itemVerticalCenter = targetRect.top + targetRect.height / 2;
      const offset = getTranslateOffset(this.getChildren()[this.state.itemDragged]);
      const currentYOffset = this.getYOffset();
      // adjust offsets if scrolling happens during the item movement
      if (this.initialYOffset !== currentYOffset) {
        this.topOffsets = this.topOffsets.map(offset => offset - (currentYOffset - this.initialYOffset));
        this.initialYOffset = currentYOffset;
      }
      if (this.isDraggedItemOutOfBounds() && this.props.removableByMove) {
        this.afterIndex = this.topOffsets.length + 1;
      } else {
        this.afterIndex = binarySearch(this.topOffsets, itemVerticalCenter);
      }
      this.animateItems(this.afterIndex === -1 ? 0 : this.afterIndex, this.state.itemDragged, offset);
    });
    _defineProperty$1(this, "autoScrolling", clientY => {
      const {
        top,
        bottom,
        height
      } = this.listRef.current.getBoundingClientRect();
      const viewportHeight = window.innerHeight || document.documentElement.clientHeight;
      // auto scrolling for the window (down)
      if (bottom > viewportHeight && viewportHeight - clientY < AUTOSCROLL_ACTIVE_OFFSET) {
        this.setState({
          scrollingSpeed: Math.round((AUTOSCROLL_ACTIVE_OFFSET - (viewportHeight - clientY)) / AUTOSCROLL_SPEED_RATIO),
          scrollWindow: true
        });
        // auto scrolling for the window (up)
      } else if (top < 0 && clientY < AUTOSCROLL_ACTIVE_OFFSET) {
        this.setState({
          scrollingSpeed: Math.round((AUTOSCROLL_ACTIVE_OFFSET - clientY) / -AUTOSCROLL_SPEED_RATIO),
          scrollWindow: true
        });
      } else {
        if (this.state.scrollWindow && this.state.scrollingSpeed !== 0) {
          this.setState({
            scrollingSpeed: 0,
            scrollWindow: false
          });
        }
        // auto scrolling for containers with overflow
        if (height + 20 < this.listRef.current.scrollHeight) {
          let scrollingSpeed = 0;
          if (clientY - top < AUTOSCROLL_ACTIVE_OFFSET) {
            scrollingSpeed = Math.round((AUTOSCROLL_ACTIVE_OFFSET - (clientY - top)) / -AUTOSCROLL_SPEED_RATIO);
          } else if (bottom - clientY < AUTOSCROLL_ACTIVE_OFFSET) {
            scrollingSpeed = Math.round((AUTOSCROLL_ACTIVE_OFFSET - (bottom - clientY)) / AUTOSCROLL_SPEED_RATIO);
          }
          if (this.state.scrollingSpeed !== scrollingSpeed) {
            this.setState({
              scrollingSpeed
            });
          }
        }
      }
    });
    _defineProperty$1(this, "animateItems", (needle, movedItem, offset, animateMovedItem = false) => {
      this.getChildren().forEach((item, i) => {
        setItemTransition(item, this.props.transitionDuration);
        if (movedItem === i && animateMovedItem) {
          if (movedItem === needle) {
            return transformItem(item, null);
          }
          transformItem(item, movedItem < needle ? this.itemTranslateOffsets.slice(movedItem + 1, needle + 1).reduce((a, b) => a + b, 0) : this.itemTranslateOffsets.slice(needle, movedItem).reduce((a, b) => a + b, 0) * -1);
        } else if (movedItem < needle && i > movedItem && i <= needle) {
          transformItem(item, -offset);
        } else if (i < movedItem && movedItem > needle && i >= needle) {
          transformItem(item, offset);
        } else {
          transformItem(item, null);
        }
      });
    });
    _defineProperty$1(this, "isDraggedItemOutOfBounds", () => {
      const initialRect = this.getChildren()[this.state.itemDragged].getBoundingClientRect();
      const targetRect = this.ghostRef.current.getBoundingClientRect();
      if (Math.abs(initialRect.left - targetRect.left) > targetRect.width) {
        if (this.state.itemDraggedOutOfBounds === -1) {
          this.setState({
            itemDraggedOutOfBounds: this.state.itemDragged
          });
        }
        return true;
      }
      if (this.state.itemDraggedOutOfBounds > -1) {
        this.setState({
          itemDraggedOutOfBounds: -1
        });
      }
      return false;
    });
    _defineProperty$1(this, "onEnd", e => {
      e.cancelable && e.preventDefault();
      document.removeEventListener('mousemove', this.schdOnMouseMove);
      document.removeEventListener('touchmove', this.schdOnTouchMove);
      document.removeEventListener('mouseup', this.schdOnEnd);
      document.removeEventListener('touchup', this.schdOnEnd);
      document.removeEventListener('touchcancel', this.schdOnEnd);
      const removeItem = this.props.removableByMove && this.isDraggedItemOutOfBounds();
      if (!removeItem && this.props.transitionDuration > 0 && this.afterIndex !== -2) {
        // animate drop
        schd(() => {
          setItemTransition(this.ghostRef.current, this.props.transitionDuration, 'cubic-bezier(0.2, 0, 0.38, 0.9)');
          if (this.afterIndex < 1 && this.state.itemDragged === 0) {
            transformItem(this.ghostRef.current, 0, 0);
          } else {
            transformItem(this.ghostRef.current,
            // compensate window scroll
            -(window.pageYOffset - this.lastYOffset) +
            // compensate container scroll
            -(this.listRef.current.scrollTop - this.lastListYOffset) + (this.state.itemDragged < this.afterIndex ? this.itemTranslateOffsets.slice(this.state.itemDragged + 1, this.afterIndex + 1).reduce((a, b) => a + b, 0) : this.itemTranslateOffsets.slice(this.afterIndex < 0 ? 0 : this.afterIndex, this.state.itemDragged).reduce((a, b) => a + b, 0) * -1), 0);
          }
        })();
      }
      this.dropTimeout = window.setTimeout(this.finishDrop, removeItem || this.afterIndex === -2 ? 0 : this.props.transitionDuration);
    });
    _defineProperty$1(this, "finishDrop", () => {
      const removeItem = this.props.removableByMove && this.isDraggedItemOutOfBounds();
      if (removeItem || this.afterIndex > -2 && this.state.itemDragged !== this.afterIndex) {
        this.props.onChange({
          oldIndex: this.state.itemDragged,
          newIndex: removeItem ? -1 : Math.max(this.afterIndex, 0),
          targetRect: this.ghostRef.current.getBoundingClientRect()
        });
      }
      this.getChildren().forEach(item => {
        setItemTransition(item, 0);
        transformItem(item, null);
        item.style.touchAction = '';
      });
      this.setState({
        itemDragged: -1,
        scrollingSpeed: 0
      });
      this.afterIndex = -2;
      // sometimes the scroll gets messed up after the drop, fix:
      if (this.lastScroll > 0) {
        this.listRef.current.scrollTop = this.lastScroll;
        this.lastScroll = 0;
      }
    });
    _defineProperty$1(this, "onKeyDown", e => {
      const selectedItem = this.state.selectedItem;
      const index = this.getTargetIndex(e);
      if (index === -1 || this.props.values[index] && this.props.values[index].props.disabled) {
        return;
      }
      if (e.key === ' ') {
        e.preventDefault();
        if (selectedItem === index) {
          if (selectedItem !== this.needle) {
            this.getChildren().forEach(item => {
              setItemTransition(item, 0);
              transformItem(item, null);
            });
            this.props.onChange({
              oldIndex: selectedItem,
              newIndex: this.needle,
              targetRect: this.getChildren()[this.needle].getBoundingClientRect()
            });
            this.getChildren()[this.needle].focus();
          }
          this.setState({
            selectedItem: -1
          });
          this.needle = -1;
        } else {
          this.setState({
            selectedItem: index
          });
          this.needle = index;
          this.calculateOffsets();
        }
      }
      if ((e.key === 'ArrowDown' || e.key === 'j') && selectedItem > -1 && this.needle < this.props.values.length - 1) {
        e.preventDefault();
        const offset = getTranslateOffset(this.getChildren()[selectedItem]);
        this.needle++;
        this.animateItems(this.needle, selectedItem, offset, true);
      }
      if ((e.key === 'ArrowUp' || e.key === 'k') && selectedItem > -1 && this.needle > 0) {
        e.preventDefault();
        const offset = getTranslateOffset(this.getChildren()[selectedItem]);
        this.needle--;
        this.animateItems(this.needle, selectedItem, offset, true);
      }
      if (e.key === 'Escape' && selectedItem > -1) {
        this.getChildren().forEach(item => {
          setItemTransition(item, 0);
          transformItem(item, null);
        });
        this.setState({
          selectedItem: -1
        });
        this.needle = -1;
      }
      if ((e.key === 'Tab' || e.key === 'Enter') && selectedItem > -1) {
        e.preventDefault();
      }
    });
    this.schdOnMouseMove = schd(this.onMouseMove);
    this.schdOnTouchMove = schd(this.onTouchMove);
    this.schdOnEnd = schd(this.onEnd);
  }
  componentDidMount() {
    this.calculateOffsets();
    document.addEventListener('touchstart', this.onMouseOrTouchStart, {
      passive: false,
      capture: false
    });
    document.addEventListener('mousedown', this.onMouseOrTouchStart);
  }
  componentDidUpdate(_prevProps, prevState) {
    if (prevState.scrollingSpeed !== this.state.scrollingSpeed && prevState.scrollingSpeed === 0) {
      this.doScrolling();
    }
  }
  componentWillUnmount() {
    document.removeEventListener('touchstart', this.onMouseOrTouchStart);
    document.removeEventListener('mousedown', this.onMouseOrTouchStart);
    if (this.dropTimeout) {
      window.clearTimeout(this.dropTimeout);
    }
    this.schdOnMouseMove.cancel();
    this.schdOnTouchMove.cancel();
    this.schdOnEnd.cancel();
  }
  render() {
    const baseStyle = {
      userSelect: 'none',
      WebkitUserSelect: 'none',
      MozUserSelect: 'none',
      msUserSelect: 'none',
      boxSizing: 'border-box',
      position: 'relative'
    };
    const ghostStyle = {
      ...baseStyle,
      top: this.state.targetY,
      left: this.state.targetX,
      width: this.state.targetWidth,
      height: this.state.targetHeight,
      backgroundColor: '#ffffff',
      listStyleType: 'none',
      margin: 0,
      position: 'fixed',
      boxShadow: '0 4px 16px 0 rgba(0, 0, 0, 0.16)'
    };
    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.renderList({
      children: this.props.values.map((value, index) => {
        const isHidden = index === this.state.itemDragged;
        const isSelected = index === this.state.selectedItem;
        const isDisabled = this.props.values[index] && this.props.values[index].props.disabled;
        const props = {
          key: index,
          tabIndex: isDisabled ? -1 : 0,
          onKeyDown: this.onKeyDown,
          style: {
            ...baseStyle,
            visibility: isHidden ? 'hidden' : undefined,
            zIndex: isSelected ? 5000 : 0
          }
        };
        return this.props.renderItem({
          value,
          props,
          index,
          isDragged: false,
          isSelected,
          isOutOfBounds: false
        });
      }),
      isDragged: this.state.itemDragged > -1,
      props: {
        ref: this.listRef
      }
    }), this.state.itemDragged > -1 && /*#__PURE__*/ReactDOM.createPortal(this.props.renderItem({
      value: this.props.values[this.state.itemDragged],
      props: {
        ref: this.ghostRef,
        style: ghostStyle,
        onWheel: this.onWheel
      },
      index: this.state.itemDragged,
      isDragged: true,
      isSelected: false,
      isOutOfBounds: this.state.itemDraggedOutOfBounds > -1
    }), document.body));
  }
}
_defineProperty$1(Draggable, "defaultProps", {
  transitionDuration: 240,
  lockVertically: false,
  removableByMove: false
});

const DraggableList = props => {
  const {
    children,
    className,
    tagName: Tag
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames(styles$a.Listbox, className);
  const renderChildren = React__default.Children.toArray(children).map(child => {
    const element = /*#__PURE__*/React__default.cloneElement(child, {
      parentProps: {
        ...props
      }
    });
    return element;
  });
  const [childList, setChildList] = React__default.useState(renderChildren);
  const onChangeHandler = props => {
    const {
      oldIndex,
      newIndex
    } = props;
    const updatedList = arrayMove(childList, oldIndex, newIndex);
    setChildList(updatedList);
  };
  return /*#__PURE__*/React__default.createElement(Draggable, {
    values: childList,
    onChange: onChangeHandler,
    renderItem: ({
      value,
      props
    }) => {
      return /*#__PURE__*/React__default.createElement("div", _extends$2({}, props, {
        className: styles$a['Listbox-item--draggable']
      }), value);
    },
    renderList: ({
      children,
      props
    }) => /*#__PURE__*/React__default.createElement(Tag, _extends$2({
      "data-test": "DesignSystem-Listbox"
    }, baseProps, {
      className: classes
    }, props), children)
  });
};

const isDisabledElement = element => {
  return element && element.getAttribute('data-disabled') === 'true';
};
const getNextSibling = element => {
  return element?.parentNode?.nextSibling?.firstChild;
};
const getPrevSibling = element => {
  return element?.parentNode?.previousSibling?.firstChild;
};
const focusOption = (element, direction) => {
  let iterateElement = element;
  while (iterateElement) {
    if (!isDisabledElement(iterateElement)) {
      iterateElement.focus();
      break;
    }
    if (direction === 'down') {
      iterateElement = getNextSibling(iterateElement);
    } else {
      iterateElement = getPrevSibling(iterateElement);
    }
  }
};
const onKeyDown = event => {
  const sourceElement = event.target;
  const nextElement = getNextSibling(sourceElement);
  const prevElement = getPrevSibling(sourceElement);
  switch (event.key) {
    case 'ArrowDown':
      event.preventDefault();
      focusOption(nextElement, 'down');
      break;
    case 'ArrowUp':
      event.preventDefault();
      focusOption(prevElement, 'up');
      break;
  }
};

const ListBody = props => {
  const {
    children,
    className,
    disabled,
    selected,
    activated,
    tabIndex
  } = props;
  const contextProp = React.useContext(ListboxContext);
  const {
    size,
    type,
    draggable
  } = contextProp;
  const itemClass = classNames({
    [styles$a['Listbox-item']]: true,
    [styles$a[`Listbox-item--${size}`]]: size,
    [styles$a[`Listbox-item--${type}`]]: type,
    [styles$a['Listbox-item--disabled']]: disabled,
    [styles$a['Listbox-item--selected']]: selected && type === 'option',
    [styles$a['Listbox-item--activated']]: activated && type === 'resource'
  }, className);
  return /*#__PURE__*/React.createElement("div", {
    "data-disabled": disabled,
    "data-test": "DesignSystem-Listbox-ItemWrapper",
    tabIndex: draggable ? -1 : tabIndex || 0,
    className: itemClass,
    onKeyDown: onKeyDown,
    role: "tablist"
  }, draggable && /*#__PURE__*/React.createElement(Icon, {
    size: 16,
    appearance: "subtle",
    name: "drag_indicator",
    className: styles$a['Listbox-item--drag-icon'],
    "data-test": "DesignSystem-Listbox-DragIcon"
  }), children);
};
ListBody.displayName = 'ListBody';

const getAnimationClass = (uniqueKey, expanded) => {
  if (expanded) return `nestedList-open-${uniqueKey} 240ms cubic-bezier(0, 0, 0.38, 0.9)`;else if (!expanded) return `nestedList-close-${uniqueKey} 160ms cubic-bezier(0.2, 0, 1, 0.9)`;
  return '';
};
const getHeight = listItemRef => {
  const scrollHeight = listItemRef.current?.scrollHeight;
  return scrollHeight;
};
const menuItemAnimation = (listItemRef, uniqueKey) => {
  return `
      @keyframes nestedList-open-${uniqueKey} {
      from {
        height: 0px;
      }
      to {
        height: ${getHeight(listItemRef)}px;
      }
    }

    @keyframes nestedList-close-${uniqueKey} {
      from {
        height: ${getHeight(listItemRef)}px;
      }
      to {
        height: 0px;
      }
    }
  `;
};

function usePrevious(value) {
  const ref = React.useRef();
  React.useEffect(() => {
    if (value != undefined) {
      ref.current = value;
    }
  }, [value]);
  return ref.current;
}
const NestedList = props => {
  const {
    nestedBody,
    expanded
  } = props;
  const prevState = usePrevious(expanded);
  const [open, setOpen] = React.useState(expanded);
  const [keyframe, setKeyframe] = React.useState('');
  const listItemRef = React.useRef(null);
  const uniqueKey = Math.random().toString(36).substring(2, 6);
  const [animation, setAnimation] = React.useState(getAnimationClass(uniqueKey, expanded));
  React.useEffect(() => {
    if (prevState != undefined && prevState !== expanded) {
      setOpen(true);
    }
    requestAnimationFrame(() => {
      const result = menuItemAnimation(listItemRef, uniqueKey);
      setKeyframe(result);
    });
    const animationClass = getAnimationClass(uniqueKey, expanded);
    setAnimation(animationClass);
  }, [expanded]);
  const handleAnimationEnd = () => {
    !expanded && setOpen(false);
  };
  const styles = {
    animation,
    overflow: 'hidden',
    animationFillMode: 'forwards'
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("style", null, keyframe), nestedBody && open && /*#__PURE__*/React.createElement("div", {
    style: styles,
    onAnimationEnd: handleAnimationEnd,
    "data-test": "DesignSystem-Listbox--Nested-Item",
    ref: listItemRef
  }, nestedBody));
};

const ListboxItem = props => {
  const {
    nestedBody,
    expanded,
    id,
    onClick,
    value,
    tagName: Tag = 'li',
    ...rest
  } = props;
  const contextProp = React.useContext(ListboxContext);
  const {
    showDivider,
    draggable
  } = contextProp;
  const onClickHandler = e => {
    onClick && onClick(e, id, value);
  };
  const tagClass = classNames({
    [styles$a['Listbox-item-wrapper']]: !draggable
  });
  return /*#__PURE__*/React.createElement(Tag, _extends$2({
    id: id,
    "data-test": "DesignSystem-Listbox-Item"
  }, rest, {
    onClick: onClickHandler,
    "data-value": value,
    className: tagClass
  }), /*#__PURE__*/React.createElement(ListBody, props), nestedBody && /*#__PURE__*/React.createElement(NestedList, {
    expanded: expanded,
    nestedBody: nestedBody
  }), showDivider && /*#__PURE__*/React.createElement(Divider, {
    className: styles$a['Listbox-divider']
  }));
};
ListboxItem.displayName = 'Listbox.Item';
ListboxItem.defaultProps = {
  tagName: 'li'
};

const ListboxContext = /*#__PURE__*/React.createContext({
  size: 'standard',
  type: 'resource',
  draggable: false,
  showDivider: true
});
const {
  Provider
} = ListboxContext;
const Listbox = props => {
  const {
    children,
    className,
    draggable,
    size,
    type,
    showDivider,
    tagName: Tag,
    ...rest
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames(styles$a.Listbox, className);
  const sharedProp = {
    size,
    type,
    draggable,
    showDivider
  };
  return /*#__PURE__*/React.createElement(Provider, {
    value: sharedProp
  }, draggable ? /*#__PURE__*/React.createElement(DraggableList, props) : /*#__PURE__*/React.createElement(Tag, _extends$2({
    "data-test": "DesignSystem-Listbox"
  }, baseProps, {
    className: classes
  }, rest), children));
};
Listbox.displayName = 'Listbox';
Listbox.defaultProps = {
  tagName: 'ul',
  size: 'standard',
  type: 'resource',
  draggable: false,
  showDivider: true
};
Listbox.Item = ListboxItem;

// TextFieldCommon.tsx
const RenderHelpText = ({
  helpText,
  error
}) => /*#__PURE__*/React__default.createElement(HelpText, {
  className: "d-flex",
  message: helpText.trim().length > 0 ? helpText : ' ',
  error: error ? error : undefined
});
const RenderCounter = ({
  inputText,
  max
}) => /*#__PURE__*/React__default.createElement("div", {
  className: "mt-3 d-flex"
}, /*#__PURE__*/React__default.createElement(Text, {
  appearance: "subtle",
  className: "pr-2",
  color: inputText.length > max ? 'alert' : undefined,
  size: "small",
  weight: "medium"
}, inputText.length), /*#__PURE__*/React__default.createElement(Text, {
  appearance: "subtle",
  className: "pr-2",
  size: "small",
  weight: "medium"
}, "/"), /*#__PURE__*/React__default.createElement(Text, {
  appearance: "subtle",
  size: "small",
  weight: "medium"
}, max));

const TextFieldWithTextarea = props => {
  const {
    label,
    rows = 3,
    resize = true,
    required,
    error,
    onChange,
    value = '',
    max = 200,
    helpText = ' '
  } = props;
  const textareaRef = React.useRef(null);
  const [inputText, setInputText] = React.useState(value);
  const [helptextWidth, setHelptextWidth] = React.useState(0);
  const onChangeHandler = e => {
    setInputText(e.target.value);
    if (onChange) onChange(e);
  };
  const inputError = error || inputText.length > max;
  React.useEffect(() => {
    const textarea = textareaRef.current;
    if (window.ResizeObserver) {
      const resizeObserver = new window.ResizeObserver(entries => {
        const entry = entries[0];
        const {
          offsetWidth
        } = entry.target;
        setHelptextWidth(offsetWidth);
      });
      textarea && resizeObserver.observe(textarea);
      return () => {
        resizeObserver.disconnect();
      };
    }
    return () => {};
  }, []);
  return /*#__PURE__*/React.createElement("div", null, label && /*#__PURE__*/React.createElement(Label, {
    required: required,
    withInput: true
  }, label), /*#__PURE__*/React.createElement(Textarea, _extends$2({}, props, {
    resize: resize,
    rows: rows,
    onChange: onChangeHandler,
    error: inputError,
    ref: textareaRef
  })), /*#__PURE__*/React.createElement("div", {
    className: "d-flex justify-content-between",
    style: {
      width: helptextWidth
    }
  }, /*#__PURE__*/React.createElement(RenderHelpText, {
    helpText: helpText,
    error: inputError
  }), /*#__PURE__*/React.createElement(RenderCounter, {
    inputText: inputText,
    max: max
  })));
};

const TextFieldWithInput = props => {
  const {
    label,
    minWidth,
    required,
    error,
    onChange,
    value = '',
    max = 200,
    helpText = ' '
  } = props;
  const [inputText, setInputText] = React.useState(value);
  const onChangeHandler = event => {
    setInputText(event.target.value);
    if (onChange) onChange(event);
  };
  const inputError = error || inputText.length > max;
  return /*#__PURE__*/React.createElement("div", null, label && /*#__PURE__*/React.createElement(Label, {
    required: required,
    withInput: true
  }, label), /*#__PURE__*/React.createElement(Input, _extends$2({}, props, {
    error: inputError,
    onChange: onChangeHandler
  })), /*#__PURE__*/React.createElement("div", {
    className: "d-flex justify-content-between",
    style: {
      minWidth
    }
  }, /*#__PURE__*/React.createElement(RenderHelpText, {
    helpText: helpText,
    error: inputError
  }), /*#__PURE__*/React.createElement(RenderCounter, {
    inputText: inputText,
    max: max
  })));
};
TextFieldWithInput.defaultProps = {
  minWidth: 256
};

const TextField = props => {
  const {
    withTextarea
  } = props;
  if (withTextarea) {
    return /*#__PURE__*/React.createElement(TextFieldWithTextarea, props);
  }
  return /*#__PURE__*/React.createElement(TextFieldWithInput, props);
};
TextField.displayName = 'TextField';

const SelectionAvatar = props => {
  const {
    icon,
    image,
    disabled,
    ...rest
  } = props;
  const avatarClassName = classNames({
    ['cursor-pointer']: !disabled
  });
  return /*#__PURE__*/React.createElement(Avatar, _extends$2({
    role: "checkbox"
  }, rest, {
    disabled: disabled,
    withTooltip: true,
    className: avatarClassName
  }), image || icon);
};

const AvatarSelectionContext = /*#__PURE__*/React.createContext({});

var css_248z$9 = "/* Selection avatar group */\n.avatarSelection-module-SelectionAvatarGroup-yS1Px-5-0-0-9 {\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n}\n\n/* Selection Avatar List */\n\n.avatarSelection-module-SelectionAvatarGroup-item-1QsB6-5-0-0-9 {\n  margin-right: calc(var(--spacing-05) * -1);\n  border-radius: var(--border-radius-full);\n  display: flex;\n  transition: transform var(--duration--fast-01) var(--standard-productive-curve);\n  position: relative;\n}\n\n.avatarSelection-module-SelectionAvatarGroup-item--active-dofCY-5-0-0-9:focus,\n.avatarSelection-module-SelectionAvatarGroup-item--active-dofCY-5-0-0-9:focus-visible {\n  outline: 3px solid var(--primary-shadow);\n  outline-offset: 3px;\n}\n\n.avatarSelection-module-SelectionAvatarGroup-item--active-dofCY-5-0-0-9:active {\n  outline: var(--spacing-05) solid #00509f;\n  outline-offset: var(--spacing-2-5);\n}\n\n.avatarSelection-module-SelectionAvatarGroup-wrapper-BtN8f-5-0-0-9:hover .avatarSelection-module-SelectionAvatarGroup-item--active-dofCY-5-0-0-9 {\n  transform: translateY(-8px);\n}\n\n/* Selected Avatar Group Item */\n\n.avatarSelection-module-SelectionAvatarGroup-item--selected-yhD56-5-0-0-9 {\n  outline-offset: var(--spacing-2-5);\n  outline: var(--spacing-05) solid var(--primary-dark);\n}\n\n.avatarSelection-module-SelectionAvatarGroup-item--selected-yhD56-5-0-0-9:active {\n  outline-offset: var(--spacing-2-5);\n  outline: var(--spacing-05) solid var(--primary-darker);\n}\n\n.avatarSelection-module-SelectionAvatarGroup-item--selected-yhD56-5-0-0-9:focus,\n.avatarSelection-module-SelectionAvatarGroup-item--selected-yhD56-5-0-0-9:focus-visible {\n  box-shadow: 0 0 0 var(--spacing-2-5) white, 0 0 0 3px var(--primary-dark), 0 0 0 3px var(--primary-shadow) !important;\n}\n\n/* Selection Avatar Popover */\n\n.avatarSelection-module-SelectionAvatarGroup-popper-Rcnff-5-0-0-9 {\n  overflow-y: auto;\n  box-sizing: border-box;\n}\n\n.avatarSelection-module-SelectionAvatar-inputWrapper-13xTx-5-0-0-9 {\n  border-bottom: var(--border-width-2-5) solid var(--secondary-dark);\n}\n\n.avatarSelection-module-SelectionAvatar-inputWrapper-13xTx-5-0-0-9:focus-within {\n  border-bottom: var(--border-width-2-5) solid var(--primary);\n}\n\n.avatarSelection-module-SelectionAvatar-input-OWRhy-5-0-0-9 {\n  min-width: unset !important;\n  background: transparent;\n  border-bottom-left-radius: 0px;\n  border-bottom-right-radius: 0;\n  height: 36px;\n}\n\n.avatarSelection-module-SelectionAvatar-input-OWRhy-5-0-0-9,\n.avatarSelection-module-SelectionAvatar-input-OWRhy-5-0-0-9:focus-within {\n  border: unset !important;\n  box-shadow: none !important;\n}\n\n.avatarSelection-module-SelectionAvatar-input-OWRhy-5-0-0-9:hover {\n  background-color: #f4f4f4;\n}\n\n/* Selection Avatar Count */\n\n.avatarSelection-module-SelectionAvatarCount-wrapper-NrqFi-5-0-0-9 {\n  border-radius: var(--border-radius-full);\n}\n\n.avatarSelection-module-SelectionAvatarCount-s-0H0-5-0-0-9:hover {\n  background: var(--secondary);\n}\n\n.avatarSelection-module-SelectionAvatarCount-s-0H0-5-0-0-9:active {\n  background: var(--secondary-dark);\n}\n\n.avatarSelection-module-SelectionAvatarCount-wrapper-NrqFi-5-0-0-9:focus,\n.avatarSelection-module-SelectionAvatarCount-wrapper-NrqFi-5-0-0-9:focus-visible {\n  outline: 3px solid var(--primary-shadow);\n  outline-offset: 3px;\n}\n\n.avatarSelection-module-SelectionAvatarCount--selected--P-iP-5-0-0-9 {\n  outline-offset: var(--spacing-2-5);\n  outline: var(--spacing-05) solid var(--primary-dark);\n}\n\n.avatarSelection-module-SelectionAvatarCount--selected--P-iP-5-0-0-9:focus,\n.avatarSelection-module-SelectionAvatarCount--selected--P-iP-5-0-0-9:focus-visible {\n  box-shadow: 0 0 0 var(--spacing-2-5) white, 0 0 0 3px var(--primary-dark), 0 0 0 3px var(--primary-shadow) !important;\n}\n";
var styles$9 = {"SelectionAvatarGroup":"avatarSelection-module-SelectionAvatarGroup-yS1Px-5-0-0-9","SelectionAvatarGroup-item":"avatarSelection-module-SelectionAvatarGroup-item-1QsB6-5-0-0-9","SelectionAvatarGroup-item--active":"avatarSelection-module-SelectionAvatarGroup-item--active-dofCY-5-0-0-9","SelectionAvatarGroup-wrapper":"avatarSelection-module-SelectionAvatarGroup-wrapper-BtN8f-5-0-0-9","SelectionAvatarGroup-item--selected":"avatarSelection-module-SelectionAvatarGroup-item--selected-yhD56-5-0-0-9","SelectionAvatarGroup-popper":"avatarSelection-module-SelectionAvatarGroup-popper-Rcnff-5-0-0-9","SelectionAvatar-inputWrapper":"avatarSelection-module-SelectionAvatar-inputWrapper-13xTx-5-0-0-9","SelectionAvatar-input":"avatarSelection-module-SelectionAvatar-input-OWRhy-5-0-0-9","SelectionAvatarCount-wrapper":"avatarSelection-module-SelectionAvatarCount-wrapper-NrqFi-5-0-0-9","SelectionAvatarCount":"avatarSelection-module-SelectionAvatarCount-s-0H0-5-0-0-9","SelectionAvatarCount--selected":"avatarSelection-module-SelectionAvatarCount--selected--P-iP-5-0-0-9"};
styleInject(css_248z$9);

const SelectionAvatarsWrapper = props => {
  const {
    avatarList,
    avatarStyle,
    tooltipPosition,
    size,
    avatarRenderer
  } = props;
  const contextProp = React.useContext(AvatarSelectionContext);
  const {
    setSelectedItems,
    selectedItems,
    onSelect
  } = contextProp;
  const onClickHandler = item => {
    if (item.disabled) {
      return;
    }
    let list = selectedItems;
    if (selectedItems?.includes(item)) {
      list = selectedItems.filter(selectedItem => selectedItem !== item);
    } else {
      list?.push(item);
    }
    list && setSelectedItems?.([...list]);
    onSelect && onSelect(list);
  };
  const handleKeyDown = (event, item) => {
    if (item.disabled) {
      return;
    }
    switch (event.key) {
      case 'Enter':
        onClickHandler(item);
        break;
    }
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, avatarList.map((avatarItem, index) => {
    const {
      appearance,
      firstName,
      lastName,
      icon,
      image,
      disabled,
      tooltipSuffix,
      ...rest
    } = avatarItem;
    const GroupClass = classNames({
      [styles$9[`SelectionAvatarGroup-item`]]: true,
      [styles$9[`SelectionAvatarGroup-item--active`]]: !disabled,
      [styles$9[`SelectionAvatarGroup-item--selected`]]: selectedItems?.includes(avatarItem)
    });
    const newAvatarStyle = {
      ...avatarStyle,
      zIndex: avatarList.length - index
    };
    if (avatarRenderer) {
      return avatarRenderer(avatarItem);
    }
    return /*#__PURE__*/React.createElement("span", {
      key: index,
      className: styles$9['SelectionAvatarGroup-wrapper']
    }, /*#__PURE__*/React.createElement("div", {
      tabIndex: -1,
      role: "checkbox",
      style: newAvatarStyle,
      className: GroupClass,
      "data-test": "DesignSystem-AvatarSelection--Avatar",
      "aria-checked": selectedItems && selectedItems.includes(avatarItem),
      onClick: () => onClickHandler(avatarItem),
      onKeyDown: event => handleKeyDown(event, avatarItem)
    }, /*#__PURE__*/React.createElement(SelectionAvatar, _extends$2({
      size: size,
      appearance: appearance,
      firstName: firstName,
      lastName: lastName,
      withTooltip: true,
      tooltipPosition: tooltipPosition,
      icon: icon,
      image: image,
      disabled: disabled,
      tooltipSuffix: tooltipSuffix
    }, rest))));
  }));
};

const handleKeyDown$6 = (event, setOpenPopover, setHighlightFirstItem, setHighlightLastItem) => {
  switch (event.key) {
    case 'Enter':
      setOpenPopover?.(true);
      setHighlightFirstItem?.(true);
      break;
    case 'ArrowDown':
      setOpenPopover?.(true);
      setHighlightFirstItem?.(true);
      break;
    case 'ArrowUp':
      setOpenPopover?.(true);
      setHighlightLastItem?.(true);
      break;
  }
};
const focusListItem$3 = (position, setFocusedOption, listRef, withSearch) => {
  if (withSearch && position === 'down') {
    const searchInput = listRef.current?.querySelectorAll('[data-test="DesignSystem-AvatarSelection--Input"]');
    searchInput && searchInput[0]?.focus();
    setFocusedOption?.(searchInput);
    return;
  }
  const listItems = listRef.current?.querySelectorAll('[data-test="DesignSystem-Listbox-ItemWrapper"]');
  let targetOption;
  if (position === 'down') {
    targetOption = listItems?.[0];
  } else {
    targetOption = listItems?.[listItems.length - 1];
  }
  targetOption?.focus();
  targetOption?.scrollIntoView?.({
    block: 'center'
  });
  setFocusedOption && setFocusedOption(targetOption);
};

const AvatarSelectionCount = props => {
  const {
    hiddenAvatarCount,
    avatarStyle,
    size,
    hiddenAvatarList
  } = props;
  const contextProp = React.useContext(AvatarSelectionContext);
  const {
    selectedItems,
    setHighlightFirstItem,
    setHighlightLastItem,
    triggerRef,
    setOpenPopover,
    openPopover,
    popoverId
  } = contextProp;
  const [selectedItemCount, setSelectedItemCount] = React.useState(0);
  React.useEffect(() => {
    const selectedList = hiddenAvatarList.filter(data1 => selectedItems?.some(data2 => data2 === data1));
    setSelectedItemCount(selectedList.length);
  }, [selectedItems]);
  const wrapperClassName = classNames({
    [styles$9['SelectionAvatarCount-wrapper']]: true,
    [styles$9['SelectionAvatarGroup-item']]: true,
    [styles$9['SelectionAvatarCount--selected']]: selectedItemCount > 0
  });
  const avatarClassName = classNames({
    [styles$9.SelectionAvatarCount]: true,
    'cursor-pointer': true
  });
  const avatarTextClassName = classNames({
    'overflow-hidden': true,
    [avatarStyles['Avatar-content']]: true
  });
  return /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-AvatarSelection--TriggerAvatar",
    className: wrapperClassName,
    onKeyDown: event => handleKeyDown$6(event, setOpenPopover, setHighlightFirstItem, setHighlightLastItem),
    style: avatarStyle,
    tabIndex: 0,
    role: "button",
    "aria-haspopup": "listbox",
    "aria-expanded": openPopover,
    "aria-controls": popoverId,
    ref: triggerRef
  }, /*#__PURE__*/React.createElement(Avatar, {
    tabIndex: -1,
    size: size,
    appearance: "secondary",
    className: avatarClassName
  }, /*#__PURE__*/React.createElement(Text, {
    className: avatarTextClassName
  }, `+${hiddenAvatarCount}`)));
};

const handleKeyDown$5 = (event, focusedOption, setFocusedOption, setHighlightFirstItem, setHighlightLastItem, listRef, withSearch, setOpenPopover, triggerRef) => {
  switch (event.key) {
    case 'ArrowUp':
      event.preventDefault();
      navigateOptions$3('up', focusedOption, setFocusedOption, listRef, withSearch);
      break;
    case 'ArrowDown':
      event.preventDefault();
      navigateOptions$3('down', focusedOption, setFocusedOption, listRef, withSearch);
      break;
    case 'Enter':
      handleEnterKey$2(focusedOption);
      setHighlightLastItem?.(false);
      setHighlightFirstItem?.(false);
      break;
    case 'Escape':
      setOpenPopover?.(false);
      triggerRef.current.focus();
      setFocusedOption?.(undefined);
      break;
  }
};
const handleEnterKey$2 = focusedOption => {
  focusedOption?.click();
};
const navigateOptions$3 = (direction, focusedOption, setFocusedOption, listRef, withSearch) => {
  const listItems = listRef?.current.querySelectorAll('[data-test="DesignSystem-Listbox-ItemWrapper"]');
  let index = Array.from(listItems).findIndex(item => {
    return item == focusedOption;
  });
  if (index === -1) {
    index = direction === 'up' ? listItems.length - 1 : 0;
  } else if (withSearch && index === 0 && direction === 'up' || withSearch && index === listItems.length - 1 && direction === 'down') {
    const searchInput = listRef.current.querySelector('[data-test="DesignSystem-AvatarSelection--Input"]');
    searchInput.focus();
    setFocusedOption && setFocusedOption(searchInput);
  } else {
    index = direction === 'up' ? (index - 1 + listItems.length) % listItems.length : (index + 1) % listItems.length;
    const targetOption = listItems[index];
    targetOption.focus();
    setFocusedOption && setFocusedOption(targetOption);
    targetOption.scrollIntoView({
      block: 'center'
    });
  }
};
const handleInputKeyDown$1 = (event, listRef, setFocusedOption, setOpenPopover, triggerRef) => {
  const listItems = listRef.current?.querySelectorAll('[data-test="DesignSystem-Listbox-ItemWrapper"]');
  let targetOption;
  switch (event.key) {
    case 'ArrowUp':
      event.preventDefault();
      targetOption = listItems[listItems.length - 1];
      break;
    case 'ArrowDown':
      event.preventDefault();
      targetOption = listItems[0];
      break;
    case 'Escape':
      setOpenPopover?.(false);
      triggerRef.current.focus();
      setFocusedOption?.(undefined);
      break;
  }
  targetOption?.focus();
  targetOption?.scrollIntoView?.({
    block: 'center'
  });
  setFocusedOption && setFocusedOption(targetOption);
};

const AvatarSelectionInput = props => {
  const contextProp = React.useContext(AvatarSelectionContext);
  const {
    listRef,
    setFocusedOption,
    setOpenPopover,
    triggerRef
  } = contextProp;
  const inputClassName = classNames({
    'w-100': true,
    [styles$9['SelectionAvatar-input']]: true
  });
  return /*#__PURE__*/React.createElement("div", {
    className: styles$9['SelectionAvatar-inputWrapper']
  }, /*#__PURE__*/React.createElement(Input, _extends$2({
    icon: "search",
    onKeyDown: event => handleInputKeyDown$1(event, listRef, setFocusedOption, setOpenPopover, triggerRef),
    className: inputClassName,
    "data-test": "DesignSystem-AvatarSelection--Input"
  }, props)));
};

const AvatarSelectionList = props => {
  return /*#__PURE__*/React.createElement(Listbox, props, props.children);
};
AvatarSelectionList.defaultProps = {
  type: 'option',
  showDivider: false,
  size: 'compressed',
  tagName: 'ul'
};

const AvatarSelectionOption = props => {
  const {
    children,
    value,
    disabled,
    ...rest
  } = props;
  const contextProp = React.useContext(AvatarSelectionContext);
  const {
    setSelectedItems,
    selectedItems,
    onSelect,
    focusedOption,
    setFocusedOption,
    setHighlightFirstItem,
    setHighlightLastItem,
    listRef,
    withSearch,
    setOpenPopover,
    triggerRef
  } = contextProp;
  const onSelectHandler = (event, avatarData) => {
    event.preventDefault();
    if (disabled) {
      return;
    }
    let list = selectedItems ? [...selectedItems] : [];
    if (selectedItems?.includes(avatarData)) {
      list = selectedItems.filter(selectedItem => selectedItem !== avatarData);
    } else {
      list.push(avatarData);
    }
    setSelectedItems?.([...list]);
    setOpenPopover?.(true);
    onSelect && onSelect(list);
  };
  const onKeyDownHandler = event => {
    handleKeyDown$5(event, focusedOption, setFocusedOption, setHighlightFirstItem, setHighlightLastItem, listRef, withSearch, setOpenPopover, triggerRef);
  };
  return /*#__PURE__*/React.createElement(Listbox.Item, _extends$2({
    onClick: event => onSelectHandler(event, value),
    onKeyDown: event => onKeyDownHandler(event),
    selected: selectedItems?.includes(value),
    "data-test": "DesignSystem-AvatarSelection--Option",
    disabled: disabled,
    tabIndex: -1
  }, rest), children);
};
AvatarSelectionOption.defaultProps = {
  tagName: 'li'
};

const AvatarSelectionEmptyState = props => {
  const {
    height,
    title,
    description
  } = props;
  return /*#__PURE__*/React.createElement("div", {
    className: "d-flex flex-column justify-content-center align-items-center",
    style: {
      height: height ? height - 4 : ''
    },
    "data-test": "DesignSystem-AvatarSelection--EmptyState"
  }, title && /*#__PURE__*/React.createElement(Text, {
    className: "text-align-center mb-3",
    weight: "strong"
  }, title), description && /*#__PURE__*/React.createElement(Text, {
    className: "text-align-center mb-6",
    weight: "medium",
    size: "small",
    appearance: "subtle"
  }, description));
};

const AvatarSelectionItem = props => {
  const {
    avatarData,
    isSelected
  } = props;
  const [showTooltip, setShowTooltip] = React.useState(false);
  const elementRef = React.useRef(null);
  const {
    firstName = '',
    lastName = '',
    disabled,
    tooltipSuffix,
    image,
    icon
  } = avatarData;
  const name = `${firstName || ''} ${lastName || ''} ${tooltipSuffix || ''}` || '';
  const triggerClassName = classNames({
    ['cursor-not-allowed']: disabled,
    ['ellipsis--noWrap']: true
  });
  return /*#__PURE__*/React.createElement(AvatarSelectionOption, {
    value: avatarData,
    disabled: disabled,
    onFocus: () => {
      setShowTooltip(true);
    },
    onBlur: () => {
      setShowTooltip(false);
    }
  }, /*#__PURE__*/React.createElement(Checkbox, {
    defaultChecked: isSelected,
    checked: isSelected,
    size: "regular",
    tabIndex: -1,
    "data-test": "DesignSystem-AvatarSelection--Checkbox"
  }), /*#__PURE__*/React.createElement(Avatar, _extends$2({}, avatarData, {
    className: "ml-3",
    withTooltip: false
  }), image || icon), /*#__PURE__*/React.createElement(Tooltip, {
    showOnTruncation: true,
    tooltip: name,
    elementRef: elementRef,
    open: showTooltip,
    triggerClass: triggerClassName
  }, /*#__PURE__*/React.createElement(Text, {
    className: "ellipsis--noWrap ml-4",
    ref: elementRef
  }, name)));
};
const AvatarSelectionPopover = props => {
  const {
    hiddenAvatarList,
    customStyle,
    searchPlaceholder,
    searchComparator,
    children
  } = props;
  const [searchList, setSearchList] = React.useState(hiddenAvatarList);
  const [searchValue, setSearchValue] = React.useState('');
  const contextProp = React.useContext(AvatarSelectionContext);
  const {
    selectedItems,
    listRef,
    withSearch,
    popoverId
  } = contextProp;
  if (children) {
    return /*#__PURE__*/React.createElement(React.Fragment, null, children);
  }
  const onSearchHandler = event => {
    const searchValue = event.target.value;
    const list = hiddenAvatarList?.filter(avatarData => {
      const {
        firstName,
        lastName
      } = avatarData;
      if (searchComparator) {
        return searchComparator(searchValue, avatarData);
      }
      return firstName?.toLowerCase()?.startsWith(searchValue.toLowerCase()) || lastName?.toLowerCase()?.startsWith(searchValue.toLowerCase());
    });
    setSearchValue(searchValue);
    setSearchList(list);
  };
  const onClearHandler = () => {
    setSearchValue('');
    setSearchList(hiddenAvatarList);
  };
  const popperClassName = classNames({
    ['py-3']: !withSearch,
    ['pb-3']: withSearch,
    [styles$9['SelectionAvatarGroup-popper']]: true
  });
  return /*#__PURE__*/React.createElement("div", {
    style: {
      width: customStyle.width
    },
    ref: listRef,
    "data-test": "DesignSystem-AvatarSelection--Popover",
    id: popoverId
  }, withSearch && /*#__PURE__*/React.createElement(AvatarSelectionInput, {
    placeholder: searchPlaceholder,
    onChange: onSearchHandler,
    value: searchValue,
    onClear: onClearHandler
  }), /*#__PURE__*/React.createElement("div", {
    style: customStyle,
    className: popperClassName
  }, searchList.length === 0 && /*#__PURE__*/React.createElement(AvatarSelectionEmptyState, {
    height: customStyle.maxHeight,
    title: "No users found",
    description: "Try modifying your search to find what you are looking for."
  }), /*#__PURE__*/React.createElement(AvatarSelectionList, null, searchList.map((avatarData, index) => {
    const isSelected = selectedItems?.includes(avatarData);
    return /*#__PURE__*/React.createElement(AvatarSelectionItem, {
      key: index,
      avatarData: avatarData,
      isSelected: isSelected
    });
  }))));
};

const AvatarSelection = props => {
  const {
    max,
    borderColor,
    tooltipPosition,
    list,
    className,
    size,
    avatarRenderer,
    onSelect,
    width,
    maxHeight,
    minHeight,
    searchPlaceholder,
    withSearch,
    searchComparator,
    children
  } = props;
  const [selectedItems, setSelectedItems] = React.useState([]);
  const [openPopover, setOpenPopover] = React.useState(false);
  const [focusedOption, setFocusedOption] = React.useState();
  const [highlightFirstItem, setHighlightFirstItem] = React.useState(false);
  const [highlightLastItem, setHighlightLastItem] = React.useState(false);
  const listRef = /*#__PURE__*/React.createRef();
  const triggerRef = /*#__PURE__*/React.createRef();
  React.useEffect(() => {
    const selectedList = [];
    list.forEach(avatarItem => {
      if (avatarItem.selected) {
        selectedList.push(avatarItem);
      }
    });
    setSelectedItems(selectedList);
  }, []);
  React.useEffect(() => {
    if (!openPopover) {
      setHighlightFirstItem(false);
      setHighlightLastItem(false);
    } else {
      setHighlightFirstItem(true);
    }
  }, [openPopover]);
  React.useEffect(() => {
    if (highlightFirstItem && openPopover) {
      requestAnimationFrame(() => focusListItem$3('down', setFocusedOption, listRef, withSearch));
    }
  }, [highlightFirstItem]);
  React.useEffect(() => {
    if (highlightLastItem && openPopover) {
      requestAnimationFrame(() => focusListItem$3('up', setFocusedOption, listRef, withSearch));
    }
  }, [highlightLastItem]);
  const baseProps = extractBaseProps(props);
  const hiddenAvatarCount = list.length - max;
  const avatarStyle = {
    backgroundColor: `${borderColor}`,
    boxShadow: `0 0 0  calc(var(--spacing-2-5) + var(--spacing-05)) ${borderColor}`
  };
  const AvatarSelectionClass = classNames({
    [styles$9['SelectionAvatarGroup']]: true
  }, className);
  const searchInputHeight = 36;
  const searchBorder = 1;
  const customStyle = {
    width,
    minHeight: minHeight,
    maxHeight: withSearch ? maxHeight - searchInputHeight - searchBorder : maxHeight
  };
  const hiddenAvatarList = list.slice(max, list.length);
  const popoverId = `DesignSystem-AvatarSelection-Popover-${uidGenerator()}`;
  const popoverProps = {
    hiddenAvatarList,
    customStyle,
    searchPlaceholder,
    searchComparator,
    children
  };
  const triggerProps = {
    size,
    avatarStyle,
    hiddenAvatarCount,
    hiddenAvatarList
  };
  const onToggleHandler = open => {
    open ? setOpenPopover(true) : setOpenPopover(false);
  };
  const contextProp = {
    listRef,
    onSelect,
    withSearch,
    triggerRef,
    selectedItems,
    focusedOption,
    openPopover,
    setSelectedItems,
    setFocusedOption,
    setHighlightFirstItem,
    setHighlightLastItem,
    setOpenPopover,
    popoverId
  };
  return /*#__PURE__*/React.createElement(AvatarSelectionContext.Provider, {
    value: contextProp
  }, /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-AvatarSelection"
  }, baseProps, {
    className: AvatarSelectionClass
  }), /*#__PURE__*/React.createElement(SelectionAvatarsWrapper, {
    size: size,
    avatarStyle: avatarStyle,
    avatarList: list.slice(0, max),
    avatarRenderer: avatarRenderer,
    tooltipPosition: tooltipPosition
  }), (hiddenAvatarCount > 0 || children && hiddenAvatarCount > 0) && /*#__PURE__*/React.createElement(Popover, {
    open: openPopover,
    position: "bottom-end",
    trigger: /*#__PURE__*/React.createElement(AvatarSelectionCount, triggerProps),
    triggerClass: "flex-grow-0",
    onToggle: onToggleHandler
  }, /*#__PURE__*/React.createElement(AvatarSelectionPopover, popoverProps))));
};
AvatarSelection.displayName = 'AvatarSelection';
AvatarSelection.defaultProps = {
  max: 5,
  tooltipPosition: 'bottom',
  borderColor: 'white',
  size: 'regular',
  width: 256,
  maxHeight: 256
};
AvatarSelection.Input = AvatarSelectionInput;
AvatarSelection.List = AvatarSelectionList;
AvatarSelection.Option = AvatarSelectionOption;
AvatarSelection.EmptyState = AvatarSelectionEmptyState;

const ComboboxList = props => {
  return /*#__PURE__*/React.createElement(Listbox, _extends$2({
    className: "py-3"
  }, props, {
    role: "listbox"
  }), props.children);
};
ComboboxList.defaultProps = {
  type: 'option',
  showDivider: false,
  tagName: 'ul',
  size: 'compressed'
};

const ComboboxContext = /*#__PURE__*/React.createContext({});

const handleKeyDown$4 = (event, focusedOption, setFocusedOption, setOpenPopover, inputTriggerRef, setHighlightFirstItem, setHighlightLastItem, multiSelect, listRef) => {
  switch (event.key) {
    case 'ArrowUp':
      event.preventDefault();
      navigateOptions$2('up', focusedOption, setFocusedOption, listRef);
      break;
    case 'ArrowDown':
      event.preventDefault();
      navigateOptions$2('down', focusedOption, setFocusedOption, listRef);
      break;
    case 'Enter':
      handleEnterKey$1(focusedOption, multiSelect, inputTriggerRef, listRef, setFocusedOption);
      setHighlightLastItem?.(false);
      setHighlightFirstItem?.(false);
      break;
    case 'Escape':
      setOpenPopover?.(false);
      inputTriggerRef.current.focus();
      setFocusedOption?.(undefined);
      break;
  }
};
const handleEnterKey$1 = (focusedOption, multiSelect, inputTriggerRef, listRef, setFocusedOption) => {
  focusedOption?.click();
  if (!multiSelect) {
    inputTriggerRef.current.focus();
  } else {
    // to focus first option by default when last option is selected
    const listItems = listRef.current.querySelectorAll('[data-test="DesignSystem-Listbox-ItemWrapper"]');
    const listArr = Array.from(listItems);
    const index = listArr.findIndex(item => {
      return item == focusedOption;
    });
    if (index === listArr.length - 1) {
      listItems[0].focus();
      setFocusedOption && setFocusedOption(listItems[0]);
      listItems[0].scrollIntoView({
        block: 'center'
      });
    }
  }
};
const navigateOptions$2 = (direction, focusedOption, setFocusedOption, listRef) => {
  const listItems = listRef.current.querySelectorAll('[data-test="DesignSystem-Listbox-ItemWrapper"]');
  let index = Array.from(listItems).findIndex(item => {
    return item == focusedOption;
  });
  if (index === -1) {
    index = direction === 'up' ? listItems.length - 1 : 0;
  } else {
    index = direction === 'up' ? (index - 1 + listItems.length) % listItems.length : (index + 1) % listItems.length;
  }
  const targetOption = listItems[index];
  targetOption.focus();
  setFocusedOption && setFocusedOption(targetOption);
  targetOption?.scrollIntoView?.({
    block: 'center'
  });
};

const ComboboxOption = props => {
  const {
    children,
    option,
    onClick,
    ...rest
  } = props;
  const contextProp = React.useContext(ComboboxContext);
  const {
    onOptionClick,
    inputValue,
    focusedOption,
    setFocusedOption,
    setOpenPopover,
    inputTriggerRef,
    setHighlightFirstItem,
    setHighlightLastItem,
    multiSelect,
    listRef
  } = contextProp;
  const onClickHandler = () => {
    if (onClick) {
      return onClick(option);
    }
    return onOptionClick && onOptionClick({
      ...option,
      isSelectedOption: true
    });
  };
  const onKeyDownHandler = event => {
    handleKeyDown$4(event, focusedOption, setFocusedOption, setOpenPopover, inputTriggerRef, setHighlightFirstItem, setHighlightLastItem, multiSelect, listRef);
  };
  return /*#__PURE__*/React.createElement(Listbox.Item, _extends$2({
    onClick: onClickHandler,
    selected: option.label === inputValue?.label,
    onKeyDown: onKeyDownHandler,
    tabIndex: -1,
    role: "option",
    "data-test": "DesignSystem-Combobox-Option"
  }, rest), children);
};
ComboboxOption.defaultProps = {
  tagName: 'li'
};

const handleKeyDown$3 = (event, setOpenPopover, setHighlightFirstItem, setHighlightLastItem) => {
  switch (event.key) {
    case 'ArrowUp':
      setOpenPopover?.(true);
      setHighlightLastItem?.(true);
      break;
    case 'ArrowDown':
      setOpenPopover?.(true);
      setHighlightFirstItem?.(true);
      break;
    case 'Escape':
    case 'Tab':
      setOpenPopover?.(false);
      break;
  }
};
const focusListItem$2 = (position, setFocusedOption, listRef) => {
  const listItems = listRef.current?.querySelectorAll('[data-test="DesignSystem-Listbox-ItemWrapper"]');
  let targetOption;
  if (position === 'down') {
    targetOption = listItems?.[0];
  } else {
    targetOption = listItems[listItems.length - 1];
  }
  targetOption?.focus();
  if (targetOption && typeof targetOption.scrollIntoView === 'function') {
    targetOption?.scrollIntoView({
      block: 'center',
      behavior: 'smooth'
    });
  }
  setFocusedOption && setFocusedOption(targetOption);
};

const InputBox = props => {
  const contextProp = React.useContext(ComboboxContext);
  const {
    inputValue,
    setInputValue,
    setFocusedOption,
    setOpenPopover,
    inputTriggerRef,
    setHighlightFirstItem,
    setHighlightLastItem,
    openPopover,
    popoverId
  } = contextProp;
  const onChangeHandler = event => {
    const value = event.target.value;
    setFocusedOption && setFocusedOption(undefined);
    const newValue = {
      label: value,
      value,
      isSelectedOption: false
    };
    setInputValue && setInputValue(newValue);
    if (value !== '') {
      setOpenPopover?.(true);
    }
  };
  const onClearHandler = event => {
    event.stopPropagation();
    const newValue = {
      label: '',
      value: '',
      isSelectedOption: false
    };
    setInputValue && setInputValue(newValue);
    setOpenPopover?.(true);
    props.onClear?.(event);
  };
  const onKeyDownHandler = event => {
    handleKeyDown$3(event, setOpenPopover, setHighlightFirstItem, setHighlightLastItem);
    props.onKeyDown && props.onKeyDown(event);
  };
  return /*#__PURE__*/React.createElement(Input, _extends$2({}, props, {
    ref: inputTriggerRef,
    value: inputValue?.label,
    onChange: onChangeHandler,
    onKeyDown: onKeyDownHandler,
    onClear: onClearHandler,
    role: "combobox",
    "aria-haspopup": "listbox",
    "aria-controls": popoverId,
    "aria-label": props.placeholder || 'Combobox-Input-Trigger',
    "aria-expanded": openPopover,
    "data-test": "DesignSystem-Combobox-Input"
  }));
};

const keyCodes = {
  BACKSPACE: 'Backspace',
  DELETE: 'Delete',
  ENTER: 'Enter'
};
const MultiSelectTrigger = /*#__PURE__*/React.forwardRef((props, forwardedInputRef) => {
  const {
    chipOptions,
    allowDuplicates,
    disabled,
    error,
    placeholder,
    defaultValue,
    value,
    className,
    autoFocus,
    onChange,
    onBlur,
    onFocus,
    onKeyDown,
    onInputChange,
    tabIndex,
    role,
    ...rest
  } = props;
  const localInputRef = React.useRef();
  const customRef = React.useRef();
  const inputElementRef = forwardedInputRef || localInputRef;
  const [chips, setChips] = React.useState(value || defaultValue);
  const [inputValue, setInputValue] = React.useState('');
  const baseProps = extractBaseProps(props);
  React.useEffect(() => {
    if (value !== undefined) {
      setChips(value);
      setInputValue('');
    }
  }, [value]);
  React.useEffect(() => {
    if (inputValue === '' && inputElementRef.current) {
      inputElementRef.current.style.flexBasis = '0';
      customRef.current.charCount = null;
    }
  }, [inputValue]);
  const ChipInputBorderClass = classNames({
    [styles$A['ChipInput-border']]: true,
    [styles$A['ChipInput-border--error']]: error
  });
  const ChipInputClass = classNames({
    [styles$A.ChipInput]: true,
    [styles$A['ChipInput--disabled']]: disabled,
    [styles$A['ChipInput--withChips']]: chips && chips.length > 0,
    [styles$A['ChipInput--error']]: error
  }, className);
  const onUpdateChips = updatedChips => {
    if (onChange) onChange(updatedChips);
  };
  const onChipDeleteHandler = index => {
    const updatedChips = [...chips];
    updatedChips.splice(index, 1);
    if (!value) {
      setChips(updatedChips);
    }
    onUpdateChips(updatedChips);
  };
  const onChipAddHandler = () => {
    if (!inputValue) return;
    const chip = inputValue.trim();
    const isChipExist = chips.filter(item => item.label === chip).length > 0;
    if ((allowDuplicates || !isChipExist) && chip) {
      const updatedChips = [...chips, {
        label: chip,
        value: chip,
        isSelectedOption: false
      }];
      if (!value) {
        setChips(updatedChips);
      }
      onUpdateChips(updatedChips);
      setInputValue('');
    }
  };
  const onDeleteAllHandler = e => {
    e.stopPropagation();
    const updatedChips = [];
    if (!value) {
      setChips(updatedChips);
    }
    onUpdateChips(updatedChips);
    setInputValue('');
    onInputChange && onInputChange();
  };
  const onKeyDownHandler = event => {
    const chipsLength = chips.length;
    switch (event.key) {
      case keyCodes.DELETE:
      case keyCodes.BACKSPACE:
        if (inputValue === '' && chipsLength > 0) {
          onChipDeleteHandler(chipsLength - 1);
        }
        break;
      case keyCodes.ENTER:
        event.preventDefault();
        onChipAddHandler();
        break;
    }
    onKeyDown && onKeyDown(event);
  };
  const onInputChangeHandler = event => {
    const inputElement = inputElementRef.current;
    if (inputElement) {
      const charLen = event.target.value.length;
      const elementScrollWidth = inputElement.scrollWidth;
      const elementClientWidth = inputElement.clientWidth;
      if (elementScrollWidth > elementClientWidth && inputValue.length <= charLen) {
        inputElement.style.flexBasis = 'auto';
        if (customRef.current) {
          customRef.current.charCount = charLen;
        }
      } else if (elementScrollWidth <= elementClientWidth && inputValue.length > charLen && charLen <= (customRef.current?.charCount || 0) - 1) {
        inputElement.style.flexBasis = '0';
      }
    }
    setInputValue(event.target.value);
    onInputChange && onInputChange(event);
  };
  const onClickHandler = () => {
    inputElementRef.current?.focus();
  };
  const chipComponents = chips.map((chip, index) => {
    const {
      type = 'input',
      onClick,
      ...rest
    } = chipOptions;
    const chipLabel = typeof chip === 'string' ? chip : chip?.label;
    return /*#__PURE__*/React.createElement(Chip, _extends$2({
      "data-test": "DesignSystem-MultiSelectTrigger--Chip",
      label: chipLabel,
      name: chip,
      type: type,
      disabled: disabled,
      key: index,
      className: "my-3 mx-2",
      onClick: () => onClick && onClick(chip, index),
      onClose: () => onChipDeleteHandler(index)
    }, rest));
  });
  return /*#__PURE__*/ /* TODO(a11y): fix accessibility  */ /* eslint-disable  */React.createElement("div", {
    "data-test": "DesignSystem-MultiSelectTrigger--Border",
    className: ChipInputBorderClass
  }, /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-MultiSelectTrigger"
  }, baseProps, {
    className: ChipInputClass,
    onClick: onClickHandler,
    tabIndex: disabled ? -1 : tabIndex || 0
  }), /*#__PURE__*/React.createElement("div", {
    className: styles$A["ChipInput-wrapper"],
    ref: customRef
  }, chips && chips.length > 0 && chipComponents, /*#__PURE__*/React.createElement("input", _extends$2({}, rest, {
    "data-test": "DesignSystem-MultiSelectTrigger--Input",
    ref: inputElementRef,
    className: styles$A["ChipInput-input"],
    autoFocus: autoFocus,
    placeholder: chips && chips.length > 0 ? '' : placeholder,
    disabled: disabled,
    value: inputValue,
    onBlur: onBlur,
    onFocus: onFocus,
    onChange: onInputChangeHandler,
    onKeyDown: onKeyDownHandler,
    role: role
  }))), (chips.length > 0 || inputValue.length > 0) && /*#__PURE__*/React.createElement(Icon, {
    "data-test": "DesignSystem-MultiSelectTrigger--Icon",
    name: "close",
    appearance: disabled ? 'disabled' : 'subtle',
    className: styles$A['ChipInput-icon'],
    onClick: onDeleteAllHandler,
    tabIndex: disabled ? -1 : 0
  })));
});
MultiSelectTrigger.displayName = 'MultiSelectTrigger';
MultiSelectTrigger.defaultProps = {
  chipOptions: {},
  defaultValue: [],
  allowDuplicates: false,
  autoFocus: false
};

const ChipInputBox = props => {
  const contextProp = React__default.useContext(ComboboxContext);
  const {
    chipInputValue,
    setChipInputValue,
    setOpenPopover,
    setFocusedOption,
    setChipInputText,
    setHighlightFirstItem,
    setHighlightLastItem,
    inputTriggerRef,
    openPopover,
    popoverId
  } = contextProp;
  const onChangeHandler = chips => {
    setFocusedOption && setFocusedOption(undefined);
    setChipInputValue && setChipInputValue(chips);
    if (chips.length === 0) {
      setOpenPopover?.(true);
    }
  };
  const onUpdateHandler = event => {
    const value = event?.target?.value;
    if (!value) {
      setChipInputText?.('');
      setOpenPopover?.(true);
      inputTriggerRef?.current.focus();
      return;
    }
    setChipInputText && setChipInputText(value);
    if (value !== '') {
      setOpenPopover?.(true);
    }
  };
  const onKeyDownHandler = event => {
    handleKeyDown$3(event, setOpenPopover, setHighlightFirstItem, setHighlightLastItem);
    props.onKeyDown && props.onKeyDown(event);
  };
  return /*#__PURE__*/React__default.createElement(MultiSelectTrigger, _extends$2({}, props, {
    ref: inputTriggerRef,
    value: chipInputValue,
    onChange: onChangeHandler,
    onInputChange: onUpdateHandler,
    onKeyDown: onKeyDownHandler,
    tabIndex: -1,
    role: "combobox",
    "aria-haspopup": "listbox",
    "aria-controls": popoverId,
    "aria-label": props.placeholder || 'Combobox-ChipInput-Trigger',
    "aria-expanded": openPopover,
    "data-test": "DesignSystem-Combobox-ChipInput"
  }));
};

const ComboboxTrigger = props => {
  const {
    multiSelect,
    chipValue,
    value,
    ...rest
  } = props;
  if (multiSelect) {
    const {
      icon,
      clearButton,
      iconType
    } = props;
    const chipInputOptions = {
      icon,
      clearButton,
      iconType
    };
    return /*#__PURE__*/React.createElement(ChipInputBox, _extends$2({
      defaultValue: [],
      chipOptions: {
        ...chipInputOptions
      }
    }, rest, {
      value: chipValue
    }));
  }
  return /*#__PURE__*/React.createElement(InputBox, _extends$2({}, props, {
    value: value?.label
  }));
};

const Combobox = props => {
  const {
    children,
    onChange,
    multiSelect,
    className,
    maxHeight,
    minHeight,
    width,
    value,
    placeholder,
    disabled,
    error,
    onBlur,
    onFocus,
    onClear,
    icon,
    iconType,
    size,
    chipValue,
    clearButton,
    onSearch,
    onKeyDown,
    onKeyUp,
    computeStyles
  } = props;
  const [popoverStyle, setPopoverStyle] = React.useState();
  const [wrapperStyle, setWrapperStyle] = React.useState({});
  const triggerRef = /*#__PURE__*/React.createRef();
  const listRef = /*#__PURE__*/React.createRef();
  const [openPopover, setOpenPopover] = React.useState(false);
  const [isOptionSelected, setIsOptionSelected] = React.useState(false);
  const [focusedOption, setFocusedOption] = React.useState();
  const [inputValue, setInputValue] = React.useState(value || {
    label: '',
    value: ''
  });
  const [chipInputValue, setChipInputValue] = React.useState(chipValue);
  const [chipInputText, setChipInputText] = React.useState('');
  const [highlightFirstItem, setHighlightFirstItem] = React.useState(false);
  const [highlightLastItem, setHighlightLastItem] = React.useState(false);
  const inputTriggerRef = React.useRef();
  const popoverId = `DesignSystem-Combobox--Popover-${uidGenerator()}`;
  const defaultPopoverStyle = {
    fn: data => {
      return {
        ...data,
        styles: {
          ...data.styles,
          position: 'fixed'
        }
      };
    }
  };
  const popoverComputeStyle = computeStyles ?? defaultPopoverStyle;
  React.useEffect(() => {
    const popperWidth = triggerRef.current?.clientWidth;
    const popperWrapperStyle = {
      width: width || popperWidth
    };
    const wrapperStyle = {
      maxHeight: maxHeight || 'var(--spacing-640)',
      minHeight: minHeight,
      overflowY: 'auto',
      boxSizing: 'border-box'
    };
    setWrapperStyle(wrapperStyle);
    setPopoverStyle(popperWrapperStyle);
  }, []);
  React.useEffect(() => {
    if (isOptionSelected) {
      multiSelect ? setOpenPopover(true) : setOpenPopover(false);
      setIsOptionSelected(false);
    }
    const value = multiSelect ? chipInputValue : inputValue;
    onChange && !isOptionSelected && onChange(value);
  }, [inputValue, chipInputValue]);
  React.useEffect(() => {
    if (highlightFirstItem && openPopover) {
      requestAnimationFrame(() => focusListItem$2('down', setFocusedOption, listRef));
    }
  }, [highlightFirstItem]);
  React.useEffect(() => {
    if (highlightLastItem && openPopover) {
      requestAnimationFrame(() => focusListItem$2('up', setFocusedOption, listRef));
    }
  }, [highlightLastItem]);
  React.useEffect(() => {
    if (!openPopover) {
      setHighlightFirstItem(false);
      setHighlightLastItem(false);
    }
  }, [openPopover]);
  React.useEffect(() => {
    onSearch && onSearch(chipInputText);
  }, [chipInputText]);
  const onOptionClick = option => {
    setIsOptionSelected(true);
    if (!multiSelect) {
      setInputValue(option);
      onChange && onChange(option);
    } else {
      const chipList = chipInputValue ? [...chipInputValue, option] : [option];
      setChipInputValue(chipList);
      onChange && onChange(chipList);
    }
  };
  const outsideClickHandler = () => {
    !multiSelect && setOpenPopover(false);
  };
  const onToggleHandler = open => {
    open ? setOpenPopover(true) : setOpenPopover(false);
  };
  const triggerProps = {
    value,
    placeholder,
    disabled,
    error,
    onBlur,
    onFocus,
    onClear,
    icon,
    iconType,
    size,
    multiSelect,
    chipValue,
    clearButton,
    onKeyDown,
    onKeyUp
  };
  const contextProp = {
    inputValue,
    setInputValue,
    onOptionClick,
    openPopover,
    setOpenPopover,
    isOptionSelected,
    setIsOptionSelected,
    chipInputValue,
    setChipInputValue,
    focusedOption,
    setFocusedOption,
    chipInputText,
    setChipInputText,
    inputTriggerRef,
    setHighlightFirstItem,
    setHighlightLastItem,
    multiSelect,
    listRef,
    onSearch,
    popoverId
  };
  return /*#__PURE__*/React.createElement(ComboboxContext.Provider, {
    value: contextProp
  }, /*#__PURE__*/React.createElement("div", {
    ref: triggerRef,
    className: className
  }, /*#__PURE__*/React.createElement(OutsideClick, {
    onOutsideClick: outsideClickHandler
  }, /*#__PURE__*/React.createElement(Popover, {
    open: openPopover && !disabled,
    triggerClass: "d-block",
    customStyle: popoverStyle,
    onToggle: onToggleHandler,
    trigger: /*#__PURE__*/React.createElement(ComboboxTrigger, triggerProps),
    computeStyles: popoverComputeStyle
  }, /*#__PURE__*/React.createElement("div", {
    style: wrapperStyle,
    ref: listRef,
    id: popoverId
  }, children && typeof children === 'function' ? children(contextProp) : children)))));
};
Combobox.List = ComboboxList;
Combobox.Option = ComboboxOption;

const SelectContext = /*#__PURE__*/React.createContext({});

const SelectList = props => {
  const contextProp = React.useContext(SelectContext);
  const {
    withSearch,
    minHeight,
    maxHeight,
    multiSelect
  } = contextProp;
  const {
    children,
    ...rest
  } = props;
  const searchInputHeight = 33;
  const wrapperStyle = {
    maxHeight: withSearch ? maxHeight - searchInputHeight : maxHeight,
    overflowY: 'auto',
    minHeight: minHeight
  };
  return /*#__PURE__*/React.createElement(Listbox, _extends$2({
    style: wrapperStyle,
    "aria-label": "Options item list",
    "aria-multiselectable": multiSelect,
    className: "my-3"
  }, rest), children);
};
SelectList.defaultProps = {
  type: 'option',
  showDivider: false,
  size: 'compressed',
  tagName: 'ul'
};

const mapInitialValue = (multiSelect, selectedValue) => {
  if (multiSelect) {
    return selectedValue && !Array.isArray(selectedValue) ? [selectedValue] : selectedValue || [];
  } else {
    return selectedValue || {
      label: '',
      value: ''
    };
  }
};
const elementExist = (targetObject, mainList) => {
  if (!Array.isArray(mainList)) {
    return targetObject.value === mainList?.value ? 0 : -1;
  }
  return mainList.findIndex(item => item.value === targetObject.value);
};
const removeOrAddToList = (targetObject, prevList) => {
  const newList = [...prevList];
  const existingIndex = elementExist(targetObject, newList);
  if (existingIndex !== -1) {
    newList.splice(existingIndex, 1);
  } else {
    newList.push(targetObject);
  }
  return newList;
};
const computeValue = (multiSelect, selectValue, setLabel) => {
  if (!multiSelect) {
    return selectValue?.label?.trim() || '';
  }
  const label = setLabel?.(selectValue.length);
  if (label) {
    return label;
  }
  if (selectValue.length <= 2) {
    return selectValue.map(pair => `${pair.label}`).join(', ');
  } else {
    return `${selectValue.length} Selected`;
  }
};
const handleKeyDownTrigger = (event, setOpenPopover, setHighlightFirstItem, setHighlightLastItem) => {
  switch (event.key) {
    case 'Enter':
      event.preventDefault();
      setOpenPopover?.(true);
      setHighlightFirstItem?.(true);
      break;
    case 'ArrowDown':
      setOpenPopover?.(true);
      setHighlightFirstItem?.(true);
      break;
    case 'ArrowUp':
      setOpenPopover?.(true);
      setHighlightLastItem?.(true);
      break;
  }
};
const focusListItem$1 = (position, setFocusedOption, listRef) => {
  const searchInput = listRef.current?.querySelectorAll('[data-test="DesignSystem-Select--Input"]');
  const listItems = listRef.current?.querySelectorAll('[data-test="DesignSystem-Listbox-ItemWrapper"]');
  let targetOption;
  if (position === 'down') {
    targetOption = searchInput?.[0] || listItems?.[0];
  } else {
    targetOption = listItems?.[listItems.length - 1];
  }
  targetOption?.focus();
  targetOption?.scrollIntoView({
    block: 'center'
  });
  setFocusedOption && setFocusedOption(targetOption);
};
const handleKeyDown$2 = (event, focusedOption, setFocusedOption, setHighlightFirstItem, setHighlightLastItem, listRef, withSearch, setOpenPopover, triggerRef) => {
  switch (event.key) {
    case 'ArrowUp':
      event.preventDefault();
      navigateOptions$1('up', focusedOption, setFocusedOption, listRef, withSearch);
      break;
    case 'ArrowDown':
      event.preventDefault();
      navigateOptions$1('down', focusedOption, setFocusedOption, listRef, withSearch);
      break;
    case 'Enter':
      handleEnterKey(focusedOption);
      setHighlightLastItem?.(false);
      setHighlightFirstItem?.(false);
      break;
    case 'Tab':
      setHighlightLastItem?.(false);
      setHighlightFirstItem?.(false);
      break;
    case 'Escape':
      setOpenPopover?.(false);
      triggerRef.current.focus();
      setFocusedOption?.(undefined);
      break;
  }
};
const handleEnterKey = focusedOption => {
  focusedOption?.click();
};
const navigateOptions$1 = (direction, focusedOption, setFocusedOption, listRef, withSearch) => {
  const listItems = listRef.current.querySelectorAll('[data-test="DesignSystem-Listbox-ItemWrapper"]');
  let index = Array.from(listItems).findIndex(item => {
    return item == focusedOption;
  });
  if (index === -1) {
    index = direction === 'up' ? listItems.length - 1 : 0;
  } else if (withSearch && index === 0 && direction === 'up' || withSearch && index === listItems.length - 1 && direction === 'down') {
    const searchInput = listRef.current.querySelector('[data-test="DesignSystem-Select--Input"]');
    searchInput.focus();
    setFocusedOption && setFocusedOption(searchInput);
  } else {
    index = direction === 'up' ? (index - 1 + listItems.length) % listItems.length : (index + 1) % listItems.length;
    const targetOption = listItems[index];
    targetOption.focus();
    setFocusedOption && setFocusedOption(targetOption);
    targetOption.scrollIntoView({
      block: 'center'
    });
  }
};
const handleInputKeyDown = (event, listRef, setFocusedOption, setOpenPopover, triggerRef) => {
  const listItems = listRef.current?.querySelectorAll('[data-test="DesignSystem-Listbox-ItemWrapper"]');
  let targetOption;
  switch (event.key) {
    case 'ArrowUp':
      event.preventDefault();
      targetOption = listItems[listItems.length - 1];
      break;
    case 'ArrowDown':
      event.preventDefault();
      targetOption = listItems[0];
      break;
    case 'Escape':
      setOpenPopover?.(false);
      triggerRef.current.focus();
      setFocusedOption?.(undefined);
      break;
  }
  targetOption?.focus();
  targetOption?.scrollIntoView({
    block: 'center'
  });
  setFocusedOption && setFocusedOption(targetOption);
};

var css_248z$8 = ".select-module-Select-input-E3-1I-5-0-0-9 {\n  min-width: unset !important;\n  background: transparent;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n  height: 36px;\n}\n\n.select-module-Select-input-E3-1I-5-0-0-9,\n.select-module-Select-input-E3-1I-5-0-0-9:focus-within {\n  border: unset !important;\n  box-shadow: none !important;\n}\n\n.select-module-Select-input-E3-1I-5-0-0-9:hover {\n  background-color: #f4f4f4;\n}\n\n.select-module-Select-trigger-PT5nA-5-0-0-9 {\n  width: 100%;\n  justify-content: space-between;\n  padding-top: unset;\n  padding-bottom: unset;\n  background: var(--secondary-light);\n  color: var(--text);\n  transition: var(--duration--fast-01) var(--standard-productive-curve);\n}\n\n.select-module-Select-trigger-PT5nA-5-0-0-9:disabled {\n  background: var(--secondary-lighter);\n  color: var(--text-disabled);\n  pointer-events: none;\n}\n\n.select-module-Select-trigger-PT5nA-5-0-0-9:active,\n.select-module-Select-trigger--open-TseL8-5-0-0-9 {\n  background-color: var(--secondary-dark) !important;\n  color: var(--text) !important;\n  animation-timing-function: cubic-bezier(0, 0, 0.38, 0.9);\n  animation-duration: 120ms;\n}\n\n.select-module-Select-trigger-PT5nA-5-0-0-9:hover {\n  background: var(--secondary);\n  color: var(--text);\n}\n\n.select-module-Select-trigger-PT5nA-5-0-0-9:focus {\n  background-color: var(--secondary-light);\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n}\n\n.select-module-Select-inputWrapper-LT8pe-5-0-0-9 {\n  border-bottom: var(--border-width-2-5) solid var(--secondary-dark);\n}\n\n.select-module-Select-inputWrapper-LT8pe-5-0-0-9:focus-within {\n  border-bottom: var(--border-width-2-5) solid var(--primary);\n}\n\n.select-module-Select-trigger-wrapper-NMxls-5-0-0-9 {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  overflow: hidden;\n}\n\n.select-module-Select-trigger--small-v-qam-5-0-0-9 {\n  height: var(--spacing-60);\n  padding-right: var(--spacing-20);\n  padding-left: var(--spacing-20);\n}\n\n.select-module-Select-trigger--text-7nEKU-5-0-0-9,\n.select-module-Select-option--text-WfcEP-5-0-0-9 {\n  text-align: left;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n  margin: 0;\n  font-size: var(--font-size);\n  line-height: var(--font-height);\n  width: 100%;\n}\n\n.select-module-Select-trigger--regular-Dx-fp-5-0-0-9 {\n  height: var(--spacing-80);\n  padding-right: var(--spacing-20);\n  padding-left: var(--spacing-30);\n}\n\n.select-module-Select-trigger--placeholder-1PVyt-5-0-0-9 {\n  color: var(--text);\n}\n\n.select-module-Select-trigger--icon-eX-q0-5-0-0-9 {\n  padding-left: var(--spacing-20);\n}\n\n.select-module-Select-buttonWrapper-Dm9cQ-5-0-0-9 {\n  display: flex;\n  justify-content: flex-end;\n  padding-top: var(--spacing-20);\n  padding-right: var(--spacing-20);\n  padding-bottom: var(--spacing-20);\n  border-top: var(--border-width-2-5) solid var(--secondary-light);\n}\n\n.select-module-Select-crossButton-RUlwA-5-0-0-9 {\n  display: flex;\n  flex-shrink: 0;\n  overflow: hidden;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  cursor: pointer;\n  border-radius: var(--border-radius-full);\n  padding: var(--spacing-05);\n}\n\n.select-module-Select-crossButton-RUlwA-5-0-0-9:focus-visible,\n.select-module-Select-crossButton-RUlwA-5-0-0-9:focus {\n  outline: var(--spacing-05) solid var(--secondary-shadow);\n}\n\n.select-module-Select-crossButton-RUlwA-5-0-0-9:hover {\n  background-color: var(--secondary);\n}\n\n.select-module-Select-crossButton-RUlwA-5-0-0-9:active {\n  background-color: var(--secondary-dark);\n}\n\n.select-module-Select-option-HDep4-5-0-0-9 {\n  display: flex;\n  align-items: flex-start;\n  width: 100%;\n}\n";
var styles$8 = {"Select-input":"select-module-Select-input-E3-1I-5-0-0-9","Select-trigger":"select-module-Select-trigger-PT5nA-5-0-0-9","Select-trigger--open":"select-module-Select-trigger--open-TseL8-5-0-0-9","Select-inputWrapper":"select-module-Select-inputWrapper-LT8pe-5-0-0-9","Select-trigger-wrapper":"select-module-Select-trigger-wrapper-NMxls-5-0-0-9","Select-trigger--small":"select-module-Select-trigger--small-v-qam-5-0-0-9","Select-trigger--text":"select-module-Select-trigger--text-7nEKU-5-0-0-9","Select-option--text":"select-module-Select-option--text-WfcEP-5-0-0-9","Select-trigger--regular":"select-module-Select-trigger--regular-Dx-fp-5-0-0-9","Select-trigger--placeholder":"select-module-Select-trigger--placeholder-1PVyt-5-0-0-9","Select-trigger--icon":"select-module-Select-trigger--icon-eX-q0-5-0-0-9","Select-buttonWrapper":"select-module-Select-buttonWrapper-Dm9cQ-5-0-0-9","Select-crossButton":"select-module-Select-crossButton-RUlwA-5-0-0-9","Select-option":"select-module-Select-option-HDep4-5-0-0-9"};
styleInject(css_248z$8);

const SelectOption = props => {
  const {
    children,
    option,
    checkedState,
    onClick,
    withCheckbox = true,
    disabled,
    ...rest
  } = props;
  const contextProp = React.useContext(SelectContext);
  const {
    onOptionClick,
    selectValue,
    setSelectValue,
    multiSelect,
    setIsOptionSelected,
    focusedOption,
    setFocusedOption,
    setHighlightFirstItem,
    setHighlightLastItem,
    listRef,
    withSearch,
    setOpenPopover,
    triggerRef
  } = contextProp;
  const onClickHandler = () => {
    if (disabled) return;
    if (onClick) {
      onClick(option);
      return;
    }
    const newList = multiSelect && Array.isArray(selectValue) ? removeOrAddToList(option, selectValue) : option;
    setIsOptionSelected?.(Array.isArray(newList) ? newList.length !== 0 : true);
    setSelectValue?.(newList);
    onOptionClick?.(newList);
  };
  const checked = checkedState === 'checked' || elementExist(option, selectValue) !== -1;
  const indeterminate = checkedState === 'indeterminate';
  const optionItemClass = classNames({
    [styles$8['Select-option']]: true
  });
  const textClass = classNames({
    [styles$8['Select-option--text']]: true,
    'pt-2': multiSelect
  });
  const onKeyDownHandler = event => {
    handleKeyDown$2(event, focusedOption, setFocusedOption, setHighlightFirstItem, setHighlightLastItem, listRef, withSearch, setOpenPopover, triggerRef);
  };
  return /*#__PURE__*/React.createElement(Listbox.Item, _extends$2({
    role: "option",
    onClick: onClickHandler,
    "aria-selected": checked,
    "aria-label": "option item",
    onKeyDown: event => onKeyDownHandler(event),
    selected: checked,
    tabIndex: -1,
    disabled: disabled,
    "data-test": "DesignSystem-Select-Option"
  }, rest), /*#__PURE__*/React.createElement("div", {
    className: optionItemClass
  }, multiSelect && withCheckbox && /*#__PURE__*/React.createElement(Checkbox, {
    tabIndex: -1,
    "aria-checked": indeterminate ? 'mixed' : checked,
    checked: checked,
    indeterminate: indeterminate
  }), /*#__PURE__*/React.createElement("div", {
    className: textClass
  }, children)));
};
SelectOption.defaultProps = {
  withCheckbox: true
};

const SelectTrigger = props => {
  const {
    triggerSize,
    placeholder,
    withClearButton,
    icon,
    disabled,
    inlineLabel,
    iconType,
    onClear,
    setLabel,
    ...rest
  } = props;
  const contextProp = React.useContext(SelectContext);
  const elementRef = React.useRef(null);
  const {
    openPopover,
    selectValue,
    setSelectValue,
    isOptionSelected,
    setIsOptionSelected,
    multiSelect,
    setOpenPopover,
    setHighlightFirstItem,
    setHighlightLastItem,
    triggerRef,
    width
  } = contextProp;
  const buttonDisabled = disabled ? 'disabled' : 'default';
  const trimmedPlaceholder = placeholder?.trim();
  const displayValue = computeValue(multiSelect, selectValue, setLabel);
  const value = isOptionSelected && displayValue.length > 0 ? displayValue : trimmedPlaceholder;
  const iconName = openPopover ? 'keyboard_arrow_up' : 'keyboard_arrow_down';
  const triggerStyle = {
    width: width
  };
  const onClearHandler = event => {
    event.stopPropagation();
    const emptyValue = multiSelect ? [] : {
      label: '',
      value: ''
    };
    setSelectValue?.(emptyValue);
    setIsOptionSelected?.(false);
    if (onClear) {
      onClear(event);
    }
  };
  const buttonClass = classNames({
    [buttonStyles['Button']]: true,
    [styles$8['Select-trigger']]: true,
    [styles$8[`Select-trigger--${triggerSize}`]]: triggerSize,
    [styles$8['Select-trigger--placeholder']]: !isOptionSelected,
    [styles$8['Select-trigger--icon']]: icon,
    [styles$8['Select-trigger--open']]: openPopover
  });
  const textClass = classNames({
    [textStyles['Text']]: true,
    [textStyles['Text--regular']]: true,
    [styles$8['Select-trigger--text']]: true
  });
  const triggerClass = classNames([styles$8['Select-trigger-wrapper']], 'ellipsis--noWrap');
  const iconClass = classNames('align-items-center', 'mr-2', 'ml-3', styles$8['Select-crossButton']);
  return /*#__PURE__*/React.createElement(Tooltip, {
    showOnTruncation: true,
    showTooltip: !openPopover,
    tooltip: value,
    elementRef: elementRef,
    triggerClass: "w-100"
  }, /*#__PURE__*/React.createElement("button", _extends$2({
    ref: triggerRef,
    onKeyDown: event => handleKeyDownTrigger(event, setOpenPopover, setHighlightFirstItem, setHighlightLastItem),
    type: "button",
    className: buttonClass,
    disabled: disabled,
    tabIndex: 0,
    style: triggerStyle,
    "aria-haspopup": "listbox",
    "aria-expanded": openPopover,
    "aria-label": "trigger",
    "data-test": "DesignSystem-Select-trigger"
  }, rest), /*#__PURE__*/React.createElement("div", {
    className: triggerClass
  }, inlineLabel && /*#__PURE__*/React.createElement(Text, {
    appearance: "subtle",
    className: "mr-4 white-space-nowrap"
  }, `${inlineLabel.trim().charAt(0).toUpperCase()}${inlineLabel.trim().slice(1)}`), icon && !inlineLabel && /*#__PURE__*/React.createElement(Icon, {
    appearance: buttonDisabled,
    className: "d-flex align-items-center mr-4",
    name: icon,
    type: iconType
  }), value && /*#__PURE__*/React.createElement("span", {
    ref: elementRef,
    className: textClass
  }, value)), isOptionSelected && withClearButton && /*#__PURE__*/React.createElement(Icon, {
    appearance: buttonDisabled,
    onClick: onClearHandler,
    className: iconClass,
    size: 12,
    name: "close",
    "aria-label": "clear selected",
    type: iconType,
    "data-test": "DesignSystem-Select--closeIcon"
  }), /*#__PURE__*/React.createElement(Icon, {
    appearance: buttonDisabled,
    name: iconName,
    type: iconType
  })));
};
SelectTrigger.defaultProps = {
  triggerSize: 'regular',
  placeholder: 'Select',
  withClearButton: true
};

const SearchInput = props => {
  const contextProp = React.useContext(SelectContext);
  const {
    setWithSearch,
    maxHeight,
    listRef,
    setFocusedOption,
    setOpenPopover,
    triggerRef
  } = contextProp;
  const {
    onChange,
    onClear,
    ...rest
  } = props;
  React.useEffect(() => {
    setWithSearch?.(true);
  }, [maxHeight]);
  const searchHandler = event => {
    if (onChange) onChange(event.target.value);
  };
  const searchClearHandler = event => {
    if (onClear) onClear(event);
  };
  return /*#__PURE__*/React.createElement("div", {
    className: styles$8['Select-inputWrapper']
  }, /*#__PURE__*/React.createElement(Input, _extends$2({}, rest, {
    icon: 'search',
    onKeyDown: event => handleInputKeyDown(event, listRef, setFocusedOption, setOpenPopover, triggerRef)
    // TODO(a11y): research more on this.
    // eslint-disable-next-line jsx-a11y/no-autofocus
    ,
    autoFocus: true,
    onChange: searchHandler,
    onClear: searchClearHandler,
    autoComplete: 'off',
    "aria-label": "Search",
    "aria-haspopup": "listbox",
    className: styles$8['Select-input'],
    "data-test": "DesignSystem-Select--Input"
  })));
};

const SelectEmptyTemplate = props => {
  const contextProp = React.useContext(SelectContext);
  const {
    maxHeight,
    withSearch
  } = contextProp;
  const {
    title,
    description,
    children,
    ...rest
  } = props;
  const searchInputHeight = 33;
  const wrapperStyle = {
    minHeight: withSearch ? maxHeight - searchInputHeight : maxHeight
  };
  return /*#__PURE__*/React.createElement("div", _extends$2({
    className: "px-7 d-flex justify-content-center align-items-center",
    style: wrapperStyle,
    "data-test": "DesignSystem-Select-EmptyState--wrapper",
    "aria-live": "polite",
    role: "alert"
  }, rest), /*#__PURE__*/React.createElement("div", {
    "aria-labelledby": title,
    "aria-describedby": description,
    className: "d-flex flex-column justify-content-center align-items-center"
  }, title && /*#__PURE__*/React.createElement(Text, {
    id: title,
    role: "heading",
    className: "text-align-center mb-3",
    weight: "strong"
  }, title), description && /*#__PURE__*/React.createElement(Text, {
    id: description,
    className: "text-align-center mb-6",
    weight: "medium",
    size: "small",
    appearance: "subtle"
  }, description), children && children));
};

const SelectFooter = props => {
  const {
    children,
    ...rest
  } = props;
  return /*#__PURE__*/React.createElement("div", _extends$2({
    className: styles$8['Select-buttonWrapper']
  }, rest), children);
};

const Select = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    children,
    onSelect,
    width,
    maxHeight,
    minHeight,
    value,
    boundaryElement,
    appendToBody,
    multiSelect = false,
    onOutsideClick,
    triggerOptions,
    popoverWidth,
    trigger,
    onToggle
  } = props;
  const [openPopover, setOpenPopover] = React.useState(false);
  const mapValue = mapInitialValue(multiSelect, value);
  const [selectValue, setSelectValue] = React.useState(mapValue);
  const [isOptionSelected, setIsOptionSelected] = React.useState(false);
  const triggerRef = /*#__PURE__*/React.createRef();
  const listRef = React.useRef(null);
  const [withSearch, setWithSearch] = React.useState(false);
  const [focusedOption, setFocusedOption] = React.useState();
  const [highlightFirstItem, setHighlightFirstItem] = React.useState(false);
  const [highlightLastItem, setHighlightLastItem] = React.useState(false);
  const [popoverStyle, setPopoverStyle] = React.useState({
    width: popoverWidth || width
  });
  const baseProps = extractBaseProps(props);
  const WrapperStyle = trigger ? {} : {
    width: width
  };
  const getTriggerElement = () => {
    if (trigger) {
      return /*#__PURE__*/React.cloneElement(trigger, {
        ref: triggerRef
      });
    }
    return /*#__PURE__*/React.createElement(SelectTrigger, _extends$2({
      "aria-controls": "select-listbox"
    }, triggerOptions));
  };
  React.useEffect(() => {
    // if popover width is not provided explicitly, apply the trigger width to popover width
    const MIN_WIDTH = 176;
    const triggerWidth = triggerRef.current?.clientWidth;
    if (!popoverWidth && triggerWidth) {
      setPopoverStyle({
        ...popoverStyle,
        width: trigger ? Math.max(triggerWidth || 0, MIN_WIDTH) : triggerWidth
      });
    }
  }, []);
  React.useImperativeHandle(ref, () => ({
    setOpen: open => {
      setOpenPopover?.(open);
    },
    setFocusFirstItem: () => {
      if (openPopover) {
        requestAnimationFrame(() => focusListItem$1('down', setFocusedOption, listRef));
        setHighlightFirstItem(true);
      }
    },
    setFocusLastItem: () => {
      if (openPopover) {
        requestAnimationFrame(() => focusListItem$1('up', setFocusedOption, listRef));
        setHighlightLastItem(true);
      }
    }
  }));
  React.useEffect(() => {
    if (!openPopover) {
      setHighlightFirstItem(false);
      setHighlightLastItem(false);
    }
  }, [openPopover]);
  React.useEffect(() => {
    if (highlightFirstItem && openPopover) {
      requestAnimationFrame(() => focusListItem$1('down', setFocusedOption, listRef));
    }
  }, [highlightFirstItem]);
  React.useEffect(() => {
    if (highlightLastItem && openPopover) {
      requestAnimationFrame(() => focusListItem$1('up', setFocusedOption, listRef));
    }
  }, [highlightLastItem]);
  React.useEffect(() => {
    if (value) {
      setSelectValue(value);
      setIsOptionSelected(Array.isArray(value) ? value.length > 0 : value && 'value' in value);
    }
  }, [value]);
  const onToggleHandler = open => {
    if (onToggle) {
      onToggle(open);
    }
    if (triggerOptions && triggerOptions.disabled) {
      setOpenPopover(false);
    } else {
      setOpenPopover(open);
      setHighlightFirstItem(open);
    }
  };
  const onOptionClick = option => {
    onSelect?.(option);
    !multiSelect && setOpenPopover(false);
  };
  const onOutsideClickHandler = () => {
    onOutsideClick?.();
  };
  const contextProp = {
    openPopover,
    setOpenPopover,
    selectValue,
    setSelectValue,
    isOptionSelected,
    setIsOptionSelected,
    onOptionClick,
    maxHeight,
    minHeight,
    withSearch,
    width,
    setWithSearch,
    multiSelect,
    listRef,
    triggerRef,
    focusedOption,
    setFocusedOption,
    setHighlightFirstItem,
    setHighlightLastItem
  };
  return /*#__PURE__*/React.createElement(SelectContext.Provider, {
    value: contextProp
  }, /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Select",
    style: WrapperStyle,
    "aria-haspopup": "listbox",
    "aria-expanded": openPopover
  }, baseProps), /*#__PURE__*/React.createElement(Popover, {
    open: openPopover,
    onToggle: onToggleHandler,
    className: "mt-3",
    triggerClass: "d-block",
    position: "bottom-start",
    customStyle: popoverStyle,
    boundaryElement: boundaryElement,
    appendToBody: appendToBody,
    trigger: getTriggerElement()
  }, /*#__PURE__*/React.createElement(OutsideClick, {
    onOutsideClick: onOutsideClickHandler
  }, /*#__PURE__*/React.createElement("div", {
    role: "listbox",
    id: "select-listbox",
    tabIndex: 0,
    ref: listRef
  }, children)))));
});
Select.displayName = 'Select';
Select.defaultProps = {
  maxHeight: 256,
  width: 176
};
Select.Option = SelectOption;
Select.List = SelectList;
Select.SearchInput = SearchInput;
Select.EmptyTemplate = SelectEmptyTemplate;
Select.Footer = SelectFooter;

var css_248z$7 = ".menu-module-Menu-AK6Tm-5-0-0-9 {\n  overflow-y: auto !important;\n  padding-top: var(--spacing-10);\n  padding-bottom: var(--spacing-10);\n}\n\n.menu-module-Menu-Trigger--active-jEVVp-5-0-0-9 {\n  background-color: var(--secondary-dark);\n}\n\n.menu-module-Menu-Item-oX6Gf-5-0-0-9 {\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.menu-module-Menu-Group-Label-Qj6zC-5-0-0-9 {\n  display: flex;\n  align-items: center;\n  padding-bottom: var(--spacing-15);\n  padding-top: var(--spacing-30);\n  padding-left: var(--spacing-40);\n  padding-right: var(--spacing-30);\n}\n\n.menu-module-Menu-Group-MAnuz-5-0-0-9:first-child .menu-module-Menu-Group-Label-Qj6zC-5-0-0-9 {\n  padding-top: var(--spacing-20);\n}\n";
var styles$7 = {"Menu":"menu-module-Menu-AK6Tm-5-0-0-9","Menu-Trigger--active":"menu-module-Menu-Trigger--active-jEVVp-5-0-0-9","Menu-Item":"menu-module-Menu-Item-oX6Gf-5-0-0-9","Menu-Group-Label":"menu-module-Menu-Group-Label-Qj6zC-5-0-0-9","Menu-Group":"menu-module-Menu-Group-MAnuz-5-0-0-9"};
styleInject(css_248z$7);

const MenuGroup = props => {
  const {
    label,
    children,
    showDivider,
    ...rest
  } = props;
  if (label) {
    return /*#__PURE__*/React__default.createElement("div", _extends$2({
      "data-test": "DesignSystem-Menu-Group",
      role: "group",
      className: styles$7['Menu-Group']
    }, rest), /*#__PURE__*/React__default.createElement(Text, {
      "data-test": "DesignSystem-Menu-Group-Label",
      size: "small",
      weight: "medium",
      appearance: "subtle",
      className: styles$7['Menu-Group-Label']
    }, label), children);
  }
  return /*#__PURE__*/React__default.createElement("div", _extends$2({
    "data-test": "DesignSystem-Menu-Group",
    role: "group"
  }, rest), children, showDivider && /*#__PURE__*/React__default.createElement(Divider, {
    className: "my-3"
  }));
};
MenuGroup.defaultProps = {
  showDivider: true
};

const MenuContext = /*#__PURE__*/React.createContext({});

const handleKeyDown$1 = (event, focusedOption, setFocusedOption, setOpenPopover, menuTriggerRef, listRef, subListRef, isSubMenuTrigger, triggerRef, menuID, triggerID, parentListRef) => {
  switch (event.key) {
    case 'ArrowUp':
      event.preventDefault();
      navigateOptions('up', focusedOption, setFocusedOption, listRef);
      break;
    case 'ArrowDown':
      event.preventDefault();
      navigateOptions('down', focusedOption, setFocusedOption, listRef);
      break;
    case 'Enter':
      focusedOption?.click();
      setOpenPopover?.(false);
      break;
    case 'Escape':
      setOpenPopover?.(false);
      if (triggerRef && !isSubMenuTrigger) {
        triggerRef?.current?.focus();
      } else {
        menuTriggerRef?.current?.focus();
      }
      setFocusedOption?.(undefined);
      break;
    case 'Tab':
      setOpenPopover?.(false);
      break;
    case 'ArrowRight':
      navigateSubMenu(isSubMenuTrigger, 'right', subListRef, menuID, triggerID, parentListRef);
      break;
    case 'ArrowLeft':
      navigateSubMenu(isSubMenuTrigger, 'left', subListRef, menuID, triggerID, parentListRef);
      break;
  }
};
const navigateOptions = (direction, focusedOption, setFocusedOption, listRef) => {
  const listItems = listRef.current?.querySelectorAll('[data-test="DesignSystem-Listbox-ItemWrapper"]');
  let index = Array.from(listItems).findIndex(item => {
    return item == focusedOption;
  });
  if (index === -1) {
    index = direction === 'up' ? listItems.length - 1 : 0;
  } else {
    index = direction === 'up' ? (index - 1 + listItems.length) % listItems.length : (index + 1) % listItems.length;
  }
  const targetOption = listItems[index];
  targetOption.focus();
  setFocusedOption && setFocusedOption(targetOption);
  targetOption?.scrollIntoView?.({
    block: 'center'
  });
};
const navigateSubMenu = (isSubMenuTrigger, direction, subListRef, menuID, triggerID, parentListRef) => {
  const element = document.querySelector(`[data-name="${menuID}"]`);
  const menuPlacement = element?.getAttribute('data-placement');
  if (isSubMenuTrigger) {
    if (direction === 'right' && menuPlacement?.includes('right') || direction === 'left' && menuPlacement?.includes('left')) {
      const listItems = subListRef?.current?.querySelectorAll('[data-test="DesignSystem-Listbox-ItemWrapper"]');
      (listItems?.[0]).focus();
    }
  } else if (direction === 'left' && menuPlacement?.includes('right') || direction === 'right' && menuPlacement?.includes('left')) {
    const triggerElement = parentListRef?.current?.querySelector(`#${triggerID}`)?.firstChild;
    triggerElement?.focus();
  }
};

const SubMenuContext = /*#__PURE__*/React.createContext({});

const MenuItem = props => {
  const {
    children,
    className,
    onClick,
    disabled,
    onFocus,
    ...rest
  } = props;
  const contextProp = React__default.useContext(MenuContext);
  const subMenuContextProp = React__default.useContext(SubMenuContext);
  const isSubMenuTrigger = false;
  const subListRef = null;
  const {
    triggerRef,
    menuID,
    setParentOpen,
    triggerID,
    parentListRef
  } = subMenuContextProp;
  const {
    setOpenPopover,
    focusedOption,
    setFocusedOption,
    menuTriggerRef,
    listRef
  } = contextProp;
  const MenuItemClassName = classNames(styles$7['Menu-Item'], className);
  React__default.useEffect(() => {
    const handlePopoverOpen = () => {
      setOpenPopover?.(true);
    };
    const handlePopoverClose = () => {
      setOpenPopover?.(false);
    };
    const triggerElement = parentListRef?.current?.querySelector(`#${triggerID}`)?.firstChild;
    triggerElement?.addEventListener('focus', handlePopoverOpen);
    triggerElement?.addEventListener('blur', handlePopoverClose);
    return () => {
      triggerElement?.removeEventListener('focus', handlePopoverOpen);
      triggerElement?.removeEventListener('blur', handlePopoverClose);
    };
  }, [triggerID]);
  const onFocusHandler = event => {
    setFocusedOption?.(event.target);
    setOpenPopover?.(true);
    onFocus?.(event);
  };
  const onKeyDownHandler = event => {
    handleKeyDown$1(event, focusedOption, setFocusedOption, setOpenPopover, menuTriggerRef, listRef, subListRef, isSubMenuTrigger, triggerRef, menuID, triggerID, parentListRef);
  };
  const onClickHandler = event => {
    if (disabled) {
      return;
    }
    setOpenPopover?.(false);
    onClick?.(event);
    setParentOpen?.(false);
  };
  return /*#__PURE__*/React__default.createElement(Listbox.Item, _extends$2({
    "data-test": "DesignSystem-Menu-ListItem",
    className: MenuItemClassName,
    tabIndex: -1,
    onKeyDown: onKeyDownHandler,
    onFocus: onFocusHandler,
    onClick: onClickHandler,
    disabled: disabled,
    role: "menuitem",
    "aria-disabled": disabled
  }, rest), children);
};
MenuItem.displayName = 'MenuItem';
MenuItem.defaultProps = {
  tagName: 'a'
};

const MenuList = props => {
  const {
    children,
    ...rest
  } = props;
  return /*#__PURE__*/React__default.createElement(Listbox, _extends$2({
    "data-test": "DesignSystem-Menu-List"
  }, rest), children);
};
MenuList.defaultProps = {
  type: 'option',
  showDivider: false,
  tagName: 'nav',
  size: 'compressed'
};

const handleKeyDown = (event, setOpenPopover, setHighlightFirstItem, setHighlightLastItem) => {
  switch (event.key) {
    case 'ArrowUp':
      event.preventDefault();
      setOpenPopover?.(true);
      setHighlightLastItem?.(true);
      break;
    case 'ArrowDown':
      event.preventDefault();
      setOpenPopover?.(true);
      setHighlightFirstItem?.(true);
      break;
    case 'Escape':
    case 'Tab':
      setOpenPopover?.(false);
      break;
  }
};
const focusListItem = (position, setFocusedOption, listRef) => {
  const listItems = listRef.current?.querySelectorAll('[data-test="DesignSystem-Listbox-ItemWrapper"]');
  let targetOption;
  if (position === 'down') {
    targetOption = listItems?.[0];
  } else {
    targetOption = listItems?.[listItems.length - 1];
  }
  targetOption?.focus();
  if (targetOption && typeof targetOption.scrollIntoView === 'function') {
    targetOption?.scrollIntoView({
      block: 'end'
    });
  }
  setFocusedOption && setFocusedOption(targetOption);
};

const MenuTrigger = props => {
  const {
    className
  } = props;
  const contextProp = React__default.useContext(MenuContext);
  const {
    openPopover,
    setOpenPopover,
    setHighlightFirstItem,
    setHighlightLastItem,
    menuTriggerRef
  } = contextProp;
  const triggerClassName = classNames({
    [styles$7['Menu-Trigger--active']]: openPopover
  }, className);
  const onKeyDownHandler = event => {
    handleKeyDown(event, setOpenPopover, setHighlightFirstItem, setHighlightLastItem);
  };
  return /*#__PURE__*/React__default.createElement(Button, _extends$2({
    "data-test": "DesignSystem-Menu-Trigger",
    icon: "more_horiz",
    ref: menuTriggerRef,
    "aria-label": "Open menu",
    "aria-haspopup": true,
    "aria-expanded": openPopover
  }, props, {
    className: triggerClassName,
    onKeyDown: onKeyDownHandler
  }));
};

const SubMenu = props => {
  const {
    children
  } = props;
  const menuID = `DesignSystem-Menu--Popover-${uidGenerator()}`;
  const triggerID = `DesignSystem-Menu--Trigger-${uidGenerator()}`;
  const [submenuTrigger, submenuContent] = React__default.Children.toArray(children);
  const contextProp = React__default.useContext(MenuContext);
  const subListRef = React__default.useRef(null);
  const triggerRef = React__default.useRef(null);
  const isSubMenuTrigger = true;
  let subMenuElement = /*#__PURE__*/React__default.createElement(React__default.Fragment, null);
  const {
    setOpenPopover,
    focusedOption,
    setFocusedOption,
    menuTriggerRef,
    listRef
  } = contextProp;
  const onKeyDownHandler = event => {
    handleKeyDown$1(event, focusedOption, setFocusedOption, setOpenPopover, menuTriggerRef, listRef, subListRef, isSubMenuTrigger, triggerRef, menuID);
  };
  const subMenuContextProp = {
    triggerRef,
    menuID,
    setParentOpen: setOpenPopover,
    parentListRef: listRef,
    triggerID
  };
  const triggerElement = /*#__PURE__*/React__default.cloneElement(submenuTrigger, {
    ...submenuTrigger?.props,
    onKeyDown: onKeyDownHandler,
    ref: triggerRef,
    'aria-haspopup': 'menu',
    'aria-expanded': subListRef.current ? 'true' : 'false',
    'aria-controls': menuID,
    id: triggerID
  });
  if (/*#__PURE__*/React__default.isValidElement(submenuContent)) {
    const {
      on,
      children
    } = submenuContent?.props;
    subMenuElement = /*#__PURE__*/React__default.cloneElement(submenuContent, {
      ...submenuContent.props,
      on: on || 'hover',
      offset: 'small',
      children: /*#__PURE__*/React__default.createElement("div", {
        ref: subListRef
      }, children),
      trigger: triggerElement
    });
  }
  return /*#__PURE__*/React__default.createElement(SubMenuContext.Provider, {
    value: subMenuContextProp
  }, subMenuElement);
};

const Menu = props => {
  const {
    children,
    width,
    minHeight,
    maxHeight,
    className,
    open,
    onToggle,
    ...rest
  } = props;
  const [openPopover, setOpenPopover] = React__default.useState(open);
  const [highlightFirstItem, setHighlightFirstItem] = React__default.useState(false);
  const [highlightLastItem, setHighlightLastItem] = React__default.useState(false);
  const [focusedOption, setFocusedOption] = React__default.useState();
  const listRef = /*#__PURE__*/React__default.createRef();
  const menuTriggerRef = React__default.useRef(null);
  const subMenuContextProp = React__default.useContext(SubMenuContext);
  const {
    menuID
  } = subMenuContextProp;
  const popoverClassName = classNames(styles$7.Menu, className);
  React__default.useEffect(() => {
    setOpenPopover(open);
  }, [open]);
  React__default.useEffect(() => {
    if (highlightFirstItem && openPopover) {
      requestAnimationFrame(() => focusListItem('down', setFocusedOption, listRef));
    }
  }, [highlightFirstItem]);
  React__default.useEffect(() => {
    if (highlightLastItem && openPopover) {
      requestAnimationFrame(() => focusListItem('up', setFocusedOption, listRef));
    }
  }, [highlightLastItem]);
  React__default.useEffect(() => {
    if (!openPopover) {
      setHighlightFirstItem(false);
      setHighlightLastItem(false);
    }
    onToggle?.(openPopover);
  }, [openPopover]);
  const onToggleHandler = open => {
    setOpenPopover(open);
  };
  const contextProp = {
    openPopover,
    setOpenPopover,
    setHighlightFirstItem,
    setHighlightLastItem,
    focusedOption,
    setFocusedOption,
    menuTriggerRef,
    listRef
  };
  return /*#__PURE__*/React__default.createElement(MenuContext.Provider, {
    value: contextProp
  }, /*#__PURE__*/React__default.createElement(Popover, _extends$2({
    "data-test": "DesignSystem-Menu",
    name: menuID,
    offset: "medium"
  }, rest, {
    open: openPopover,
    customStyle: {
      width
    },
    onToggle: onToggleHandler
  }), /*#__PURE__*/React__default.createElement("div", {
    ref: listRef,
    role: "menu",
    "data-test": props['data-test'] || 'DesignSystem-Menu-Wrapper',
    className: popoverClassName,
    style: {
      maxHeight,
      minHeight
    }
  }, children)));
};
Menu.Group = MenuGroup;
Menu.Item = MenuItem;
Menu.List = MenuList;
Menu.Trigger = MenuTrigger;
Menu.SubMenu = SubMenu;
Menu.defaultProps = {
  width: 176,
  maxHeight: 256,
  position: 'bottom-start'
};

const KeyElement = props => {
  const {
    children,
    icon,
    iconOptions,
    iconAlign,
    label,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const iconClassNames = classNames('py-2', {
    'mr-3': iconAlign === 'left',
    'ml-3': iconAlign === 'right'
  });
  const keyClassNames = classNames('d-flex', 'align-items-center', className);
  if (children) {
    return /*#__PURE__*/React.createElement("dt", _extends$2({
      "data-test": "DesignSystem-KeyValuePair-KeyElement"
    }, baseProps), children);
  }
  return /*#__PURE__*/React.createElement("dt", _extends$2({
    "data-test": "DesignSystem-KeyValuePair-KeyElement"
  }, baseProps, {
    className: keyClassNames
  }), icon && iconAlign === 'left' && /*#__PURE__*/React.createElement(Icon, _extends$2({
    appearance: "subtle",
    name: icon,
    className: iconClassNames,
    "data-test": "DesignSystem-KeyValuePair-Icon--Left"
  }, iconOptions)), label && /*#__PURE__*/React.createElement(Text, {
    weight: "medium",
    appearance: "subtle"
  }, label), icon && iconAlign === 'right' && /*#__PURE__*/React.createElement(Icon, _extends$2({
    appearance: "subtle",
    name: icon,
    className: iconClassNames,
    "data-test": "DesignSystem-KeyValuePair-Icon--Right"
  }, iconOptions)));
};
KeyElement.defaultProps = {
  iconAlign: 'left'
};

const ValueElement = props => {
  const {
    children,
    value,
    className
  } = props;
  const baseProps = extractBaseProps(props);
  const valueClassNames = classNames('m-0', className);
  if (children) {
    return /*#__PURE__*/React.createElement("dd", _extends$2({
      "data-test": "DesignSystem-KeyValuePair-ValueElement"
    }, baseProps, {
      className: valueClassNames
    }), children);
  }
  return /*#__PURE__*/React.createElement("dd", _extends$2({
    "data-test": "DesignSystem-KeyValuePair-ValueElement"
  }, baseProps, {
    className: valueClassNames
  }), value && /*#__PURE__*/React.createElement(Text, null, value));
};

const KeyValuePair = props => {
  const {
    children,
    className
  } = props;
  const pairClassNames = classNames('m-0', className);
  return /*#__PURE__*/React.createElement("dl", _extends$2({
    "data-test": "DesignSystem-KeyValuePair"
  }, props, {
    className: pairClassNames
  }), children);
};
KeyValuePair.Key = KeyElement;
KeyValuePair.Value = ValueElement;

const DateSeparator = props => {
  const {
    date,
    className,
    ...rest
  } = props;
  return /*#__PURE__*/React.createElement(Text, _extends$2({
    appearance: "subtle",
    className: classNames('pt-7 pb-6 d-flex justify-content-center', className),
    role: "separator",
    "aria-label": String(date),
    "data-test": "DesignSystem-Chat-DateSeparator"
  }, rest), date);
};

var css_248z$6 = ".chatSeparator-module-Chat-UnreadMessage-JFwqI-5-0-0-9 {\n  border-radius: var(--border-radius-40);\n  padding: var(--spacing-05) var(--spacing-30) var(--spacing-05) var(--spacing-20);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--primary);\n  cursor: pointer;\n}\n\n.chatSeparator-module-NewMessage-Divider--left-tvVhe-5-0-0-9 {\n  flex: 1;\n  height: var(--spacing-2-5);\n  background-color: var(--primary);\n  margin-right: var(--spacing-40);\n}\n\n.chatSeparator-module-NewMessage-Divider--right-PlY2h-5-0-0-9 {\n  flex: 1;\n  height: var(--spacing-2-5);\n  background-color: var(--primary);\n  margin-left: var(--spacing-40);\n}\n";
var styles$6 = {"Chat-UnreadMessage":"chatSeparator-module-Chat-UnreadMessage-JFwqI-5-0-0-9","NewMessage-Divider--left":"chatSeparator-module-NewMessage-Divider--left-tvVhe-5-0-0-9","NewMessage-Divider--right":"chatSeparator-module-NewMessage-Divider--right-PlY2h-5-0-0-9"};
styleInject(css_248z$6);

const UnreadMessage = props => {
  const {
    text,
    className,
    ...rest
  } = props;
  const wrapperClass = classNames('d-flex align-items-center justify-content-center my-4', className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Chat-UnreadMessage",
    className: wrapperClass
  }, rest), /*#__PURE__*/React.createElement("span", {
    className: styles$6['Chat-UnreadMessage'],
    role: "button",
    "aria-label": text
  }, /*#__PURE__*/React.createElement(Icon, {
    appearance: "white",
    name: "arrow_Downward",
    className: "mr-3"
  }), /*#__PURE__*/React.createElement(Text, {
    appearance: "white",
    weight: "strong",
    "data-test": "DesignSystem-Chat-UnreadMessage-Text"
  }, text)));
};

const NewMessage = props => {
  const {
    text,
    className,
    ...rest
  } = props;
  const classes = classNames('py-6 d-flex justify-content-center align-items-center', className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Chat-NewMessage",
    className: classes,
    role: "button",
    "aria-label": text,
    "aria-live": "polite"
  }, rest), /*#__PURE__*/React.createElement("span", {
    className: styles$6['NewMessage-Divider--left']
  }), /*#__PURE__*/React.createElement(Text, {
    appearance: "link",
    weight: "strong",
    size: "small"
  }, text), /*#__PURE__*/React.createElement("span", {
    className: styles$6['NewMessage-Divider--right']
  }));
};

const TypingIndicator = props => {
  const {
    text,
    ...rest
  } = props;
  return /*#__PURE__*/React.createElement(Text, _extends$2({
    "data-test": "DesignSystem-Chat-TypingIndicator",
    appearance: "subtle",
    weight: "medium",
    size: "small",
    role: "status",
    "aria-live": "polite",
    "aria-atomic": "true"
  }, rest), text);
};

var css_248z$5 = ".chatBubble-module-ChatBubble-box--outgoing-YSk5I-5-0-0-9 {\n  background-color: var(--primary-lightest);\n  border-radius: var(--border-radius-20);\n  padding: var(--spacing-20) var(--spacing-30);\n}\n\n.chatBubble-module-ChatBubble-separator-JaN-K-5-0-0-9 {\n  width: var(--spacing-10);\n  height: var(--spacing-10);\n  border-radius: var(--border-radius-full);\n  margin: 0 var(--spacing-20);\n  background: var(--inverse-lightest);\n}\n\n.chatBubble-module-ChatBubble-box--noSuccess-xsoeb-5-0-0-9 {\n  margin-right: calc(var(--spacing-40) + var(--spacing-10));\n}\n\n.chatBubble-module-ChatBubble-box-hARs0-5-0-0-9 {\n  width: 100%;\n}\n\n.chatBubble-module-ChatBubble-actionBar--outgoing-uAsaH-5-0-0-9 {\n  width: -moz-max-content;\n  width: max-content;\n  margin-right: var(--spacing-10);\n  margin-top: var(--spacing-15);\n}\n\n.chatBubble-module-ChatBubble-actionBar--incoming-gosX5-5-0-0-9 {\n  width: -moz-max-content;\n  width: max-content;\n  margin-left: var(--spacing-10);\n  margin-top: var(--spacing-15);\n}\n\n.chatBubble-module-ChatBubble-box--incoming-GK6D6-5-0-0-9 {\n  background-color: var(--secondary-lightest);\n  border-radius: var(--border-radius-20);\n  padding: var(--spacing-20) var(--spacing-30);\n}\n\n.chatBubble-module-ChatBubble-metaData--incoming-dovAY-5-0-0-9 {\n  margin-left: calc(var(--spacing-80) + var(--spacing-20));\n}\n\n.chatBubble-module-ChatBubble-boxWrapper-aH59y-5-0-0-9 {\n  flex: 0 0 auto;\n  display: flex;\n  max-width: 70%;\n}\n\n.chatBubble-module-ChatBubble-actionBarWrapper-8VKZb-5-0-0-9 {\n  flex: 0 0 auto;\n}\n";
var styles$5 = {"ChatBubble-box--outgoing":"chatBubble-module-ChatBubble-box--outgoing-YSk5I-5-0-0-9","ChatBubble-separator":"chatBubble-module-ChatBubble-separator-JaN-K-5-0-0-9","ChatBubble-box--noSuccess":"chatBubble-module-ChatBubble-box--noSuccess-xsoeb-5-0-0-9","ChatBubble-box":"chatBubble-module-ChatBubble-box-hARs0-5-0-0-9","ChatBubble-actionBar--outgoing":"chatBubble-module-ChatBubble-actionBar--outgoing-uAsaH-5-0-0-9","ChatBubble-actionBar--incoming":"chatBubble-module-ChatBubble-actionBar--incoming-gosX5-5-0-0-9","ChatBubble-box--incoming":"chatBubble-module-ChatBubble-box--incoming-GK6D6-5-0-0-9","ChatBubble-metaData--incoming":"chatBubble-module-ChatBubble-metaData--incoming-dovAY-5-0-0-9","ChatBubble-boxWrapper":"chatBubble-module-ChatBubble-boxWrapper-aH59y-5-0-0-9","ChatBubble-actionBarWrapper":"chatBubble-module-ChatBubble-actionBarWrapper-8VKZb-5-0-0-9"};
styleInject(css_248z$5);

const MetaSeparator$1 = () => /*#__PURE__*/React.createElement("span", {
  className: styles$5['ChatBubble-separator'],
  "data-test": "DesignSystem-IncomingChatBubble-Separator"
});
const IncomingBubble = props => {
  const {
    time,
    metaData,
    urgentMessage,
    avatarData = {},
    showAvatar,
    children,
    actionBar,
    ...rest
  } = props;
  const {
    image,
    icon,
    firstName,
    lastName
  } = avatarData;
  const fullName = `${firstName ? firstName : ''} ${lastName ? lastName : ''}`;
  const [showActionBar, setShowActionBar] = React.useState(false);
  const showMetaRow = firstName || lastName || time || metaData || urgentMessage;
  const metaDataClass = classNames({
    ['d-flex align-items-center mb-3']: true,
    [styles$5['ChatBubble-metaData--incoming']]: showAvatar
  });
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-ChatBubble-IncomingWrapper"
  }, rest, {
    role: "group",
    "aria-labelledby": "chat-bubble-header"
  }), showMetaRow && /*#__PURE__*/React.createElement(Row, {
    className: metaDataClass,
    "data-test": "DesignSystem-IncomingChatBubble-MetaDataWrapper"
  }, [fullName && (firstName || lastName) && /*#__PURE__*/React.createElement(Text, {
    key: "fullName",
    weight: "medium",
    size: "small",
    "data-test": "DesignSystem-IncomingChatBubble-Name"
  }, fullName), time && /*#__PURE__*/React.createElement(Text, {
    key: "time",
    appearance: "subtle",
    weight: "medium",
    size: "small",
    "data-test": "DesignSystem-IncomingChatBubble-Time",
    "aria-label": `Time: ${time}`
  }, time), metaData && /*#__PURE__*/React.createElement(Text, {
    key: "metaData",
    appearance: "subtle",
    weight: "medium",
    size: "small",
    "data-test": "DesignSystem-IncomingChatBubble-MetaData",
    "aria-label": metaData
  }, metaData), urgentMessage && /*#__PURE__*/React.createElement("div", {
    key: "urgentMessage",
    "data-test": "DesignSystem-IncomingChatBubble-UrgentMessage",
    role: "alert",
    "aria-live": "assertive"
  }, urgentMessage())].filter(Boolean).map((element, index, array) => /*#__PURE__*/React.createElement(React.Fragment, {
    key: index
  }, element, index < array.length - 1 && /*#__PURE__*/React.createElement(MetaSeparator$1, {
    key: `separator-${index}`
  })))), /*#__PURE__*/React.createElement(Row, {
    onMouseEnter: () => setShowActionBar(true),
    onMouseLeave: () => setShowActionBar(false),
    "data-test": "DesignSystem-IncomingChatBubble-Wrapper"
  }, /*#__PURE__*/React.createElement(Column, {
    className: styles$5['ChatBubble-boxWrapper'],
    "data-test": "DesignSystem-IncomingChatBubble-ChatBoxWrapper"
  }, showAvatar && /*#__PURE__*/React.createElement(Avatar, _extends$2({
    "data-test": "DesignSystem-IncomingChatBubble-Avatar",
    className: "mr-4"
  }, avatarData, {
    withTooltip: false,
    "aria-label": `Avatar of ${fullName}`
  }), image || icon), /*#__PURE__*/React.createElement("div", {
    className: styles$5['ChatBubble-box--incoming'],
    "data-test": "DesignSystem-IncomingChatBubble-ChatBox"
  }, children)), /*#__PURE__*/React.createElement(Column, {
    className: styles$5['ChatBubble-actionBarWrapper']
  }, actionBar && showActionBar && /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-IncomingChatBubble-ActionBar",
    className: styles$5['ChatBubble-actionBar--incoming'],
    role: "toolbar",
    "aria-label": "Action bar"
  }, actionBar()))));
};
IncomingBubble.displayName = 'IncomingBubble';

const ChatBox$1 = props => {
  const {
    children
  } = props;
  return /*#__PURE__*/React.createElement("div", {
    className: styles$5['ChatBubble-box--outgoing'],
    "data-test": "DesignSystem-OutgoingChatBubble-ChatBox"
  }, children);
};
const MetaSeparator = () => /*#__PURE__*/React.createElement("span", {
  className: styles$5['ChatBubble-separator'],
  "data-test": "DesignSystem-OutgoingChatBubble-Separator"
});
const OutgoingBubble = props => {
  const {
    children,
    status,
    actionBar,
    time,
    metaData,
    urgentMessage,
    failed,
    failedMessage,
    className,
    ...rest
  } = props;
  const [showActionBar, setShowActionBar] = React.useState(false);
  const chatBoxClass = classNames({
    [styles$5['ChatBubble-box']]: true,
    [styles$5['ChatBubble-box--noSuccess']]: !status
  });
  const chatBoxWrapperClass = classNames('d-flex', 'align-items-end', 'w-100', className);
  const showMetaRow = time || metaData || urgentMessage || failed && failedMessage;
  const metaRowClass = classNames({
    ['d-flex justify-content-end align-items-center mb-3']: showMetaRow
  });
  return /*#__PURE__*/React.createElement("div", _extends$2({
    className: chatBoxWrapperClass,
    "data-test": "DesignSystem-ChatBubble-OutgoingWrapper"
  }, rest, {
    role: "group",
    "aria-labelledby": "chat-bubble-header"
  }), /*#__PURE__*/React.createElement("div", {
    className: chatBoxClass
  }, showMetaRow && /*#__PURE__*/React.createElement(Row, {
    className: metaRowClass
  }, failed && failedMessage && /*#__PURE__*/React.createElement("div", {
    "data-test": "DesignSystem-OutgoingChatBubble-FailedMessage",
    role: "alert",
    "aria-live": "assertive"
  }, failedMessage()), !failed && /*#__PURE__*/React.createElement(React.Fragment, null, [time && /*#__PURE__*/React.createElement(Text, {
    key: "time",
    appearance: "subtle",
    weight: "medium",
    size: "small",
    "data-test": "DesignSystem-OutgoingChatBubble-Time",
    "aria-label": `Time: ${time}`
  }, time), metaData && /*#__PURE__*/React.createElement(Text, {
    key: "metaData",
    appearance: "subtle",
    weight: "medium",
    size: "small",
    "data-test": "DesignSystem-OutgoingChatBubble-Metadata",
    "aria-label": metaData
  }, metaData), urgentMessage && /*#__PURE__*/React.createElement("div", {
    key: "urgentMessage",
    "data-test": "DesignSystem-OutgoingChatBubble-UrgentMessage",
    role: "alert",
    "aria-live": "assertive"
  }, urgentMessage())].filter(Boolean).map((element, index, array) => /*#__PURE__*/React.createElement(React.Fragment, {
    key: index
  }, element, index < array.length - 1 && /*#__PURE__*/React.createElement(MetaSeparator, {
    key: `separator-${index}`
  }))))), /*#__PURE__*/React.createElement(Row, {
    className: "d-flex justify-content-end",
    onMouseEnter: () => setShowActionBar(true),
    onMouseLeave: () => setShowActionBar(false),
    "data-test": "DesignSystem-OutgoingChatBubble-Wrapper"
  }, /*#__PURE__*/React.createElement(Column, {
    className: styles$5['ChatBubble-actionBarWrapper']
  }, actionBar && showActionBar && /*#__PURE__*/React.createElement("div", {
    className: styles$5['ChatBubble-actionBar--outgoing'],
    "data-test": "DesignSystem-OutgoingChatBubble-ActionBar",
    role: "toolbar",
    "aria-label": "Action bar"
  }, actionBar())), /*#__PURE__*/React.createElement(Column, {
    className: styles$5['ChatBubble-boxWrapper'],
    "data-test": "DesignSystem-OutgoingChatBubble-BoxWrapper"
  }, /*#__PURE__*/React.createElement(ChatBox$1, null, children)))), status && !failed && /*#__PURE__*/React.createElement(Icon, {
    name: "check_circle",
    appearance: "success",
    type: "rounded",
    className: "ml-3",
    "data-test": "DesignSystem-OutgoingChatBubble-Status",
    "aria-label": "Message sent successfully"
  }));
};
OutgoingBubble.displayName = 'OutgoingBubble';

const ChatBubble = props => {
  const {
    type,
    incomingOptions,
    outgoingOptions,
    children,
    ...rest
  } = props;
  if (type === 'incoming') {
    return /*#__PURE__*/React.createElement(IncomingBubble, _extends$2({}, incomingOptions, rest), children);
  }
  return /*#__PURE__*/React.createElement(OutgoingBubble, _extends$2({}, outgoingOptions, rest), children);
};
ChatBubble.displayName = 'ChatBubble';

const Chat = props => {
  const {
    children,
    ...rest
  } = props;
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Chat"
  }, rest), children);
};
Chat.DateSeparator = DateSeparator;
Chat.UnreadMessage = UnreadMessage;
Chat.NewMessage = NewMessage;
Chat.TypingIndicator = TypingIndicator;
Chat.ChatBubble = ChatBubble;

var css_248z$4 = ".meter-module-Meter-2i-mO-5-0-0-9 {\n  display: flex;\n  align-items: center;\n}\n\n.meter-module-Meter-Step-4Z4g3-5-0-0-9 {\n  border-radius: 50%;\n}\n\n.meter-module-Meter-Step--small-8AUww-5-0-0-9 {\n  width: var(--spacing-10);\n  height: var(--spacing-20);\n}\n\n.meter-module-Meter-Step--regular-5FlOq-5-0-0-9 {\n  width: var(--spacing-20);\n  height: var(--spacing-20);\n}\n\n.meter-module-Meter-Step--large-3n6Li-5-0-0-9 {\n  width: var(--spacing-30);\n  height: var(--spacing-30);\n}\n\n.meter-module-Meter-Step--info-dYKw1-5-0-0-9 {\n  background: var(--primary);\n}\n\n.meter-module-Meter-Step--warning-1y3zc-5-0-0-9 {\n  background: var(--warning);\n}\n\n.meter-module-Meter-Step--alert-hNfes-5-0-0-9 {\n  background: var(--alert);\n}\n\n.meter-module-Meter-Step--success-sSboi-5-0-0-9 {\n  background: var(--success);\n}\n";
var styles$4 = {"Meter":"meter-module-Meter-2i-mO-5-0-0-9","Meter-Step":"meter-module-Meter-Step-4Z4g3-5-0-0-9","Meter-Step--small":"meter-module-Meter-Step--small-8AUww-5-0-0-9","Meter-Step--regular":"meter-module-Meter-Step--regular-5FlOq-5-0-0-9","Meter-Step--large":"meter-module-Meter-Step--large-3n6Li-5-0-0-9","Meter-Step--info":"meter-module-Meter-Step--info-dYKw1-5-0-0-9","Meter-Step--warning":"meter-module-Meter-Step--warning-1y3zc-5-0-0-9","Meter-Step--alert":"meter-module-Meter-Step--alert-hNfes-5-0-0-9","Meter-Step--success":"meter-module-Meter-Step--success-sSboi-5-0-0-9"};
styleInject(css_248z$4);

const Step = props => {
  const {
    stepSize,
    type,
    fillColor,
    className,
    emptyColor
  } = props;
  const baseProps = extractBaseProps(props);
  const classes = classNames({
    [styles$4['Meter-Step']]: true,
    [styles$4[`Meter-Step--${type}`]]: type,
    [styles$4[`Meter-Step--${stepSize}`]]: stepSize,
    [styles$4[`Meter-Step--${fillColor}`]]: type === 'filled' && fillColor
  }, className);
  const emptyStyle = type === 'empty' ? {
    background: emptyColor
  } : {};
  return /*#__PURE__*/React.createElement("span", _extends$2({
    "data-test": "DesignSystem-Meter-Step"
  }, baseProps, {
    style: emptyStyle,
    className: classes,
    role: "presentation",
    "aria-hidden": "true"
  }));
};
Step.displayName = 'Step';
Step.defaultProps = {
  stepSize: 'regular',
  type: 'empty',
  emptyColor: 'var(--secondary-light)'
};

const calculateFilledSteps = (value, stepCount, min, max) => {
  if (value < min) return 0;
  if (value > max) return stepCount;
  const range = max - min;
  const stepRange = range / stepCount;
  const halfStepRange = stepRange / 2;
  let filledSteps = 0;
  for (let step = 1; step <= stepCount; step++) {
    const lowerBound = min + (step - 1) * stepRange;
    const midpoint = lowerBound + halfStepRange;
    if (value > midpoint) {
      filledSteps = step;
    }
  }
  return filledSteps;
};
const calculatePercentage = (value, min, max) => {
  if (value < min) return 0;
  if (value > max) return 100;
  return (value - min) / (max - min) * 100;
};
const useMeterValues = props => {
  const {
    value,
    min,
    max,
    stepCount,
    getFilledSteps
  } = props;
  const [filledSteps, setFilledSteps] = useState$3(0);
  const [percentage, setPercentage] = useState$3(0);
  useEffect$2(() => {
    const steps = getFilledSteps ? getFilledSteps({
      value,
      stepCount,
      min,
      max
    }) : calculateFilledSteps(value, stepCount, min, max);
    const percent = calculatePercentage(value, min, max);
    setFilledSteps(steps);
    setPercentage(percent);
  }, [value, min, max, stepCount, getFilledSteps]);
  return {
    filledSteps,
    percentage,
    value,
    min,
    max,
    stepCount
  };
};

/**
 * **Note:**
 * - Meter component is using `> half step range` logic to calculate filled steps
 * - Use [custom hook `useMeterValues`](https://mds.innovaccer.com/?path=/docs/components-meter-custom-label--custom-label) to get number of filled steps and percentage internally calculated by the component
 * - To use a [custom logic](https://mds.innovaccer.com/?path=/docs/components-meter-custom-step-logic--custom-step-logic) to calculate filled steps, you can pass it as `getFilledSteps` prop
 * - To render [custom label](https://mds.innovaccer.com/?path=/docs/components-meter-all--all), you can pass a render prop `renderLabel`
 */

const Meter = props => {
  const {
    value,
    min,
    max,
    stepCount,
    emptyColor,
    fillColor,
    getFilledSteps,
    meterSize,
    className,
    renderLabel,
    labelSize,
    ariaLabel,
    showLabel,
    ...rest
  } = props;
  const {
    filledSteps,
    percentage
  } = useMeterValues({
    value,
    min,
    max,
    stepCount,
    getFilledSteps
  });
  const steps = Array.from({
    length: stepCount
  }, (_, index) => {
    const type = index < filledSteps ? 'filled' : 'empty';
    const stepColor = Array.isArray(fillColor) ? fillColor[index % fillColor.length] : fillColor;
    const stepClassName = classNames({
      ['mr-2']: index < stepCount - 1
    });
    const stepProps = {
      stepSize: meterSize,
      emptyColor,
      type: type,
      fillColor: stepColor,
      className: stepClassName
    };
    return /*#__PURE__*/React.createElement(Step, _extends$2({
      key: index
    }, stepProps));
  });
  const renderLabelProps = {
    filledSteps,
    value,
    min,
    max,
    stepCount,
    percentage
  };
  const label = renderLabel ? renderLabel(renderLabelProps) : `${percentage}%`;
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-Meter",
    className: classNames(styles$4.Meter, className),
    role: "meter",
    "aria-valuemin": min,
    "aria-valuemax": max,
    "aria-valuenow": value,
    "aria-label": ariaLabel
  }, rest), steps, (showLabel || renderLabel) && /*#__PURE__*/React.createElement(Text, {
    className: "ml-4",
    size: labelSize || meterSize,
    "data-test": "DesignSystem-Meter-Label"
  }, label));
};
Meter.displayName = 'Meter';
Meter.defaultProps = {
  value: 0,
  min: 0,
  max: 100,
  stepCount: 5,
  fillColor: 'info',
  meterSize: 'regular',
  type: 'empty',
  showLabel: true,
  emptyColor: 'var(--secondary-light)'
};
Meter.useMeterValues = useMeterValues;

var img$2 = "data:image/svg+xml,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M1 8C4.86599 8 8 4.86599 8 1C8 4.86599 11.134 8 15 8C11.134 8 8 11.134 8 15C8 11.134 4.86599 8 1 8Z' fill='url(%23paint0_linear_64038_5798)'/%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M1 8C4.86599 8 8 4.86599 8 1C8 4.86599 11.134 8 15 8C11.134 8 8 11.134 8 15C8 11.134 4.86599 8 1 8Z' fill='url(%23paint1_linear_64038_5798)' fill-opacity='0.24'/%3e%3cdefs%3e%3clinearGradient id='paint0_linear_64038_5798' x1='3.4375' y1='2.4375' x2='12.4063' y2='13' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23E81F76' stop-opacity='0.8'/%3e%3cstop offset='1' stop-color='%23EB5324'/%3e%3c/linearGradient%3e%3clinearGradient id='paint1_linear_64038_5798' x1='9.3125' y1='10.8438' x2='12.5937' y2='15.6563' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FFC208' stop-opacity='0'/%3e%3cstop offset='1' stop-color='%23FFC208'/%3e%3c/linearGradient%3e%3c/defs%3e%3c/svg%3e";

var css_248z$3 = ".button-module-AIButton-Hcde0-5-0-0-9 {\n  padding: var(--spacing-20) var(--spacing-30);\n  border-radius: var(--border-radius-10);\n  cursor: pointer;\n  border: 0;\n  font-family: var(--font-family);\n  font-weight: var(--font-weight-normal);\n  font-size: var(--font-size);\n  line-height: var(--font-height-s);\n  display: flex;\n  align-items: center;\n  color: var(--inverse);\n  background: linear-gradient(\n    277deg,\n    rgba(227, 28, 121, 0.15) 0%,\n    rgba(231, 56, 79, 0.24) 28%,\n    rgba(240, 125, 0, 0.15) 100%\n  );\n}\n\n.button-module-AIButton-Hcde0-5-0-0-9:hover {\n  background: linear-gradient(\n    277deg,\n    rgba(227, 28, 121, 0.2) 0%,\n    rgba(231, 56, 79, 0.32) 28%,\n    rgba(240, 125, 0, 0.2) 100%\n  );\n}\n\n.button-module-AIButton-Hcde0-5-0-0-9:active {\n  background: linear-gradient(\n    277deg,\n    rgba(227, 28, 121, 0.31) 0%,\n    rgba(231, 56, 79, 0.48) 28%,\n    rgba(240, 125, 0, 0.31) 100%\n  );\n}\n\n.button-module-AIButton-Hcde0-5-0-0-9:disabled {\n  cursor: not-allowed;\n  opacity: var(--opacity-10);\n  background: linear-gradient(\n    277deg,\n    rgba(227, 28, 121, 0.15) 0%,\n    rgba(231, 56, 79, 0.24) 28%,\n    rgba(240, 125, 0, 0.15) 100%\n  );\n}\n\n.button-module-AIButton-Hcde0-5-0-0-9:focus {\n  outline: 0;\n  box-shadow: var(--shadow-spread) var(--primary-shadow);\n}\n\n/* Button Icon */\n\n.button-module-AIButton-Icon-ITLNV-5-0-0-9 {\n  margin-right: var(--spacing-20);\n}\n";
var styles$3 = {"AIButton":"button-module-AIButton-Hcde0-5-0-0-9","AIButton-Icon":"button-module-AIButton-Icon-ITLNV-5-0-0-9"};
styleInject(css_248z$3);

const AIButton = props => {
  const {
    appearance,
    className,
    children,
    disabled,
    withSparkle,
    ...rest
  } = props;
  const buttonClassNames = classNames({
    [styles$3.AIButton]: true
  }, className);
  const IconClassNames = classNames({
    [styles$3['AIButton-Icon']]: true
  });
  return /*#__PURE__*/React.createElement("button", _extends$2({
    className: buttonClassNames,
    "data-test": "DesignSystem-AI-Button",
    disabled: disabled
  }, rest), withSparkle && /*#__PURE__*/React.createElement("img", {
    src: img$2,
    alt: "Button Icon",
    width: 16,
    height: 16,
    className: IconClassNames,
    "data-test": "DesignSystem-AI-Button-Icon"
  }), children);
};
AIButton.defaultProps = {
  type: 'button',
  withSparkle: true
};

var img$1 = "data:image/svg+xml,%3csvg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M18 3C18 11.2843 11.2843 18 3 18C11.2843 18 18 24.7157 18 33C18 24.7157 24.7157 18 33 18C24.7157 18 18 11.2843 18 3ZM33 24C33 28.9706 28.9706 33 24 33C28.9706 33 33 37.0294 33 42C33 37.0294 37.0294 33 42 33C37.0294 33 33 28.9706 33 24Z' fill='url(%23paint0_linear_3166_11159)'/%3e%3cdefs%3e%3clinearGradient id='paint0_linear_3166_11159' x1='16.5' y1='9.75' x2='24.8926' y2='36.3113' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FFC208'/%3e%3cstop offset='1' stop-color='%23E31C79'/%3e%3c/linearGradient%3e%3c/defs%3e%3c/svg%3e";

var v$3 = "4.8.0";
var meta$3 = {
	g: "LottieFiles AE 3.5.4",
	a: "",
	k: "",
	d: "",
	tc: ""
};
var fr$3 = 60;
var ip$3 = 0;
var op$3 = 120;
var w$3 = 400;
var h$3 = 400;
var nm$3 = "A";
var assets$3 = [
	{
		id: "comp_0",
		layers: [
			{
				ind: 1,
				ty: 4,
				nm: "L",
				sr: 1,
				ks: {
					o: {
						a: 0,
						k: 100
					},
					r: {
						a: 0,
						k: 0
					},
					p: {
						a: 1,
						k: [
							{
								i: {
									x: 0.667,
									y: 1
								},
								o: {
									x: 0.167,
									y: 0.167
								},
								t: 0,
								s: [
									163,
									163,
									0
								],
								to: [
									0,
									0,
									0
								],
								ti: [
									0,
									0,
									0
								]
							},
							{
								i: {
									x: 0.667,
									y: 1
								},
								o: {
									x: 0.333,
									y: 0
								},
								t: 20,
								s: [
									163,
									128,
									0
								],
								to: [
									0,
									0,
									0
								],
								ti: [
									0,
									0,
									0
								]
							},
							{
								i: {
									x: 0.667,
									y: 1
								},
								o: {
									x: 0.333,
									y: 0
								},
								t: 45,
								s: [
									163,
									173,
									0
								],
								to: [
									0,
									0,
									0
								],
								ti: [
									0,
									0,
									0
								]
							},
							{
								t: 55,
								s: [
									163,
									163,
									0
								]
							}
						]
					},
					a: {
						a: 0,
						k: [
							-37.5,
							-37.5,
							0
						]
					},
					s: {
						a: 0,
						k: [
							100,
							100,
							100
						]
					}
				},
				ao: 0,
				shapes: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										69.036
									],
									[
										69.036,
										0
									],
									[
										0,
										-69.036
									],
									[
										-69.036,
										0
									]
								],
								o: [
									[
										0,
										69.036
									],
									[
										69.036,
										0
									],
									[
										0,
										-69.036
									],
									[
										-69.036,
										0
									]
								],
								v: [
									[
										-37.5,
										-162.5
									],
									[
										-162.5,
										-37.5
									],
									[
										-37.5,
										87.5
									],
									[
										87.5,
										-37.5
									]
								],
								c: true
							}
						},
						nm: "P"
					},
					{
						ty: "mm",
						mm: 1,
						nm: "M"
					},
					{
						ty: "gf",
						o: {
							a: 0,
							k: 100
						},
						r: 1,
						g: {
							p: 3,
							k: {
								a: 0,
								k: [
									0,
									1,
									0.761,
									0.031,
									0.5,
									0.945,
									0.435,
									0.253,
									1,
									0.89,
									0.11,
									0.475
								]
							}
						},
						s: {
							a: 0,
							k: [
								-47.5,
								-114
							]
						},
						e: {
							a: 0,
							k: [
								49.962,
								105.608
							]
						},
						t: 1,
						nm: "G"
					}
				],
				ip: 0,
				op: 120,
				st: 0
			},
			{
				ind: 2,
				ty: 4,
				nm: "S",
				sr: 1,
				ks: {
					o: {
						a: 0,
						k: 100
					},
					r: {
						a: 0,
						k: 0
					},
					p: {
						a: 1,
						k: [
							{
								i: {
									x: 0.571,
									y: 0.571
								},
								o: {
									x: 0.167,
									y: 0.167
								},
								t: 0,
								s: [
									287,
									287,
									0
								],
								to: [
									0,
									0,
									0
								],
								ti: [
									0,
									0,
									0
								]
							},
							{
								i: {
									x: 0.704,
									y: 1
								},
								o: {
									x: 0.332,
									y: 0.152
								},
								t: 15,
								s: [
									287,
									287,
									0
								],
								to: [
									0,
									0,
									0
								],
								ti: [
									0,
									0,
									0
								]
							},
							{
								i: {
									x: 0.667,
									y: 1
								},
								o: {
									x: 0.333,
									y: 0
								},
								t: 30,
								s: [
									287,
									270,
									0
								],
								to: [
									0,
									0,
									0
								],
								ti: [
									0,
									0,
									0
								]
							},
							{
								i: {
									x: 0.667,
									y: 1
								},
								o: {
									x: 0.333,
									y: 0
								},
								t: 60,
								s: [
									287,
									293,
									0
								],
								to: [
									0,
									0,
									0
								],
								ti: [
									0,
									0,
									0
								]
							},
							{
								t: 67,
								s: [
									287,
									287,
									0
								]
							}
						]
					},
					a: {
						a: 0,
						k: [
							87.5,
							87.5,
							0
						]
					},
					s: {
						a: 0,
						k: [
							100,
							100,
							100
						]
					}
				},
				ao: 0,
				shapes: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										41.421
									],
									[
										41.421,
										0
									],
									[
										0,
										-41.421
									],
									[
										-41.421,
										0
									]
								],
								o: [
									[
										0,
										41.421
									],
									[
										41.421,
										0
									],
									[
										0,
										-41.421
									],
									[
										-41.421,
										0
									]
								],
								v: [
									[
										87.5,
										12.5
									],
									[
										12.5,
										87.5
									],
									[
										87.5,
										162.5
									],
									[
										162.5,
										87.5
									]
								],
								c: true
							}
						},
						nm: "P"
					},
					{
						ty: "mm",
						mm: 1,
						nm: "M"
					},
					{
						ty: "gf",
						o: {
							a: 0,
							k: 100
						},
						r: 1,
						g: {
							p: 3,
							k: {
								a: 0,
								k: [
									0,
									1,
									0.761,
									0.031,
									0.5,
									0.945,
									0.435,
									0.253,
									1,
									0.89,
									0.11,
									0.475
								]
							}
						},
						s: {
							a: 0,
							k: [
								-47.5,
								-114
							]
						},
						e: {
							a: 0,
							k: [
								49.962,
								105.608
							]
						},
						t: 1,
						nm: "G"
					}
				],
				ip: 0,
				op: 120,
				st: 0
			}
		]
	}
];
var layers$3 = [
	{
		ind: 1,
		ty: 4,
		nm: "G",
		sr: 1,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					200,
					200,
					0
				]
			},
			a: {
				a: 0,
				k: [
					0,
					0,
					0
				]
			},
			s: {
				a: 0,
				k: [
					140,
					140,
					100
				]
			}
		},
		ao: 0,
		ef: [
			{
				ty: 28,
				nm: "S",
				np: 8,
				en: 1,
				ef: [
					{
						ty: 10,
						nm: "T",
						v: {
							a: 0,
							k: 2
						}
					},
					{
						ty: 7,
						nm: "U",
						v: {
							a: 0,
							k: 4
						}
					},
					{
						ty: 7,
						nm: "I",
						v: {
							a: 0,
							k: 0
						}
					},
					{
						ty: 7,
						nm: "I",
						v: {
							a: 0,
							k: 1
						}
					},
					{
						ty: 7,
						nm: "C",
						v: {
							a: 0,
							k: 1
						}
					},
					{
						ty: 7,
						nm: "P",
						v: {
							a: 0,
							k: 1
						}
					}
				]
			}
		],
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ty: "rc",
						d: 1,
						s: {
							a: 0,
							k: [
								400,
								400
							]
						},
						p: {
							a: 0,
							k: [
								0,
								0
							]
						},
						r: {
							a: 0,
							k: 0
						},
						nm: "R"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								1,
								1,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						w: {
							a: 0,
							k: 2
						},
						lc: 1,
						lj: 1,
						ml: 4,
						nm: "S"
					},
					{
						ty: "gf",
						o: {
							a: 0,
							k: 100
						},
						r: 1,
						g: {
							p: 3,
							k: {
								a: 0,
								k: [
									0,
									1,
									0.761,
									0.031,
									0.5,
									0.945,
									0.435,
									0.253,
									1,
									0.89,
									0.11,
									0.475
								]
							}
						},
						s: {
							a: 0,
							k: [
								-26,
								-85
							]
						},
						e: {
							a: 0,
							k: [
								39,
								45
							]
						},
						t: 1,
						nm: "G"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								-0.209,
								0.658
							]
						},
						a: {
							a: 0,
							k: [
								0,
								0
							]
						},
						s: {
							a: 0,
							k: [
								100,
								100
							]
						},
						r: {
							a: 0,
							k: 0
						},
						o: {
							a: 0,
							k: 100
						},
						sk: {
							a: 0,
							k: 0
						},
						sa: {
							a: 0,
							k: 0
						},
						nm: "T"
					}
				],
				nm: "R"
			}
		],
		ip: 0,
		op: 120,
		st: 0
	},
	{
		ind: 2,
		ty: 0,
		nm: "[",
		refId: "comp_0",
		sr: 1,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					200,
					200,
					0
				]
			},
			a: {
				a: 0,
				k: [
					200,
					200,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		w: 400,
		h: 400,
		ip: 0,
		op: 120,
		st: 0
	}
];
var markers$3 = [
];
var Listening = {
	v: v$3,
	meta: meta$3,
	fr: fr$3,
	ip: ip$3,
	op: op$3,
	w: w$3,
	h: h$3,
	nm: nm$3,
	assets: assets$3,
	layers: layers$3,
	markers: markers$3
};

var v$2 = "4.8.0";
var meta$2 = {
	g: "LottieFiles AE 3.5.4",
	a: "",
	k: "",
	d: "",
	tc: ""
};
var fr$2 = 60;
var ip$2 = 0;
var op$2 = 180;
var w$2 = 400;
var h$2 = 400;
var nm$2 = "A";
var assets$2 = [
	{
		id: "comp_0",
		layers: [
			{
				ind: 1,
				ty: 4,
				nm: "L",
				sr: 1,
				ks: {
					o: {
						a: 0,
						k: 100
					},
					r: {
						a: 0,
						k: 0
					},
					p: {
						a: 0,
						k: [
							163,
							163,
							0
						]
					},
					a: {
						a: 0,
						k: [
							-37.5,
							-37.5,
							0
						]
					},
					s: {
						a: 1,
						k: [
							{
								i: {
									x: [
										0.667,
										0.667,
										0.667
									],
									y: [
										1,
										1,
										1
									]
								},
								o: {
									x: [
										0.333,
										0.333,
										0.333
									],
									y: [
										0,
										0,
										0
									]
								},
								t: 0,
								s: [
									100,
									100,
									100
								]
							},
							{
								i: {
									x: [
										0.667,
										0.667,
										0.667
									],
									y: [
										1,
										1,
										1
									]
								},
								o: {
									x: [
										0.333,
										0.333,
										0.333
									],
									y: [
										0,
										0,
										0
									]
								},
								t: 15,
								s: [
									130,
									130,
									100
								]
							},
							{
								t: 30,
								s: [
									100,
									100,
									100
								]
							}
						]
					}
				},
				ao: 0,
				shapes: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										69.036
									],
									[
										69.036,
										0
									],
									[
										0,
										-69.036
									],
									[
										-69.036,
										0
									]
								],
								o: [
									[
										0,
										69.036
									],
									[
										69.036,
										0
									],
									[
										0,
										-69.036
									],
									[
										-69.036,
										0
									]
								],
								v: [
									[
										-37.5,
										-162.5
									],
									[
										-162.5,
										-37.5
									],
									[
										-37.5,
										87.5
									],
									[
										87.5,
										-37.5
									]
								],
								c: true
							}
						},
						nm: "P"
					},
					{
						ty: "mm",
						mm: 1,
						nm: "M"
					},
					{
						ty: "gf",
						o: {
							a: 0,
							k: 100
						},
						r: 1,
						g: {
							p: 3,
							k: {
								a: 0,
								k: [
									0,
									1,
									0.761,
									0.031,
									0.5,
									0.945,
									0.435,
									0.253,
									1,
									0.89,
									0.11,
									0.475
								]
							}
						},
						s: {
							a: 0,
							k: [
								-47.5,
								-114
							]
						},
						e: {
							a: 0,
							k: [
								49.962,
								105.608
							]
						},
						t: 1,
						nm: "G"
					}
				],
				ip: 0,
				op: 187,
				st: 0
			},
			{
				ind: 2,
				ty: 4,
				nm: "S",
				sr: 1,
				ks: {
					o: {
						a: 0,
						k: 100
					},
					r: {
						a: 0,
						k: 0
					},
					p: {
						a: 0,
						k: [
							287,
							287,
							0
						]
					},
					a: {
						a: 0,
						k: [
							87.5,
							87.5,
							0
						]
					},
					s: {
						a: 1,
						k: [
							{
								i: {
									x: [
										0.667,
										0.667,
										0.667
									],
									y: [
										1,
										1,
										1
									]
								},
								o: {
									x: [
										0.333,
										0.333,
										0.333
									],
									y: [
										0,
										0,
										0
									]
								},
								t: 0,
								s: [
									100,
									100,
									100
								]
							},
							{
								i: {
									x: [
										0.667,
										0.667,
										0.667
									],
									y: [
										1,
										1,
										1
									]
								},
								o: {
									x: [
										0.333,
										0.333,
										0.333
									],
									y: [
										0,
										0,
										0
									]
								},
								t: 10,
								s: [
									100,
									100,
									100
								]
							},
							{
								i: {
									x: [
										0.667,
										0.667,
										0.667
									],
									y: [
										1,
										1,
										1
									]
								},
								o: {
									x: [
										0.333,
										0.333,
										0.333
									],
									y: [
										0,
										0,
										0
									]
								},
								t: 25,
								s: [
									120,
									120,
									100
								]
							},
							{
								t: 40,
								s: [
									100,
									100,
									100
								]
							}
						]
					}
				},
				ao: 0,
				shapes: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										41.421
									],
									[
										41.421,
										0
									],
									[
										0,
										-41.421
									],
									[
										-41.421,
										0
									]
								],
								o: [
									[
										0,
										41.421
									],
									[
										41.421,
										0
									],
									[
										0,
										-41.421
									],
									[
										-41.421,
										0
									]
								],
								v: [
									[
										87.5,
										12.5
									],
									[
										12.5,
										87.5
									],
									[
										87.5,
										162.5
									],
									[
										162.5,
										87.5
									]
								],
								c: true
							}
						},
						nm: "P"
					},
					{
						ty: "mm",
						mm: 1,
						nm: "M"
					},
					{
						ty: "gf",
						o: {
							a: 0,
							k: 100
						},
						r: 1,
						g: {
							p: 3,
							k: {
								a: 0,
								k: [
									0,
									1,
									0.761,
									0.031,
									0.5,
									0.945,
									0.435,
									0.253,
									1,
									0.89,
									0.11,
									0.475
								]
							}
						},
						s: {
							a: 0,
							k: [
								-47.5,
								-114
							]
						},
						e: {
							a: 0,
							k: [
								49.962,
								105.608
							]
						},
						t: 1,
						nm: "G"
					}
				],
				ip: 0,
				op: 208,
				st: 0
			}
		]
	}
];
var layers$2 = [
	{
		ind: 1,
		ty: 4,
		nm: "S",
		sr: 1,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 1,
				k: [
					{
						i: {
							x: 0.667,
							y: 1
						},
						o: {
							x: 0.333,
							y: 0
						},
						t: 60,
						s: [
							200,
							200,
							0
						],
						to: [
							0,
							0,
							0
						],
						ti: [
							0,
							0,
							0
						]
					},
					{
						t: 90,
						s: [
							440,
							449.5,
							0
						]
					}
				]
			},
			a: {
				a: 0,
				k: [
					0,
					0,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		ef: [
			{
				ty: 28,
				nm: "S",
				np: 8,
				en: 1,
				ef: [
					{
						ty: 10,
						nm: "T",
						v: {
							a: 0,
							k: 3
						}
					},
					{
						ty: 7,
						nm: "U",
						v: {
							a: 0,
							k: 4
						}
					},
					{
						ty: 7,
						nm: "I",
						v: {
							a: 0,
							k: 0
						}
					},
					{
						ty: 7,
						nm: "I",
						v: {
							a: 0,
							k: 1
						}
					},
					{
						ty: 7,
						nm: "C",
						v: {
							a: 0,
							k: 1
						}
					},
					{
						ty: 7,
						nm: "P",
						v: {
							a: 0,
							k: 1
						}
					}
				]
			}
		],
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										37.834,
										0
									],
									[
										0,
										-5.181
									],
									[
										-37.834,
										0
									],
									[
										0,
										5.181
									]
								],
								o: [
									[
										-37.834,
										0
									],
									[
										0,
										5.181
									],
									[
										37.834,
										0
									],
									[
										0,
										-5.181
									]
								],
								v: [
									[
										0,
										-9.381
									],
									[
										-68.505,
										0
									],
									[
										0,
										9.381
									],
									[
										68.505,
										0
									]
								],
								c: true
							}
						},
						nm: "P"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								1,
								1,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						w: {
							a: 0,
							k: 0
						},
						lc: 1,
						lj: 1,
						ml: 4,
						nm: "S"
					},
					{
						ty: "gf",
						o: {
							a: 0,
							k: 100
						},
						r: 1,
						g: {
							p: 3,
							k: {
								a: 0,
								k: [
									0,
									1,
									1,
									1,
									0.5,
									1,
									1,
									1,
									1,
									1,
									1,
									1,
									0,
									1,
									0.5,
									0.5,
									1,
									0
								]
							}
						},
						s: {
							a: 0,
							k: [
								0.249,
								0.249
							]
						},
						e: {
							a: 0,
							k: [
								91.305,
								-0.238
							]
						},
						t: 2,
						h: {
							a: 0,
							k: 0
						},
						a: {
							a: 0,
							k: 90
						},
						nm: "G"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								-116.514,
								-105.125
							]
						},
						a: {
							a: 0,
							k: [
								0,
								0
							]
						},
						s: {
							a: 0,
							k: [
								124.149,
								173.892
							]
						},
						r: {
							a: 0,
							k: -41.711
						},
						o: {
							a: 0,
							k: 100
						},
						sk: {
							a: 0,
							k: 0
						},
						sa: {
							a: 0,
							k: 0
						},
						nm: "T"
					}
				],
				nm: "E"
			}
		],
		ip: 0,
		op: 180,
		st: 0
	},
	{
		ind: 2,
		ty: 4,
		nm: "G",
		sr: 1,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					200,
					200,
					0
				]
			},
			a: {
				a: 0,
				k: [
					0,
					0,
					0
				]
			},
			s: {
				a: 0,
				k: [
					140,
					140,
					100
				]
			}
		},
		ao: 0,
		ef: [
			{
				ty: 28,
				nm: "S",
				np: 8,
				en: 1,
				ef: [
					{
						ty: 10,
						nm: "T",
						v: {
							a: 0,
							k: 3
						}
					},
					{
						ty: 7,
						nm: "U",
						v: {
							a: 0,
							k: 4
						}
					},
					{
						ty: 7,
						nm: "I",
						v: {
							a: 0,
							k: 0
						}
					},
					{
						ty: 7,
						nm: "I",
						v: {
							a: 0,
							k: 1
						}
					},
					{
						ty: 7,
						nm: "C",
						v: {
							a: 0,
							k: 1
						}
					},
					{
						ty: 7,
						nm: "P",
						v: {
							a: 0,
							k: 1
						}
					}
				]
			}
		],
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ty: "rc",
						d: 1,
						s: {
							a: 0,
							k: [
								400,
								400
							]
						},
						p: {
							a: 0,
							k: [
								0,
								0
							]
						},
						r: {
							a: 0,
							k: 0
						},
						nm: "R"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								1,
								1,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						w: {
							a: 0,
							k: 2
						},
						lc: 1,
						lj: 1,
						ml: 4,
						nm: "S"
					},
					{
						ty: "gf",
						o: {
							a: 0,
							k: 100
						},
						r: 1,
						g: {
							p: 3,
							k: {
								a: 0,
								k: [
									0,
									1,
									0.761,
									0.031,
									0.5,
									0.945,
									0.435,
									0.253,
									1,
									0.89,
									0.11,
									0.475
								]
							}
						},
						s: {
							a: 0,
							k: [
								-26,
								-85
							]
						},
						e: {
							a: 0,
							k: [
								39,
								45
							]
						},
						t: 1,
						nm: "G"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								-0.209,
								0.658
							]
						},
						a: {
							a: 0,
							k: [
								0,
								0
							]
						},
						s: {
							a: 0,
							k: [
								100,
								100
							]
						},
						r: {
							a: 0,
							k: 0
						},
						o: {
							a: 0,
							k: 100
						},
						sk: {
							a: 0,
							k: 0
						},
						sa: {
							a: 0,
							k: 0
						},
						nm: "T"
					}
				],
				nm: "R"
			}
		],
		ip: 0,
		op: 180,
		st: 0
	},
	{
		ind: 3,
		ty: 0,
		nm: "[",
		refId: "comp_0",
		sr: 1,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					200,
					200,
					0
				]
			},
			a: {
				a: 0,
				k: [
					200,
					200,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		w: 400,
		h: 400,
		ip: 0,
		op: 180,
		st: 0
	}
];
var markers$2 = [
];
var AIProcessingLong = {
	v: v$2,
	meta: meta$2,
	fr: fr$2,
	ip: ip$2,
	op: op$2,
	w: w$2,
	h: h$2,
	nm: nm$2,
	assets: assets$2,
	layers: layers$2,
	markers: markers$2
};

var v$1 = "4.8.0";
var meta$1 = {
	g: "LottieFiles AE 3.5.4",
	a: "Anagh Sharma",
	k: "",
	d: "Progress indicator to be used for showing AI processing input for a short period of time.",
	tc: ""
};
var fr$1 = 60;
var ip$1 = 0;
var op$1 = 120;
var w$1 = 400;
var h$1 = 400;
var nm$1 = "A";
var assets$1 = [
	{
		id: "comp_0",
		layers: [
			{
				ind: 1,
				ty: 4,
				nm: "L",
				sr: 1,
				ks: {
					o: {
						a: 0,
						k: 100
					},
					r: {
						a: 1,
						k: [
							{
								i: {
									x: [
										0.667
									],
									y: [
										1
									]
								},
								o: {
									x: [
										0.167
									],
									y: [
										0.167
									]
								},
								t: 0,
								s: [
									0
								]
							},
							{
								t: 90,
								s: [
									270
								]
							}
						]
					},
					p: {
						a: 0,
						k: [
							163,
							163,
							0
						]
					},
					a: {
						a: 0,
						k: [
							-37.5,
							-37.5,
							0
						]
					},
					s: {
						a: 0,
						k: [
							100,
							100,
							100
						]
					}
				},
				ao: 0,
				shapes: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										69.036
									],
									[
										69.036,
										0
									],
									[
										0,
										-69.036
									],
									[
										-69.036,
										0
									]
								],
								o: [
									[
										0,
										69.036
									],
									[
										69.036,
										0
									],
									[
										0,
										-69.036
									],
									[
										-69.036,
										0
									]
								],
								v: [
									[
										-37.5,
										-162.5
									],
									[
										-162.5,
										-37.5
									],
									[
										-37.5,
										87.5
									],
									[
										87.5,
										-37.5
									]
								],
								c: true
							}
						},
						nm: "P"
					},
					{
						ty: "mm",
						mm: 1,
						nm: "M"
					},
					{
						ty: "gf",
						o: {
							a: 0,
							k: 100
						},
						r: 1,
						g: {
							p: 3,
							k: {
								a: 0,
								k: [
									0,
									1,
									0.761,
									0.031,
									0.5,
									0.945,
									0.435,
									0.253,
									1,
									0.89,
									0.11,
									0.475
								]
							}
						},
						s: {
							a: 0,
							k: [
								-47.5,
								-114
							]
						},
						e: {
							a: 0,
							k: [
								49.962,
								105.608
							]
						},
						t: 1,
						nm: "G"
					}
				],
				ip: 0,
				op: 308,
				st: 0
			},
			{
				ind: 2,
				ty: 4,
				nm: "S",
				sr: 1,
				ks: {
					o: {
						a: 0,
						k: 100
					},
					r: {
						a: 1,
						k: [
							{
								i: {
									x: [
										0.667
									],
									y: [
										1
									]
								},
								o: {
									x: [
										0.167
									],
									y: [
										0.167
									]
								},
								t: 0,
								s: [
									0
								]
							},
							{
								t: 90,
								s: [
									360
								]
							}
						]
					},
					p: {
						a: 0,
						k: [
							287,
							287,
							0
						]
					},
					a: {
						a: 0,
						k: [
							87.5,
							87.5,
							0
						]
					},
					s: {
						a: 0,
						k: [
							100,
							100,
							100
						]
					}
				},
				ao: 0,
				shapes: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										41.421
									],
									[
										41.421,
										0
									],
									[
										0,
										-41.421
									],
									[
										-41.421,
										0
									]
								],
								o: [
									[
										0,
										41.421
									],
									[
										41.421,
										0
									],
									[
										0,
										-41.421
									],
									[
										-41.421,
										0
									]
								],
								v: [
									[
										87.5,
										12.5
									],
									[
										12.5,
										87.5
									],
									[
										87.5,
										162.5
									],
									[
										162.5,
										87.5
									]
								],
								c: true
							}
						},
						nm: "P"
					},
					{
						ty: "mm",
						mm: 1,
						nm: "M"
					},
					{
						ty: "gf",
						o: {
							a: 0,
							k: 100
						},
						r: 1,
						g: {
							p: 3,
							k: {
								a: 0,
								k: [
									0,
									1,
									0.761,
									0.031,
									0.5,
									0.945,
									0.435,
									0.253,
									1,
									0.89,
									0.11,
									0.475
								]
							}
						},
						s: {
							a: 0,
							k: [
								-47.5,
								-114
							]
						},
						e: {
							a: 0,
							k: [
								49.962,
								105.608
							]
						},
						t: 1,
						nm: "G"
					}
				],
				ip: 0,
				op: 316,
				st: 0
			}
		]
	}
];
var layers$1 = [
	{
		ind: 1,
		ty: 4,
		nm: "G",
		sr: 1,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					200,
					200,
					0
				]
			},
			a: {
				a: 0,
				k: [
					0,
					0,
					0
				]
			},
			s: {
				a: 0,
				k: [
					140,
					140,
					100
				]
			}
		},
		ao: 0,
		ef: [
			{
				ty: 28,
				nm: "S",
				np: 8,
				en: 1,
				ef: [
					{
						ty: 10,
						nm: "T",
						v: {
							a: 0,
							k: 2
						}
					},
					{
						ty: 7,
						nm: "U",
						v: {
							a: 0,
							k: 4
						}
					},
					{
						ty: 7,
						nm: "I",
						v: {
							a: 0,
							k: 0
						}
					},
					{
						ty: 7,
						nm: "I",
						v: {
							a: 0,
							k: 1
						}
					},
					{
						ty: 7,
						nm: "C",
						v: {
							a: 0,
							k: 1
						}
					},
					{
						ty: 7,
						nm: "P",
						v: {
							a: 0,
							k: 1
						}
					}
				]
			}
		],
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ty: "rc",
						d: 1,
						s: {
							a: 0,
							k: [
								400,
								400
							]
						},
						p: {
							a: 0,
							k: [
								0,
								0
							]
						},
						r: {
							a: 0,
							k: 0
						},
						nm: "R"
					},
					{
						ty: "st",
						c: {
							a: 0,
							k: [
								1,
								1,
								1,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						w: {
							a: 0,
							k: 2
						},
						lc: 1,
						lj: 1,
						ml: 4,
						nm: "S"
					},
					{
						ty: "gf",
						o: {
							a: 0,
							k: 100
						},
						r: 1,
						g: {
							p: 3,
							k: {
								a: 1,
								k: [
									{
										i: {
											x: 0.667,
											y: 1
										},
										o: {
											x: 0.333,
											y: 0
										},
										t: 0,
										s: [
											0,
											1,
											0.761,
											0.031,
											0.5,
											0.945,
											0.435,
											0.253,
											1,
											0.89,
											0.11,
											0.475
										]
									},
									{
										i: {
											x: 0.667,
											y: 1
										},
										o: {
											x: 0.333,
											y: 0
										},
										t: 45,
										s: [
											0,
											0.89,
											0.11,
											0.475,
											0.5,
											0.945,
											0.435,
											0.253,
											1,
											1,
											0.761,
											0.031
										]
									},
									{
										t: 90,
										s: [
											0,
											1,
											0.761,
											0.031,
											0.5,
											0.945,
											0.435,
											0.253,
											1,
											0.89,
											0.11,
											0.475
										]
									}
								]
							}
						},
						s: {
							a: 0,
							k: [
								-26,
								-85
							]
						},
						e: {
							a: 0,
							k: [
								39,
								45
							]
						},
						t: 1,
						nm: "G"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								-0.209,
								0.658
							]
						},
						a: {
							a: 0,
							k: [
								0,
								0
							]
						},
						s: {
							a: 0,
							k: [
								100,
								100
							]
						},
						r: {
							a: 0,
							k: 0
						},
						o: {
							a: 0,
							k: 100
						},
						sk: {
							a: 0,
							k: 0
						},
						sa: {
							a: 0,
							k: 0
						},
						nm: "T"
					}
				],
				nm: "R"
			}
		],
		ip: 0,
		op: 125,
		st: 0
	},
	{
		ind: 2,
		ty: 0,
		nm: "[",
		refId: "comp_0",
		sr: 1,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					200,
					200,
					0
				]
			},
			a: {
				a: 0,
				k: [
					200,
					200,
					0
				]
			},
			s: {
				a: 0,
				k: [
					100,
					100,
					100
				]
			}
		},
		ao: 0,
		w: 400,
		h: 400,
		ip: 0,
		op: 300,
		st: 0
	}
];
var markers$1 = [
];
var AIProcessingShort = {
	v: v$1,
	meta: meta$1,
	fr: fr$1,
	ip: ip$1,
	op: op$1,
	w: w$1,
	h: h$1,
	nm: nm$1,
	assets: assets$1,
	layers: layers$1,
	markers: markers$1
};

const SaraSparkle = props => {
  const {
    size,
    state,
    alt,
    className,
    ...rest
  } = props;
  const stateMapping = {
    listening: Listening,
    'short-processing': AIProcessingShort,
    'long-processing': AIProcessingLong
  };
  const SaraClassNames = classNames({
    'align-bottom': state === 'default'
  }, className);
  if (state === 'default') {
    return /*#__PURE__*/React.createElement("div", _extends$2({
      "data-test": "DesignSystem-AI-Sara-Sparkle"
    }, rest), /*#__PURE__*/React.createElement("img", {
      src: img$1,
      alt: alt,
      width: size,
      height: size,
      className: SaraClassNames
    }));
  }
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-AI-Sara-Sparkle",
    className: className
  }, rest), /*#__PURE__*/React.createElement(Player, {
    autoplay: true,
    loop: true,
    src: state && stateMapping[state] || Listening,
    style: {
      height: size,
      width: size
    }
  }));
};
SaraSparkle.defaultProps = {
  size: 24,
  state: 'default'
};

var v = "4.8.0";
var meta = {
	g: "LottieFiles AE 3.5.4",
	a: "Anagh Sharma",
	k: "",
	d: "Progress indicator to be used for showing Sara when it is idle.",
	tc: ""
};
var fr = 60;
var ip = 0;
var op = 360;
var w = 96;
var h = 96;
var nm = "S";
var assets = [
	{
		id: "comp_0",
		layers: [
			{
				ind: 1,
				ty: 4,
				nm: "S",
				sr: 1,
				ks: {
					o: {
						a: 0,
						k: 100
					},
					r: {
						a: 1,
						k: [
							{
								i: {
									x: [
										0.833
									],
									y: [
										0.833
									]
								},
								o: {
									x: [
										0.167
									],
									y: [
										0.167
									]
								},
								t: 0,
								s: [
									0
								]
							},
							{
								t: 360,
								s: [
									360
								]
							}
						]
					},
					p: {
						a: 0,
						k: [
							48,
							48,
							0
						]
					},
					a: {
						a: 0,
						k: [
							0,
							0,
							0
						]
					},
					s: {
						a: 0,
						k: [
							100,
							100,
							100
						]
					}
				},
				ao: 0,
				ef: [
					{
						ty: 28,
						nm: "S",
						np: 8,
						en: 1,
						ef: [
							{
								ty: 10,
								nm: "T",
								v: {
									a: 0,
									k: 2
								}
							},
							{
								ty: 7,
								nm: "U",
								v: {
									a: 0,
									k: 4
								}
							},
							{
								ty: 7,
								nm: "I",
								v: {
									a: 0,
									k: 0
								}
							},
							{
								ty: 7,
								nm: "I",
								v: {
									a: 0,
									k: 1
								}
							},
							{
								ty: 7,
								nm: "C",
								v: {
									a: 0,
									k: 1
								}
							},
							{
								ty: 7,
								nm: "P",
								v: {
									a: 0,
									k: 1
								}
							}
						]
					}
				],
				shapes: [
					{
						ty: "gr",
						it: [
							{
								ty: "rc",
								d: 1,
								s: {
									a: 0,
									k: [
										128,
										128.055
									]
								},
								p: {
									a: 0,
									k: [
										0,
										0
									]
								},
								r: {
									a: 0,
									k: 0
								},
								nm: "R"
							},
							{
								ty: "st",
								c: {
									a: 0,
									k: [
										1,
										1,
										1,
										1
									]
								},
								o: {
									a: 0,
									k: 100
								},
								w: {
									a: 0,
									k: 0
								},
								lc: 1,
								lj: 1,
								ml: 4,
								nm: "S"
							},
							{
								ty: "gf",
								o: {
									a: 0,
									k: 100
								},
								r: 1,
								g: {
									p: 3,
									k: {
										a: 0,
										k: [
											0,
											1,
											0.761,
											0.031,
											0.5,
											0.945,
											0.435,
											0.253,
											1,
											0.89,
											0.11,
											0.475
										]
									}
								},
								s: {
									a: 0,
									k: [
										-19.515,
										-47.635
									]
								},
								e: {
									a: 0,
									k: [
										13.662,
										48.644
									]
								},
								t: 1,
								nm: "G"
							},
							{
								ty: "tr",
								p: {
									a: 0,
									k: [
										-0.019,
										-0.248
									]
								},
								a: {
									a: 0,
									k: [
										0,
										0
									]
								},
								s: {
									a: 0,
									k: [
										100,
										100
									]
								},
								r: {
									a: 0,
									k: 0
								},
								o: {
									a: 0,
									k: 100
								},
								sk: {
									a: 0,
									k: 0
								},
								sa: {
									a: 0,
									k: 0
								},
								nm: "T"
							}
						],
						nm: "R"
					}
				],
				ip: 0,
				op: 480,
				st: 0
			},
			{
				ind: 2,
				ty: 4,
				nm: "F",
				sr: 1,
				ks: {
					o: {
						a: 0,
						k: 100
					},
					r: {
						a: 0,
						k: 0
					},
					p: {
						a: 0,
						k: [
							48,
							47.996,
							0
						]
					},
					a: {
						a: 0,
						k: [
							0,
							0,
							0
						]
					},
					s: {
						a: 1,
						k: [
							{
								i: {
									x: [
										0.833,
										0.833,
										0.833
									],
									y: [
										0.833,
										0.833,
										0.833
									]
								},
								o: {
									x: [
										0.167,
										0.167,
										0.167
									],
									y: [
										0.167,
										0.167,
										0.167
									]
								},
								t: 0,
								s: [
									90,
									90,
									100
								]
							},
							{
								i: {
									x: [
										0.833,
										0.833,
										0.833
									],
									y: [
										0.833,
										0.833,
										0.833
									]
								},
								o: {
									x: [
										0.167,
										0.167,
										0.167
									],
									y: [
										0.167,
										0.167,
										0.167
									]
								},
								t: 25,
								s: [
									90,
									90,
									100
								]
							},
							{
								i: {
									x: [
										0.833,
										0.833,
										0.833
									],
									y: [
										0.833,
										0.833,
										0.833
									]
								},
								o: {
									x: [
										0.167,
										0.167,
										0.167
									],
									y: [
										0.167,
										0.167,
										0.167
									]
								},
								t: 110,
								s: [
									100,
									100,
									100
								]
							},
							{
								t: 175,
								s: [
									90,
									90,
									100
								]
							}
						]
					}
				},
				ao: 0,
				shapes: [
					{
						ty: "gr",
						it: [
							{
								ind: 0,
								ty: "sh",
								ks: {
									a: 0,
									k: {
										i: [
											[
												0,
												0
											],
											[
												-6.612,
												1.895
											],
											[
												-7.835,
												0
											],
											[
												0,
												0
											],
											[
												-1.663,
												6.671
											],
											[
												-3.92,
												6.787
											],
											[
												0,
												0
											],
											[
												4.945,
												4.776
											],
											[
												3.915,
												6.792
											],
											[
												0,
												0
											],
											[
												6.608,
												-1.9
											],
											[
												7.84,
												0
											],
											[
												0,
												0
											],
											[
												1.663,
												-6.676
											],
											[
												3.92,
												-6.787
											],
											[
												0,
												0
											],
											[
												-4.95,
												-4.776
											],
											[
												-3.92,
												-6.787
											]
										],
										o: [
											[
												3.92,
												6.787
											],
											[
												1.663,
												6.671
											],
											[
												0,
												0
											],
											[
												7.84,
												0
											],
											[
												6.608,
												1.895
											],
											[
												0,
												0
											],
											[
												3.92,
												-6.787
											],
											[
												4.945,
												-4.776
											],
											[
												0,
												0
											],
											[
												-3.92,
												-6.787
											],
											[
												-1.663,
												-6.676
											],
											[
												0,
												0
											],
											[
												-7.835,
												0
											],
											[
												-6.612,
												-1.9
											],
											[
												0,
												0
											],
											[
												-3.92,
												6.792
											],
											[
												-4.95,
												4.776
											],
											[
												0,
												0
											]
										],
										v: [
											[
												-38.919,
												28.571
											],
											[
												-20.715,
												35.89
											],
											[
												-5.281,
												47.996
											],
											[
												5.28,
												47.996
											],
											[
												20.719,
												35.89
											],
											[
												38.917,
												28.571
											],
											[
												44.196,
												19.425
											],
											[
												41.436,
												0
											],
											[
												44.2,
												-19.425
											],
											[
												38.917,
												-28.571
											],
											[
												20.719,
												-35.886
											],
											[
												5.28,
												-47.996
											],
											[
												-5.281,
												-47.996
											],
											[
												-20.715,
												-35.886
											],
											[
												-38.919,
												-28.571
											],
											[
												-44.197,
												-19.425
											],
											[
												-41.432,
												0
											],
											[
												-44.197,
												19.425
											]
										],
										c: true
									}
								},
								nm: "P"
							},
							{
								ty: "gf",
								o: {
									a: 0,
									k: 100
								},
								r: 1,
								g: {
									p: 3,
									k: {
										a: 0,
										k: [
											0,
											1,
											0.761,
											0.031,
											0.5,
											0.945,
											0.435,
											0.253,
											1,
											0.89,
											0.11,
											0.475
										]
									}
								},
								s: {
									a: 0,
									k: [
										-19.515,
										-47.635
									]
								},
								e: {
									a: 0,
									k: [
										13.662,
										48.644
									]
								},
								t: 1,
								nm: "G"
							},
							{
								ty: "tr",
								p: {
									a: 0,
									k: [
										0,
										0
									]
								},
								a: {
									a: 0,
									k: [
										0,
										0
									]
								},
								s: {
									a: 0,
									k: [
										100,
										100
									]
								},
								r: {
									a: 0,
									k: 0
								},
								o: {
									a: 0,
									k: 100
								},
								sk: {
									a: 0,
									k: 0
								},
								sa: {
									a: 0,
									k: 0
								},
								nm: "T"
							}
						],
						nm: "F"
					}
				],
				ip: 0,
				op: 496,
				st: 0
			}
		]
	}
];
var layers = [
	{
		ind: 1,
		ty: 4,
		nm: "S",
		sr: 1,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					48,
					48,
					0
				]
			},
			a: {
				a: 0,
				k: [
					0,
					0,
					0
				]
			},
			s: {
				a: 1,
				k: [
					{
						i: {
							x: [
								0.833,
								0.833,
								0.833
							],
							y: [
								0.833,
								0.833,
								0.833
							]
						},
						o: {
							x: [
								0.167,
								0.167,
								0.167
							],
							y: [
								0.167,
								0.167,
								0.167
							]
						},
						t: 0,
						s: [
							34,
							34,
							100
						]
					},
					{
						i: {
							x: [
								0.833,
								0.833,
								0.833
							],
							y: [
								0.833,
								0.833,
								0.833
							]
						},
						o: {
							x: [
								0.167,
								0.167,
								0.167
							],
							y: [
								0.167,
								0.167,
								0.167
							]
						},
						t: 50,
						s: [
							41,
							41,
							100
						]
					},
					{
						i: {
							x: [
								0.833,
								0.833,
								0.833
							],
							y: [
								0.833,
								0.833,
								0.833
							]
						},
						o: {
							x: [
								0.167,
								0.167,
								0.167
							],
							y: [
								0.167,
								0.167,
								0.167
							]
						},
						t: 110,
						s: [
							40,
							40,
							100
						]
					},
					{
						t: 150,
						s: [
							34,
							34,
							100
						]
					}
				]
			}
		},
		ao: 0,
		shapes: [
			{
				ty: "gr",
				it: [
					{
						ind: 0,
						ty: "sh",
						ks: {
							a: 0,
							k: {
								i: [
									[
										0,
										41.421
									],
									[
										41.421,
										0
									],
									[
										0,
										-41.421
									],
									[
										-41.421,
										0
									]
								],
								o: [
									[
										0,
										41.421
									],
									[
										41.421,
										0
									],
									[
										0,
										-41.421
									],
									[
										-41.421,
										0
									]
								],
								v: [
									[
										0,
										-75
									],
									[
										-75,
										0
									],
									[
										0,
										75
									],
									[
										75,
										0
									]
								],
								c: true
							}
						},
						nm: "P"
					},
					{
						ty: "fl",
						c: {
							a: 0,
							k: [
								1,
								1,
								1,
								1
							]
						},
						o: {
							a: 0,
							k: 100
						},
						r: 1,
						nm: "F"
					},
					{
						ty: "tr",
						p: {
							a: 0,
							k: [
								0,
								0
							]
						},
						a: {
							a: 0,
							k: [
								0,
								0
							]
						},
						s: {
							a: 0,
							k: [
								100,
								100
							]
						},
						r: {
							a: 0,
							k: 0
						},
						o: {
							a: 0,
							k: 100
						},
						sk: {
							a: 0,
							k: 0
						},
						sa: {
							a: 0,
							k: 0
						},
						nm: "T"
					}
				],
				nm: "S"
			}
		],
		ip: 0,
		op: 396,
		st: 0
	},
	{
		ind: 3,
		ty: 0,
		nm: "C",
		refId: "comp_0",
		sr: 1,
		ks: {
			o: {
				a: 0,
				k: 100
			},
			r: {
				a: 0,
				k: 0
			},
			p: {
				a: 0,
				k: [
					48,
					47.994,
					0
				]
			},
			a: {
				a: 0,
				k: [
					48,
					48,
					0
				]
			},
			s: {
				a: 0,
				k: [
					90,
					90,
					100
				]
			}
		},
		ao: 0,
		w: 96,
		h: 96,
		ip: 0,
		op: 480,
		st: 0
	}
];
var markers = [
];
var AIResting = {
	v: v,
	meta: meta,
	fr: fr,
	ip: ip,
	op: op,
	w: w,
	h: h,
	nm: nm,
	assets: assets,
	layers: layers,
	markers: markers
};

var img = "data:image/svg+xml,%3csvg width='64' height='64' viewBox='0 0 64 64' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cg clip-path='url(%23clip0_3314_32121)'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M18.1898 55.9227C13.7816 57.1861 8.66759 55.5682 6.05421 51.0432L2.53533 44.9454C-0.0780511 40.4204 1.0788 35.1799 4.37855 31.9957C1.0788 28.8114 -0.0780511 23.5742 2.53533 19.046L6.05421 12.9482C8.66759 8.42323 13.7816 6.80532 18.1898 8.07193C19.2983 3.62107 23.2555 -0.00149536 28.479 -0.00149536H35.52C40.7468 -0.00149536 44.7039 3.62107 45.8124 8.07193C50.2174 6.80532 55.3314 8.42323 57.9448 12.9482L61.4669 19.046C64.0771 23.5742 62.9202 28.8114 59.6237 31.9957C62.9202 35.1799 64.0771 40.4204 61.4637 44.9454L57.9448 51.0432C55.3314 55.5682 50.2174 57.1861 45.8124 55.9227C44.7039 60.3703 40.7468 63.9929 35.52 63.9929H28.479C23.2555 63.9929 19.2983 60.3703 18.1898 55.9227Z' fill='url(%23paint0_linear_3314_32121)'/%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M12 32C23.0457 32 32 23.0457 32 12C32 23.0457 40.9543 32 52 32C40.9543 32 32 40.9543 32 52C32 40.9543 23.0457 32 12 32Z' fill='white'/%3e%3c/g%3e%3cdefs%3e%3clinearGradient id='paint0_linear_3314_32121' x1='18.99' y1='0.239091' x2='41.9606' y2='54.7321' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FFC208'/%3e%3cstop offset='1' stop-color='%23E31C79'/%3e%3c/linearGradient%3e%3cclipPath id='clip0_3314_32121'%3e%3crect width='64' height='64' fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e";

const Sara = props => {
  const {
    size,
    state,
    alt,
    className,
    ...rest
  } = props;
  const SaraClassNames = classNames({
    'align-bottom': state === 'default'
  }, className);
  if (state === 'default') {
    return /*#__PURE__*/React.createElement("div", _extends$2({
      "data-test": "DesignSystem-AI-Sara"
    }, rest), /*#__PURE__*/React.createElement("img", {
      src: img,
      alt: alt,
      width: size,
      height: size,
      className: SaraClassNames
    }));
  }
  return /*#__PURE__*/React.createElement("div", _extends$2({
    "data-test": "DesignSystem-AI-Sara",
    className: className
  }, rest), /*#__PURE__*/React.createElement(Player, {
    autoplay: true,
    loop: true,
    src: AIResting,
    style: {
      height: size,
      width: size
    }
  }));
};
Sara.defaultProps = {
  size: 32,
  state: 'default'
};

const SaraIconDefault = props => {
  const {
    className
  } = props;
  return /*#__PURE__*/React__default.createElement("svg", {
    width: "12",
    height: "12",
    viewBox: "0 0 12 12",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    className: className,
    "data-test": "DesignSystem-AI-Icon"
  }, /*#__PURE__*/React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6 0.75C6 3.6495 8.3505 6 11.25 6C8.3505 6 6 8.35051 6 11.25C6 8.35051 3.64949 6 0.75 6C3.64949 6 6 3.6495 6 0.75Z",
    fill: "url(#paint0_linear_54537_3573)"
  }), /*#__PURE__*/React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6 0.75C6 3.6495 8.3505 6 11.25 6C8.3505 6 6 8.35051 6 11.25C6 8.35051 3.64949 6 0.75 6C3.64949 6 6 3.6495 6 0.75Z",
    fill: "url(#paint1_linear_54537_3573)",
    fillOpacity: "0.24"
  }), /*#__PURE__*/React__default.createElement("defs", null, /*#__PURE__*/React__default.createElement("linearGradient", {
    id: "paint0_linear_54537_3573",
    x1: "10.1719",
    y1: "2.57813",
    x2: "2.25",
    y2: "9.30469",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React__default.createElement("stop", {
    stopColor: "#E81F76",
    stopOpacity: "0.8"
  }), /*#__PURE__*/React__default.createElement("stop", {
    offset: "1",
    stopColor: "#EB5324"
  })), /*#__PURE__*/React__default.createElement("linearGradient", {
    id: "paint1_linear_54537_3573",
    x1: "3.86719",
    y1: "6.98438",
    x2: "0.257812",
    y2: "9.44531",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React__default.createElement("stop", {
    stopColor: "#FFC208",
    stopOpacity: "0"
  }), /*#__PURE__*/React__default.createElement("stop", {
    offset: "1",
    stopColor: "#FFC208"
  }))));
};

const SaraIconDisabled = props => {
  const {
    className
  } = props;
  return /*#__PURE__*/React__default.createElement("svg", {
    width: "12",
    height: "12",
    viewBox: "0 0 12 12",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    className: className,
    "data-test": "DesignSystem-AI-Icon"
  }, /*#__PURE__*/React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M0.75 6C3.6495 6 6 3.6495 6 0.75C6 3.6495 8.35051 6 11.25 6C8.35051 6 6 8.35051 6 11.25C6 8.35051 3.6495 6 0.75 6Z",
    fill: "url(#paint0_linear_63015_2821)"
  }), /*#__PURE__*/React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M0.75 6C3.6495 6 6 3.6495 6 0.75C6 3.6495 8.35051 6 11.25 6C8.35051 6 6 8.35051 6 11.25C6 8.35051 3.6495 6 0.75 6Z",
    fill: "url(#paint1_linear_63015_2821)",
    fillOpacity: "0.24"
  }), /*#__PURE__*/React__default.createElement("defs", null, /*#__PURE__*/React__default.createElement("linearGradient", {
    id: "paint0_linear_63015_2821",
    x1: "2.57813",
    y1: "1.82812",
    x2: "9.30469",
    y2: "9.75",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React__default.createElement("stop", {
    stopColor: "#E81F76",
    stopOpacity: "0.8"
  }), /*#__PURE__*/React__default.createElement("stop", {
    offset: "1",
    stopColor: "#EB5324"
  })), /*#__PURE__*/React__default.createElement("linearGradient", {
    id: "paint1_linear_63015_2821",
    x1: "6.98438",
    y1: "8.13281",
    x2: "9.44531",
    y2: "11.7422",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React__default.createElement("stop", {
    stopColor: "#FFC208",
    stopOpacity: "0"
  }), /*#__PURE__*/React__default.createElement("stop", {
    offset: "1",
    stopColor: "#FFC208"
  }))));
};

var css_248z$2 = ".iconButton-module-AIIconButton-BtFJz-5-0-0-9 {\n  background: transparent;\n  padding: var(--spacing-20);\n  border-radius: var(--border-radius-10);\n  cursor: pointer;\n  border: 0;\n  font-family: var(--font-family);\n  font-weight: var(--font-weight-normal);\n  font-size: var(--font-size);\n  line-height: var(--font-height-s);\n  position: relative;\n}\n\n.iconButton-module-AIIconButton--large-2EnOg-5-0-0-9 {\n  padding: var(--spacing-0-75);\n}\n\n.iconButton-module-AIIconButton--regular-TAz71-5-0-0-9 {\n  padding: var(--spacing);\n}\n\n.iconButton-module-AIIconButton-BtFJz-5-0-0-9:hover {\n  background: linear-gradient(\n    315deg,\n    rgba(227, 28, 121, 0.2) 0%,\n    rgba(231, 56, 79, 0.32) 19.79%,\n    rgba(240, 125, 0, 0.32) 100%\n  );\n  color: var(--secondary) !important;\n}\n\n.iconButton-module-AIIconButton-BtFJz-5-0-0-9:active {\n  background: linear-gradient(\n    315deg,\n    rgba(227, 28, 121, 0.31) 0%,\n    rgba(231, 56, 79, 0.48) 19.79%,\n    rgba(240, 125, 0, 0.48) 100%\n  );\n  color: var(--secondary-dark) !important;\n}\n\n.iconButton-module-AIIconButton-BtFJz-5-0-0-9:focus,\n.iconButton-module-AIIconButton-BtFJz-5-0-0-9:focus-visible {\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n  outline: none;\n}\n\n.iconButton-module-AIIconButton-BtFJz-5-0-0-9:disabled {\n  cursor: not-allowed;\n  background: transparent;\n  color: var(--inverse-lightest);\n}\n\n.iconButton-module-AIIconButton-icon-nj5xZ-5-0-0-9 {\n  overflow: hidden;\n  flex-shrink: 0;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  line-height: inherit;\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.iconButton-module-AIIconButton-AIIcon-xdcj5-5-0-0-9 {\n  position: absolute;\n}\n\n.iconButton-module-AIIconButton-AIIcon--regularTop-vGg0e-5-0-0-9 {\n  bottom: calc(var(--spacing-30) + var(--spacing-05)); /* 14px */\n  left: calc(var(--spacing-30) + var(--spacing-2-5)); /* 13px */\n}\n\n.iconButton-module-AIIconButton-AIIcon--largeTop-3HqjO-5-0-0-9 {\n  bottom: calc(var(--spacing-40) + var(--spacing-05)); /* 18px */\n  left: calc(var(--spacing-40) + var(--spacing-2-5)); /* 17px */\n}\n\n.iconButton-module-AIIconButton-AIIcon--regularBottom-oQfDL-5-0-0-9 {\n  top: calc(var(--spacing-30) + var(--spacing-2-5)); /* 13px */\n  left: calc(var(--spacing-30) + var(--spacing-05)); /* 14px */\n}\n\n.iconButton-module-AIIconButton-AIIcon--largeBottom-RQtt--5-0-0-9 {\n  top: calc(var(--spacing-40) + var(--spacing-2-5)); /* 17px */\n  left: calc(var(--spacing-40) + var(--spacing-05)); /* 18px */\n}\n";
var styles$2 = {"AIIconButton":"iconButton-module-AIIconButton-BtFJz-5-0-0-9","AIIconButton--large":"iconButton-module-AIIconButton--large-2EnOg-5-0-0-9","AIIconButton--regular":"iconButton-module-AIIconButton--regular-TAz71-5-0-0-9","AIIconButton-icon":"iconButton-module-AIIconButton-icon-nj5xZ-5-0-0-9","AIIconButton-AIIcon":"iconButton-module-AIIconButton-AIIcon-xdcj5-5-0-0-9","AIIconButton-AIIcon--regularTop":"iconButton-module-AIIconButton-AIIcon--regularTop-vGg0e-5-0-0-9","AIIconButton-AIIcon--largeTop":"iconButton-module-AIIconButton-AIIcon--largeTop-3HqjO-5-0-0-9","AIIconButton-AIIcon--regularBottom":"iconButton-module-AIIconButton-AIIcon--regularBottom-oQfDL-5-0-0-9","AIIconButton-AIIcon--largeBottom":"iconButton-module-AIIconButton-AIIcon--largeBottom-RQtt--5-0-0-9"};
styleInject(css_248z$2);

const SaraIcon = props => {
  const {
    size,
    position,
    disabled
  } = props;
  const AIIconClassNames = classNames({
    [styles$2['AIIconButton-AIIcon']]: true,
    [styles$2['AIIconButton-AIIcon--largeTop']]: position === 'top' && size === 'large',
    [styles$2['AIIconButton-AIIcon--regularTop']]: position === 'top' && size === 'regular',
    [styles$2['AIIconButton-AIIcon--regularBottom']]: position === 'bottom' && size === 'regular',
    [styles$2['AIIconButton-AIIcon--largeBottom']]: position === 'bottom' && size === 'large'
  });
  if (disabled) {
    return /*#__PURE__*/React.createElement(SaraIconDisabled, {
      className: AIIconClassNames
    });
  }
  return /*#__PURE__*/React.createElement(SaraIconDefault, {
    className: AIIconClassNames
  });
};
SaraIcon.defaultProps = {
  size: 'regular',
  position: 'top'
};

const AIIconButton = props => {
  const {
    icon,
    position,
    className,
    size,
    strokeColor,
    tooltip,
    disabled,
    ...rest
  } = props;
  const buttonClassNames = classNames({
    [styles$2.AIIconButton]: true,
    [styles$2['AIIconButton--regular']]: size === 'regular',
    [styles$2['AIIconButton--large']]: size === 'large'
  }, className);
  const IconClassNames = classNames({
    [styles$2['AIIconButton-icon']]: true,
    ['material-symbols']: true,
    ['material-symbols-rounded']: true
  });
  const sizeMapping = {
    regular: 16,
    large: 20
  };
  const iconStyles = {
    fontSize: `${sizeMapping[size]}px`,
    width: `${sizeMapping[size]}px`,
    height: `${sizeMapping[size]}px`,
    color: disabled ? '#A6A6A6' : 'rgb(0, 0, 0)'
  };
  const saraIconProps = {
    disabled,
    size,
    position
  };
  return /*#__PURE__*/React.createElement(Tooltip, {
    tooltip: tooltip,
    showTooltip: !!tooltip && !disabled
  }, /*#__PURE__*/React.createElement("button", _extends$2({
    className: buttonClassNames,
    "data-test": "DesignSystem-AI-IconButton",
    disabled: disabled
  }, rest, {
    style: {
      color: strokeColor
    }
  }), /*#__PURE__*/React.createElement("i", {
    "data-test": "DesignSystem-Icon",
    className: IconClassNames,
    style: iconStyles
  }, icon), /*#__PURE__*/React.createElement(SaraIcon, saraIconProps)));
};
AIIconButton.defaultProps = {
  size: 'regular',
  position: 'top',
  strokeColor: '#fff'
};

var css_248z$1 = ".chip-module-AIChip-BtOef-5-0-0-9 {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: var(--border-radius-30);\n  padding: var(--spacing-05) var(--spacing-20);\n  cursor: pointer;\n  width: -moz-fit-content;\n  width: fit-content;\n  border: 0;\n  background: linear-gradient(\n    274deg,\n    rgba(231, 56, 79, 0.24) 0%,\n    rgba(231, 56, 79, 0.24) 19.79%,\n    rgba(240, 125, 0, 0.24) 100%\n  );\n}\n\n.chip-module-AIChip-BtOef-5-0-0-9:hover {\n  background: linear-gradient(\n    274deg,\n    rgba(231, 56, 79, 0.32) 0%,\n    rgba(231, 56, 79, 0.32) 19.79%,\n    rgba(240, 125, 0, 0.32) 100%\n  );\n}\n\n.chip-module-AIChip-BtOef-5-0-0-9:active {\n  background: linear-gradient(\n    274deg,\n    rgba(231, 56, 79, 0.48) 0%,\n    rgba(231, 56, 79, 0.48) 19.79%,\n    rgba(240, 125, 0, 0.48) 100%\n  );\n}\n\n.chip-module-AIChip-BtOef-5-0-0-9:focus,\n.chip-module-AIChip-BtOef-5-0-0-9:focus-visible {\n  box-shadow: var(--shadow-spread) var(--secondary-shadow);\n  outline: none;\n}\n\n.chip-module-AIChip-icon-n5kJL-5-0-0-9 {\n  width: var(--spacing-40);\n  height: var(--spacing-40);\n  font-size: var(--spacing-40) !important;\n  margin-right: var(--spacing-10);\n  -webkit-background-clip: text;\n          background-clip: text;\n  color: var(--inverse);\n}\n\n.chip-module-AIChip-text-EfbZT-5-0-0-9 {\n  color: var(--inverse);\n  font-size: var(--font-size);\n  line-height: var(--font-height);\n  font-family: var(--font-family);\n}\n\n/* Disabled Chip */\n\n.chip-module-AIChip--disabled-R4qHn-5-0-0-9 {\n  background: linear-gradient(\n    274deg,\n    rgba(231, 56, 79, 0.24) 0%,\n    rgba(231, 56, 79, 0.24) 19.79%,\n    rgba(240, 125, 0, 0.24) 100%\n  );\n}\n\n.chip-module-AIChip-icon--disabled-UBH8e-5-0-0-9 {\n  -webkit-background-clip: text;\n          background-clip: text;\n  color: var(--inverse-lightest);\n}\n\n.chip-module-AIChip-text--disabled-fCBlY-5-0-0-9 {\n  color: var(--inverse-lightest);\n}\n\n.chip-module-AIChip-BtOef-5-0-0-9:disabled {\n  cursor: not-allowed;\n  background: linear-gradient(\n    274deg,\n    rgba(231, 56, 79, 0.24) 0%,\n    rgba(231, 56, 79, 0.24) 19.79%,\n    rgba(240, 125, 0, 0.24) 100%\n  );\n}\n";
var styles$1 = {"AIChip":"chip-module-AIChip-BtOef-5-0-0-9","AIChip-icon":"chip-module-AIChip-icon-n5kJL-5-0-0-9","AIChip-text":"chip-module-AIChip-text-EfbZT-5-0-0-9","AIChip--disabled":"chip-module-AIChip--disabled-R4qHn-5-0-0-9","AIChip-icon--disabled":"chip-module-AIChip-icon--disabled-UBH8e-5-0-0-9","AIChip-text--disabled":"chip-module-AIChip-text--disabled-fCBlY-5-0-0-9"};
styleInject(css_248z$1);

const AIChip = props => {
  const {
    label,
    icon,
    disabled,
    name,
    className,
    ...rest
  } = props;
  const ChipClassNames = classNames({
    [styles$1.AIChip]: true,
    [styles$1['AIChip--disabled']]: disabled
  }, className);
  const IconClassNames = classNames({
    [styles$1['AIChip-icon']]: true,
    [styles$1['AIChip-icon--disabled']]: disabled,
    ['material-symbols']: true,
    ['material-symbols-rounded']: true
  });
  const TextClassNames = classNames({
    [styles$1['AIChip-text']]: true,
    [styles$1['AIChip-text--disabled']]: disabled
  });
  return /*#__PURE__*/React.createElement("button", _extends$2({
    type: "button",
    "data-test": "DesignSystem-AI-Chip",
    className: ChipClassNames,
    disabled: disabled
  }, rest), /*#__PURE__*/React.createElement("i", {
    "data-test": "DesignSystem-AI-Chip-Icon",
    className: IconClassNames
  }, icon), /*#__PURE__*/React.createElement("span", {
    "data-test": "DesignSystem-AI-Chip-Text",
    className: TextClassNames
  }, label));
};

var css_248z = ".chat-module-AIResponse-container--glow-33hYs-5-0-0-9 {\n  background: linear-gradient(white, white) padding-box,\n    linear-gradient(to right, rgba(254, 172, 95, 1) 9%, rgba(255, 31, 136, 1) 48%, rgba(227, 28, 121, 0.48) 100%)\n      border-box;\n  border: var(--spacing-2-5) solid transparent;\n  border-radius: var(--border-radius-30);\n}\n\n.chat-module-AIResponse-container-OdpKS-5-0-0-9 {\n  border-radius: var(--border-radius-30);\n  border: var(--border-width-2-5) solid var(--secondary);\n  padding: var(--spacing-20) var(--spacing-30);\n}\n\n.chat-module-AIResponse-box--glow-V9QG9-5-0-0-9 {\n  padding: var(--spacing-20) var(--spacing-30);\n  border-radius: var(--spacing-30);\n  background: linear-gradient(to right, rgba(240, 125, 0, 0.04), rgba(227, 28, 121, 0.0192));\n}\n\n.chat-module-AIResponse-actionBar-6fyXH-5-0-0-9 {\n  margin-top: var(--spacing-10);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-wrap: wrap;\n}\n\n.chat-module-AIResponse-button-kYbCE-5-0-0-9 {\n  opacity: var(--opacity-12);\n}\n\n.chat-module-AIResponse-box-AFv7W-5-0-0-9:hover .chat-module-AIResponse-button-kYbCE-5-0-0-9,\n.chat-module-AIResponse-box--glow-V9QG9-5-0-0-9:hover .chat-module-AIResponse-button-kYbCE-5-0-0-9 {\n  opacity: 1;\n}\n\n.chat-module-AIResponse-button--selected-2WUcQ-5-0-0-9 {\n  opacity: 1;\n}\n\n.chat-module-AIResponse-metaData-eT5c3-5-0-0-9 {\n  margin-left: calc(var(--spacing-80) + var(--spacing-20));\n}\n";
var styles = {"AIResponse-container--glow":"chat-module-AIResponse-container--glow-33hYs-5-0-0-9","AIResponse-container":"chat-module-AIResponse-container-OdpKS-5-0-0-9","AIResponse-box--glow":"chat-module-AIResponse-box--glow-V9QG9-5-0-0-9","AIResponse-actionBar":"chat-module-AIResponse-actionBar-6fyXH-5-0-0-9","AIResponse-button":"chat-module-AIResponse-button-kYbCE-5-0-0-9","AIResponse-box":"chat-module-AIResponse-box-AFv7W-5-0-0-9","AIResponse-button--selected":"chat-module-AIResponse-button--selected-2WUcQ-5-0-0-9","AIResponse-metaData":"chat-module-AIResponse-metaData-eT5c3-5-0-0-9"};
styleInject(css_248z);

const ChatBox = props => {
  const {
    children,
    className,
    showGlow,
    ...rest
  } = props;
  const chatContainerClassNames = classNames({
    [styles['AIResponse-container']]: !showGlow,
    [styles['AIResponse-container--glow']]: showGlow
  }, className);
  const chatBoxClassNames = classNames({
    [styles['AIResponse-box--glow']]: showGlow,
    [styles['AIResponse-box']]: !showGlow
  });
  return /*#__PURE__*/React.createElement("div", _extends$2({
    className: chatContainerClassNames,
    "data-test": "DesignSystem-AIResponse-Container"
  }, rest), /*#__PURE__*/React.createElement("div", {
    className: chatBoxClassNames,
    "data-test": "DesignSystem-AIResponse-Box"
  }, children));
};
ChatBox.defaultProps = {
  showGlow: true
};

const ChatButton = props => {
  const {
    className,
    selected,
    ...rest
  } = props;
  const chatButtonClassNames = classNames({
    [styles['AIResponse-button']]: true,
    [styles['AIResponse-button--selected']]: selected
  }, className);
  return /*#__PURE__*/React.createElement(Button, _extends$2({
    "data-test": "DesignSystem-AIResponse-Button"
  }, rest, {
    selected: selected,
    size: "tiny",
    largeIcon: true,
    appearance: "transparent",
    className: chatButtonClassNames
  }));
};

const ChatActionBar = props => {
  const {
    children,
    className,
    ...rest
  } = props;
  const actionBarClassNames = classNames({
    [styles['AIResponse-actionBar']]: true
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    className: actionBarClassNames,
    "data-test": "DesignSystem-AIResponse-ActionBar"
  }, rest), children);
};

const ChatBody = props => {
  const {
    children,
    className,
    ...rest
  } = props;
  const chatBodyClassNames = classNames({
    'pb-3': true
  }, className);
  return /*#__PURE__*/React.createElement("div", _extends$2({
    className: chatBodyClassNames,
    "data-test": "DesignSystem-AIResponse-Body"
  }, rest), children);
};

const AIResponseBubble = props => {
  const {
    children,
    showAvatar,
    className,
    ...rest
  } = props;
  const chatContainerClassNames = classNames({
    ['ml-4']: showAvatar
  }, className);
  if (showAvatar) {
    return /*#__PURE__*/React.createElement("div", {
      className: "d-flex"
    }, /*#__PURE__*/React.createElement(Sara, {
      "data-test": "DesignSystem-AIResponse-Avatar"
    }), /*#__PURE__*/React.createElement(ChatBox, _extends$2({}, rest, {
      className: chatContainerClassNames
    }), children));
  }
  return /*#__PURE__*/React.createElement(ChatBox, props, children);
};
const AIResponse = props => {
  const {
    metaData,
    showAvatar
  } = props;
  const metaDataClassName = classNames({
    [styles['AIResponse-metaData']]: showAvatar,
    ['mb-2']: true
  });
  const memoizedMetaData = React.useMemo(() => metaData?.(), [metaData]);
  if (metaData) {
    return /*#__PURE__*/React.createElement("div", {
      className: "d-flex flex-column"
    }, /*#__PURE__*/React.createElement("div", {
      "data-test": "DesignSystem-AIResponse-Metadata",
      className: metaDataClassName
    }, memoizedMetaData), /*#__PURE__*/React.createElement(AIResponseBubble, props));
  }
  return /*#__PURE__*/React.createElement(AIResponseBubble, props);
};
AIResponse.Button = ChatButton;
AIResponse.ActionBar = ChatActionBar;
AIResponse.Body = ChatBody;

var version = "5.0.0-9";

export { AIButton, AIChip, AIIconButton, AIResponse, ActionCard, Avatar, AvatarGroup, AvatarSelection, Backdrop, Badge, Breadcrumbs, Button, Calendar, Caption, Card, CardBody, CardFooter, CardHeader, CardSubdued, Chat, ChatMessage, Checkbox, Chip, ChipGroup, ChipInput, ChoiceList, Collapsible, Column, Combobox, DatePicker, DateRangePicker, Dialog, Divider, Dropdown, Dropzone, EditableChipInput, EditableDropdown, EditableInput, EmptyState, FileList, FileUploader, FileUploaderList, FullscreenModal, Grid, GridCell, Heading, HelpText, HorizontalNav, Icon, InlineMessage, Input, X as InputMask, KeyValuePair, Label, Legend, Link, LinkButton, List, Listbox, Menu, Message, MetaList, Meter, MetricInput, Modal, ModalBody, ModalDescription, ModalFooter, ModalHeader, MultiSlider, Navigation, OutsideClick, PageHeader, Pagination, Paragraph, Pills, Placeholder, PlaceholderImage, PlaceholderParagraph, Popover, ProgressBar, ProgressRing, Radio, RangeSlider, Row, Sara, SaraSparkle, Select, SelectionCard, Sidesheet, Slider, Spinner, StatusHint, Stepper, Subheading, Switch, Tab, Table, Tabs, TabsWrapper, Text, TextField, Textarea, TimePicker, Toast, Tooltip, index as Utils, VerificationCodeInput, VerticalNav, version };
